public with sharing class CustomerFactVulnerabilityEvaluation {

    //The method is invocable to ensure this can be called from a flow, allowing us to use this within declarative automation. 
    @InvocableMethod(label = 'Evaluate household vulnerability' description = 'Given a list of accounts, evaluate vulnerability status updates.' category = 'Flow')
    public static List<FlowOutputs> evaluateInvocable(List<FlowInputs> requests){
        List<FlowOutputs> results = new List<FlowOutputs>();
        for (FlowInputs request : requests) {
            FlowOutputs result = new FlowOutputs();
            result.success = CustomerFactVulnerabilityHandler.evaluateVulnerability(request.accountList);
            results.add(result);
        }
        return results;
    }

    public class FlowInputs{
        @InvocableVariable(required=true)
        public List<Account> accountList;

    }
    
    public class FlowOutputs{
        @InvocableVariable
        public Boolean success;
    }
}