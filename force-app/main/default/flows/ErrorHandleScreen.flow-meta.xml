<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <description>This reusable flow is used to handle errors that occur in screen flows. It takes inputs that determine how the error is handled and what messaging to display. This ensures consistent experience for users when errors occur.</description>
    <environments>Default</environments>
    <interviewLabel>Error | Handle | Screen {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Error | Handle | Screen</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordRollbacks>
        <name>Roll_back</name>
        <label>Roll back</label>
        <locationX>176</locationX>
        <locationY>134</locationY>
        <connector>
            <targetReference>Handle_error_with_navigation</targetReference>
        </connector>
    </recordRollbacks>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>Handle_error_with_navigation</name>
        <label>Handle error with navigation</label>
        <locationX>176</locationX>
        <locationY>242</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Toast</name>
            <extensionName>c:displayToastFlow</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>message</name>
                <value>
                    <elementReference>toastMessage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>mode</name>
                <value>
                    <elementReference>toastMode</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>title</name>
                <value>
                    <elementReference>toastTitle</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>triggerNavigationNextEvent</name>
                <value>
                    <elementReference>closeFlowAfterToast</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>variant</name>
                <value>
                    <stringValue>error</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>showToast</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ErrorMessagePrompt</name>
            <fieldText>&lt;p&gt;An error occurred: &lt;/p&gt;&lt;p&gt;{!errorMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>closeFlowAfterToast</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Roll_back</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>If true, the toast will fire off a next navigation event that will end the flow</description>
        <name>closeFlowAfterToast</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>NO ERROR MESSAGE SPECIFIED ON INPUT</stringValue>
        </value>
    </variables>
    <variables>
        <name>showToast</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </variables>
    <variables>
        <name>toastMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>TOAST MESSAGE NOT SPECIFIED ON INPUT</stringValue>
        </value>
    </variables>
    <variables>
        <name>toastMode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>dismissible</stringValue>
        </value>
    </variables>
    <variables>
        <name>toastTitle</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>TITLE NOT SPECIFIED ON INPUT</stringValue>
        </value>
    </variables>
</Flow>
