<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>AssignNewValues</name>
        <label>AssignNewValues</label>
        <locationX>1546</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>recordToUpdate.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopThroughAccounts.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>NoSegmentSelected</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateCurrentAccountInLoop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>calcTotalHouseholds</name>
        <label>calcTotalHouseholds</label>
        <locationX>490</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>TotalHouseholds</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>GetAccounts</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TotalHouseholdsMissingSegment</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>FilterForHouseholdsMissingSegment</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AnySegmentsMissing</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>ClearVariables</name>
        <label>Clear variables</label>
        <locationX>1546</locationX>
        <locationY>1430</locationY>
        <assignmentItems>
            <assignToReference>recordToUpdate.Id</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordToUpdate.CoreSegment__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordToUpdate.CoreSegmentStatus__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordToUpdate.Subsegment__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>LoopThroughAccounts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>NoSelection</name>
        <label>No selection</label>
        <locationX>1018</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>NoSegmentSelected</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>HouseholdsMissingSegmentsTable1</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <name>FilterForHouseholdsMissingSegment</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Filter for households missing segment</label>
        <locationX>490</locationX>
        <locationY>350</locationY>
        <assignNextValueToReference>currentItem_FilterForHouseholdsMissingSegment</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>GetAccounts</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_FilterForHouseholdsMissingSegment.CoreSegment__c</leftValueReference>
            <operator>IsNull</operator>
            <rightValue>
                <booleanValue>true</booleanValue>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>calcTotalHouseholds</targetReference>
        </connector>
    </collectionProcessors>
    <decisions>
        <name>AnySegmentsMissing</name>
        <label>Any Segments Missing?</label>
        <locationX>490</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>WelcomeScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NoRecordsToUpdate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>TotalHouseholdsMissingSegment</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CompleteScreen</targetReference>
            </connector>
            <label>No records to update</label>
        </rules>
    </decisions>
    <decisions>
        <name>Segments_Added_Check</name>
        <label>Segments Added Check</label>
        <locationX>1282</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>AssignNewValues</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NoNotAdded</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>recordToUpdate.CoreSegment__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>recordToUpdate.CoreSegmentStatus__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>recordToUpdate.Subsegment__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>NoSelection</targetReference>
            </connector>
            <label>No, not added</label>
        </rules>
        <rules>
            <name>Invalid_sub_segments</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>invalidSubSegment</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>HouseholdsMissingSegmentsTable1</targetReference>
            </connector>
            <label>Invalid sub-segments</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>invalidSubSegment</name>
        <dataType>Boolean</dataType>
        <expression>INCLUDES({!recordToUpdate.Subsegment__c}, &quot;No sub-segment&quot;)
&amp;&amp;
(INCLUDES({!recordToUpdate.Subsegment__c}, &quot;Products in Trust (+ requirements to work with Trustees etc.)&quot;)
||
INCLUDES({!recordToUpdate.Subsegment__c}, &quot;Power of attorney in place&quot;)
||
INCLUDES({!recordToUpdate.Subsegment__c}, &quot;Business owners - with no future exit or sale expected&quot;)
||
INCLUDES({!recordToUpdate.Subsegment__c}, &quot;Business owners - with future exit planned, or exit taking place&quot;)
||
INCLUDES({!recordToUpdate.Subsegment__c}, &quot;Ultra-high net worth&quot;)
||
INCLUDES({!recordToUpdate.Subsegment__c}, &quot;Vulnerable customers&quot;)
||
INCLUDES({!recordToUpdate.Subsegment__c}, &quot;Conflict of interest customers&quot;)
||
INCLUDES({!recordToUpdate.Subsegment__c}, &quot;No Capacity for Loss&quot;)
||
INCLUDES({!recordToUpdate.Subsegment__c}, &quot;DB Transfer Advice&quot;))</expression>
    </formulas>
    <interviewLabel>Account | Consumer Duty Client Segmentation Screen {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Account | Consumer Duty Client Segmentation Screen</label>
    <loops>
        <name>LoopThroughAccounts</name>
        <label>Loop through accounts</label>
        <locationX>930</locationX>
        <locationY>890</locationY>
        <collectionReference>HouseholdsMissingSegmentsTable2.selectedRows</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>HouseholdsMissingSegmentsTable1</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Gets Households (where Core Segment is BLANK) owned by the logged in user</description>
        <name>GetAccounts</name>
        <label>Get Accounts</label>
        <locationX>490</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>FilterForHouseholdsMissingSegment</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND (3 OR 4 OR 5 OR 6)</filterLogic>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetRecordTypeID.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>FinServ__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Onboarding</stringValue>
            </value>
        </filters>
        <filters>
            <field>FinServ__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <filters>
            <field>FinServ__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Offboarding</stringValue>
            </value>
        </filters>
        <filters>
            <field>FinServ__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Former</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Account</object>
        <sortField>FinServ__Status__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRecordTypeID</name>
        <label>Get record type ID</label>
        <locationX>490</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetAccounts</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>IndustriesHousehold</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateCurrentAccountInLoop</name>
        <label>Update Current Account In Loop</label>
        <locationX>1546</locationX>
        <locationY>1322</locationY>
        <connector>
            <targetReference>ClearVariables</targetReference>
        </connector>
        <inputReference>recordToUpdate</inputReference>
    </recordUpdates>
    <screens>
        <name>CompleteScreen</name>
        <label>Complete screen</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>CompleteMessage</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;You&#39;re up to date!&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;All the&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt; households you own have a core segment.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>HouseholdsMissingSegmentsTable</name>
        <label>HouseholdsMissingSegmentsTable</label>
        <locationX>930</locationX>
        <locationY>782</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>LoopThroughAccounts</targetReference>
        </connector>
        <fields>
            <name>HouseholdsToUpdateSelection</name>
            <fieldText>&lt;p&gt;Please select the households you wish to update from the table below:&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>HouseholdsMissingSegmentsTable2</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>Account</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Households Missing Segments</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>MULTI_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>FilterForHouseholdsMissingSegment</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;Name&quot;,&quot;guid&quot;:&quot;column-263f&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Account Name&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;FinServ__Status__c&quot;,&quot;guid&quot;:&quot;column-deb9&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Status&quot;,&quot;type&quot;:&quot;text&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>isShowSearchBar</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>HouseholdsMissingSegmentsTable1</name>
        <label>HouseholdsMissingSegmentsTable</label>
        <locationX>1282</locationX>
        <locationY>998</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Segments_Added_Check</targetReference>
        </connector>
        <fields>
            <name>NoSegmentAdded</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0);&quot;&gt;Please select a Core Segment, Core Segment Status &amp;amp; Sub-segment.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1</conditionLogic>
                <conditions>
                    <leftValueReference>NoSegmentSelected</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>AccountName</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 18px;&quot;&gt;&lt;u&gt;Account Name: &lt;/u&gt;{!LoopThroughAccounts.Name}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <objectFieldReference>recordToUpdate.CoreSegment__c</objectFieldReference>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <objectFieldReference>recordToUpdate.CoreSegmentStatus__c</objectFieldReference>
        </fields>
        <fields>
            <name>SubSegmentError</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 60, 0); font-size: 14px;&quot;&gt;&quot;No sub-segment&quot; cannot be selected with any other sub-segment options. &lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>invalidSubSegment</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <fieldType>ObjectProvided</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <objectFieldReference>recordToUpdate.Subsegment__c</objectFieldReference>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>WelcomeScreen</name>
        <label>Welcome screen</label>
        <locationX>930</locationX>
        <locationY>674</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>HouseholdsMissingSegmentsTable</targetReference>
        </connector>
        <fields>
            <name>WelcomeMessage</name>
            <fieldText>&lt;p&gt;You have {!TotalHouseholds} households in your name that require a segment.&lt;/p&gt;&lt;p&gt;{!TotalHouseholdsMissingSegment} of those households have not been assigned a core segment. Please click next to update those households.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>364</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetRecordTypeID</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>WelcomeScreenText</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;You currently own a total of X households.&lt;/p&gt;&lt;p&gt;X of those households have not been assigned a core segment. Please click next to update those households.&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>currentItem_FilterForHouseholdsMissingSegment</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>NoSegmentSelected</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RecordsToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>recordToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>TotalHouseholds</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>TotalHouseholdsMissingSegment</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
