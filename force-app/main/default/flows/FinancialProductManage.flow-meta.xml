<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Create_Cash_Account</name>
        <label>Create Cash Account</label>
        <locationX>930</locationX>
        <locationY>4310</locationY>
        <actionName>NovaServiceCash.createCashAccount</actionName>
        <actionType>externalService</actionType>
        <connector>
            <targetReference>Was_record_successful</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Handle_errors_NS</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>createCashBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>NovaServiceCash.createCashAccount</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>responseCode</assignToReference>
            <name>responseCode</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>ExceptionMessage</assignToReference>
            <name>defaultExc</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Find_people_with_existing_roles</name>
        <label>Find people with existing roles</label>
        <locationX>1018</locationX>
        <locationY>2222</locationY>
        <actionName>ClientsWithRoles</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Get_Public_Providers</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_no_roles_error</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>clients</name>
            <value>
                <elementReference>Get_people_in_household</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Roles</name>
            <value>
                <elementReference>PeopleInRoles</elementReference>
            </value>
        </inputParameters>
        <nameSegment>ClientsWithRoles</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>preSelectedOwners</assignToReference>
            <name>clientsWithRoles</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Update_cash_account</name>
        <label>Update cash account</label>
        <locationX>1634</locationX>
        <locationY>4310</locationY>
        <actionName>NovaServiceCash.updateCashAccount</actionName>
        <actionType>externalService</actionType>
        <connector>
            <targetReference>Was_record_successful</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Handle_errors_NS</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>cashAccountPlatformId</name>
            <value>
                <elementReference>financialProduct.PlatformId__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>updateCashBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>NovaServiceCash.updateCashAccount</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>responseCode</assignToReference>
            <name>responseCode</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>ExceptionMessage</assignToReference>
            <name>defaultExc</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Add_restricted_provider_to_body</name>
        <label>Add restricted provider to body</label>
        <locationX>1722</locationX>
        <locationY>4010</locationY>
        <assignmentItems>
            <assignToReference>updateCashBody.publicProvider.sfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.PublicProviderList__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.publicProvider.customName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.CustomProviderName__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Update_Body</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_acr_Ids_to_collection</name>
        <label>Assign acr Ids to collection</label>
        <locationX>1370</locationX>
        <locationY>1814</locationY>
        <assignmentItems>
            <assignToReference>acrContactIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loops_Acrs.Contact.AccountId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loops_Acrs</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Create_Body</name>
        <label>Assign Create Body</label>
        <locationX>930</locationX>
        <locationY>4202</locationY>
        <assignmentItems>
            <assignToReference>createCashBody.currentValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.Value__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.dateOfValuation</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.ValuationDate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.fixedTermEndDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.FixedTermEndDate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.noticePeriodDays</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.NoticePeriodDays__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.Status__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.typeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FinancialProductType.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.roles</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>roleBody1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.householdId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.internalNotes</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.NotesInternal__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.hasFixedTerm</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>HasAFixedTermFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.hasNoticePeriod</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>hasNoticePeriod</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.interestRate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.InterestRate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.issueNumber</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.IssueNumber__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Cash_Account</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Customer_Notes</name>
        <label>Assign Customer Notes</label>
        <locationX>314</locationX>
        <locationY>1706</locationY>
        <assignmentItems>
            <assignToReference>financialProduct.NotesCustomer__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Notes_Customer</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_roles1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_error</name>
        <label>Assign error</label>
        <locationX>2250</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>You do not have correct permissions to take this action. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>ErrorScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Fin_Prod</name>
        <label>Assign Fin Prod</label>
        <locationX>710</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>financialProduct</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Financial_Product</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Household_Id_Update</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_fin_prod_type_to_collection</name>
        <label>Assign fin prod type to collection</label>
        <locationX>710</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>finProdTypeCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Fin_Prod_Type</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Role</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_financial_product_type</name>
        <label>Assign financial product type</label>
        <locationX>710</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>FinancialProductType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Fin_Prod_Type</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_fin_prod_type_to_collection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_financial_product_typeId</name>
        <label>Assign financial product type</label>
        <locationX>578</locationX>
        <locationY>1814</locationY>
        <assignmentItems>
            <assignToReference>financialProduct.FinancialProductType__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FinancialProductType.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Get_ACRs_in_household</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_household_Id</name>
        <label>Assign household Id</label>
        <locationX>358</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>householdId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Which_action_was_taken</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Household_Id_Update</name>
        <label>Assign household Id</label>
        <locationX>710</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>householdId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Financial_Product.Household__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Fin_Prod_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_new_values_to_financial_product</name>
        <label>Assign new values to financial product</label>
        <locationX>1282</locationX>
        <locationY>3278</locationY>
        <assignmentItems>
            <assignToReference>financialProduct.Household__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Financial_Product.FinancialProductType__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FinancialProductType.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.FixedTermEndDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Fixed_term_end_date</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.NotesInternal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Notes_internal</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.NoticePeriodDays__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Notice_period_days</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.ValuationDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.ValuationDate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.Value__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.Value__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.InterestRate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>interestRateFromula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.IssueNumber__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Issue_number</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.PublicProviderList__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Public_provider_name.selectedChoiceValues</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.CustomProviderName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Custom_provider_name</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_selected_owners</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_no_roles_error</name>
        <label>Assign no roles error</label>
        <locationX>1282</locationX>
        <locationY>2330</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>We couldn&#39;t find any existing owners. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ErrorScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_owner_to_collection</name>
        <label>Assign owner to collection</label>
        <locationX>1370</locationX>
        <locationY>3602</locationY>
        <assignmentItems>
            <assignToReference>roleBody1</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>roleBody</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_selected_owners</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_provider</name>
        <label>Assign provider</label>
        <locationX>1018</locationX>
        <locationY>4010</locationY>
        <assignmentItems>
            <assignToReference>createCashBody.publicProvider.sfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.PublicProviderList__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>createCashBody.publicProvider.customName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.CustomProviderName__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Create_Body</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_role_body</name>
        <label>Assign role body</label>
        <locationX>754</locationX>
        <locationY>5342</locationY>
        <assignmentItems>
            <assignToReference>roleBody.personSfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_roles1.Person__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>roleBody.role</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_roles1.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>roleBody.role</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_roles1.Role__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_to_Collection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_role_person_id_to_collection</name>
        <label>Assign role person id to collection</label>
        <locationX>798</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>PeopleInRoles</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_roles.Person__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_roles</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Roles</name>
        <label>Assign Roles</label>
        <locationX>1370</locationX>
        <locationY>3494</locationY>
        <assignmentItems>
            <assignToReference>roleBody.personSfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_selected_owners.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>roleBody.role</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Owner</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_owner_to_collection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_Collection</name>
        <label>Assign to Collection</label>
        <locationX>754</locationX>
        <locationY>5450</locationY>
        <assignmentItems>
            <assignToReference>roleBody1</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>roleBody</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_roles1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Update_Body</name>
        <label>Assign Update Body</label>
        <locationX>1634</locationX>
        <locationY>4202</locationY>
        <assignmentItems>
            <assignToReference>updateCashBody.currentValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.Value__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.dateOfValuation</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.ValuationDate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.fixedTermEndDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.FixedTermEndDate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.householdId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.internalNotes</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.NotesInternal__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.noticePeriodDays</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.NoticePeriodDays__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.roles</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>roleBody1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.Status__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.typeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.FinancialProductType__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.platformLastModifiedDateTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.PlatformLastModifiedDateTime__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.platformId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.PlatformId__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.notes</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.NotesCustomer__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.hasFixedTerm</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>HasAFixedTermFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.hasNoticePeriod</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>hasNoticePeriod</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.interestRate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.InterestRate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updateCashBody.issueNumber</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>financialProduct.IssueNumber__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_cash_account</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Valuations_to_screen</name>
        <label>Assign Valuations to screen</label>
        <locationX>50</locationX>
        <locationY>1706</locationY>
        <assignmentItems>
            <assignToReference>financialProduct.Value__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ValueUpdate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.ValuationDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Valuation_Date_Update</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_roles1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_valuation_values</name>
        <label>Assignment valuation values</label>
        <locationX>1150</locationX>
        <locationY>3086</locationY>
        <assignmentItems>
            <assignToReference>financialProduct.Value__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Value</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>financialProduct.ValuationDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Valuation_date</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_new_values_to_financial_product</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>ID_is_incorrect</name>
        <label>ID is incorrect</label>
        <locationX>974</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Object id is incorrect</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>ErrorScreen</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>customProviderText</name>
        <choiceText>Custom provider</choiceText>
        <dataType>String</dataType>
    </choices>
    <choices>
        <name>NoChoice</name>
        <choiceText>No</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>No</stringValue>
        </value>
    </choices>
    <choices>
        <name>publicProviderListText</name>
        <choiceText>Public provider list</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Public provider list</stringValue>
        </value>
    </choices>
    <choices>
        <name>YesChoice</name>
        <choiceText>Yes</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Yes</stringValue>
        </value>
    </choices>
    <constants>
        <name>FinProdRecordConst</name>
        <dataType>String</dataType>
        <value>
            <stringValue>a1M</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Are_there_existing_roles</name>
        <label>Are there existing roles?</label>
        <locationX>1282</locationX>
        <locationY>2114</locationY>
        <defaultConnector>
            <targetReference>Get_Public_Providers</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Roles don&#39;t exist</defaultConnectorLabel>
        <rules>
            <name>Roles_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Role</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Find_people_with_existing_roles</targetReference>
            </connector>
            <label>Roles exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>Create_or_update</name>
        <label>Create or update</label>
        <locationX>666</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>ID_is_incorrect</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>Create</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>001</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_household_Id</targetReference>
            </connector>
            <label>Create</label>
        </rules>
        <rules>
            <name>Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>FinProdRecordConst</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Financial_Product</targetReference>
            </connector>
            <label>Update</label>
        </rules>
    </decisions>
    <decisions>
        <name>Create_or_update_valuation</name>
        <label>Create or update</label>
        <locationX>1282</locationX>
        <locationY>2978</locationY>
        <defaultConnector>
            <targetReference>Assign_new_values_to_financial_product</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Update</defaultConnectorLabel>
        <rules>
            <name>Create_assign_valuation</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>financialProduct.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignment_valuation_values</targetReference>
            </connector>
            <label>Create</label>
        </rules>
    </decisions>
    <decisions>
        <name>CreateOrUpdate</name>
        <label>Create or update?</label>
        <locationX>1282</locationX>
        <locationY>3794</locationY>
        <defaultConnector>
            <targetReference>Has_restricted_provider_update</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Update</defaultConnectorLabel>
        <rules>
            <name>CreateAction</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>financialProduct.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Has_restricted_provider</targetReference>
            </connector>
            <label>Create</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_user_have_correct_permissions</name>
        <label>Does user have correct permissions?</label>
        <locationX>1458</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>Assign_error</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No permissions</defaultConnectorLabel>
        <rules>
            <name>Permissions_are_correct</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Permission.FinancialProductManage</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_or_update</targetReference>
            </connector>
            <label>Permissions are correct</label>
        </rules>
    </decisions>
    <decisions>
        <description>If the type has a restricted provider, we don&#39;t send this to the Nova service as it will take the default provider value directly from the type.</description>
        <name>Has_restricted_provider</name>
        <label>Has restricted provider</label>
        <locationX>930</locationX>
        <locationY>3902</locationY>
        <defaultConnector>
            <targetReference>Assign_provider</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No restricted provider</defaultConnectorLabel>
        <rules>
            <name>Restricted_provider</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>hasRestrictedProvider</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Create_Body</targetReference>
            </connector>
            <label>Restricted provider</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_restricted_provider_update</name>
        <label>Has restricted provider update</label>
        <locationX>1634</locationX>
        <locationY>3902</locationY>
        <defaultConnector>
            <targetReference>Add_restricted_provider_to_body</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No restricted provider</defaultConnectorLabel>
        <rules>
            <name>Restricted_provider_update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>hasRestrictedProvider</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Update_Body</targetReference>
            </connector>
            <label>Restricted provider update</label>
        </rules>
    </decisions>
    <decisions>
        <name>Was_record_successful</name>
        <label>Was record successful?</label>
        <locationX>1282</locationX>
        <locationY>4742</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Handle_errors_NS</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Error</defaultConnectorLabel>
        <rules>
            <name>Success</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>responseCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>200.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>responseCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>201.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Success_screen</targetReference>
            </connector>
            <label>Success</label>
        </rules>
    </decisions>
    <decisions>
        <name>Which_action_was_taken</name>
        <label>Which action was taken?</label>
        <locationX>666</locationX>
        <locationY>1490</locationY>
        <defaultConnector>
            <targetReference>Get_ACRs_in_household</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Edit</defaultConnectorLabel>
        <rules>
            <name>Update_valuation</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>actionType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Update_Valuation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Valuation_Screen</targetReference>
            </connector>
            <label>Update valuation</label>
        </rules>
        <rules>
            <name>Update_customer_notes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>actionType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Update_Customer_Notes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Customer_Notes_Screen</targetReference>
            </connector>
            <label>Update customer notes</label>
        </rules>
        <rules>
            <name>Create_or_change_type</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>actionType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Change_Financial_Product_Type</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>financialProduct.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_All_Fin_Prod_Types</targetReference>
            </connector>
            <label>Create or change type</label>
        </rules>
    </decisions>
    <description>Create, update and manage financial product and send data to Nova service.</description>
    <dynamicChoiceSets>
        <name>PublicProviderList</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>I don&#39;t know</stringValue>
            </value>
        </filters>
        <object>Public_Provider_Names__c</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>publicProviderListCollection</name>
        <collectionReference>Get_Public_Providers</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>Public_Provider_Names__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>HasAFixedTermFormula</name>
        <dataType>Boolean</dataType>
        <expression>IF(ISNULL({!financialProduct.FixedTermEndDate__c}),false,true)</expression>
    </formulas>
    <formulas>
        <name>hasNoticePeriod</name>
        <dataType>Boolean</dataType>
        <expression>IF(ISNULL({!financialProduct.NoticePeriodDays__c}),false,true)</expression>
    </formulas>
    <formulas>
        <name>hasRestrictedProvider</name>
        <dataType>Boolean</dataType>
        <expression>IF(ISBLANK({!FinancialProductType.DefaultProvider__c}), FALSE, TRUE)</expression>
    </formulas>
    <formulas>
        <name>interestRateFromula</name>
        <dataType>Number</dataType>
        <expression>IF(ISBLANK({!InterestRateRequired}), ({!InterestRate}/100), ({!InterestRateRequired}/100))</expression>
        <scale>4</scale>
    </formulas>
    <formulas>
        <name>providerDefaultFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!financialProduct.CustomProviderName__c}), {!publicProviderListText}, {!customProviderText})</expression>
    </formulas>
    <interviewLabel>Financial product | Manage {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Financial product | Manage</label>
    <loops>
        <name>Loop_roles</name>
        <label>Loop roles</label>
        <locationX>710</locationX>
        <locationY>1106</locationY>
        <collectionReference>Get_Role</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_role_person_id_to_collection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Which_action_was_taken</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_roles1</name>
        <label>Loop roles</label>
        <locationX>666</locationX>
        <locationY>5234</locationY>
        <collectionReference>Get_Role</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_role_body</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Assign_Update_Body</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_selected_owners</name>
        <label>Loop selected owners</label>
        <locationX>1282</locationX>
        <locationY>3386</locationY>
        <collectionReference>Owners.selectedRows</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Roles</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CreateOrUpdate</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loops_Acrs</name>
        <label>Loops Acrs</label>
        <locationX>1282</locationX>
        <locationY>1706</locationY>
        <collectionReference>Get_ACRs_in_household</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_acr_Ids_to_collection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_people_in_household</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_ACRs_in_household</name>
        <label>Get ACRs in household</label>
        <locationX>1282</locationX>
        <locationY>1598</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loops_Acrs</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3) AND 4 AND 5</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Roles</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Client</stringValue>
            </value>
        </filters>
        <filters>
            <field>Roles</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Child</stringValue>
            </value>
        </filters>
        <filters>
            <field>FinServ__PrimaryGroup__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountContactRelation</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_All_Fin_Prod_Types</name>
        <label>Get All Fin Prod Types</label>
        <locationX>578</locationX>
        <locationY>1598</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Choose_Fin_Prod_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Category__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Cash</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>FinancialProductType__c</object>
        <sortField>SortOrder__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Fin_Prod_Type</name>
        <label>Get Fin Prod Type</label>
        <locationX>710</locationX>
        <locationY>674</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_financial_product_type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>financialProduct.FinancialProductType__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>FinancialProductType__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Financial_Product</name>
        <label>Get Financial Product</label>
        <locationX>710</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Fin_Prod</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>FinancialProduct__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_people_in_household</name>
        <label>Get people in household</label>
        <locationX>1282</locationX>
        <locationY>2006</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Are_there_existing_roles</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>acrContactIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>FinServ__Age__pc</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>FinancialProductType.MinimumAge__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>FinServ__Age__pc</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Public_Providers</name>
        <label>Get Public Providers</label>
        <locationX>1282</locationX>
        <locationY>2762</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Input_Financial_Product_Details</targetReference>
        </connector>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Public_Provider_Names__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Role</name>
        <label>Get Role</label>
        <locationX>710</locationX>
        <locationY>998</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_roles</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>FinancialProduct__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>financialProduct.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Role__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>Choose_Fin_Prod_Type</name>
        <label>Choose Fin Prod Type</label>
        <locationX>578</locationX>
        <locationY>1706</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Assign_financial_product_typeId</targetReference>
        </connector>
        <fields>
            <name>FinProdTypes</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>FinancialProductType__c</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Data Table</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>SINGLE_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>Get_All_Fin_Prod_Types</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;Name&quot;,&quot;guid&quot;:&quot;column-2e00&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Product Type Name&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;DescriptionInternal__c&quot;,&quot;guid&quot;:&quot;column-9b8c&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:true,&quot;customHeaderLabel&quot;:&quot;Description&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Description (internal)&quot;,&quot;type&quot;:&quot;text&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectedRows</name>
                <value>
                    <elementReference>finProdTypeCollection</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>FinancialProductType</assignToReference>
                <name>firstSelectedRow</name>
            </outputParameters>
        </fields>
        <nextOrFinishButtonLabel>Choose type</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>ErrorScreen</name>
        <label>ErrorScreen</label>
        <locationX>1282</locationX>
        <locationY>2438</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorMessage1</name>
            <fieldText>&lt;p&gt;There&#39;s been an error!&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!errorMessage}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Please raise a ticket with the product team and include a screenshot of this error and the team will investigate. &lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Input_Financial_Product_Details</name>
        <label>Input Financial Product Details</label>
        <locationX>1282</locationX>
        <locationY>2870</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <backButtonLabel>Back to types</backButtonLabel>
        <connector>
            <targetReference>Create_or_update_valuation</targetReference>
        </connector>
        <fields>
            <name>Information</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;{!FinancialProductType.Name}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Value</name>
            <dataType>Currency</dataType>
            <fieldText>Value</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>financialProduct.Id</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Valuation_date</name>
            <dataType>Date</dataType>
            <fieldText>Valuation date</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Valuation date&lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt; cannot be in the future!&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!Valuation_date} &lt;= TODAY()</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>financialProduct.ValuationDate__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ProviderRadioButtons</name>
            <choiceReferences>publicProviderListText</choiceReferences>
            <choiceReferences>customProviderText</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>providerDefaultFormula</elementReference>
            </defaultValue>
            <fieldText>Please select method to enter provider name</fieldText>
            <fieldType>RadioButtons</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>hasRestrictedProvider</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Public_provider_name</name>
            <choiceReferences>publicProviderListCollection</choiceReferences>
            <defaultValue>
                <elementReference>financialProduct.PublicProviderList__c</elementReference>
            </defaultValue>
            <extensionName>flowruntime:choiceLookup</extensionName>
            <fieldText>Public provider name</fieldText>
            <fieldType>ComponentChoice</fieldType>
            <inputParameters>
                <name>placeholder</name>
                <value>
                    <elementReference>financialProduct.PublicProviderList__r.Name</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>ProviderRadioButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>publicProviderListText</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>hasRestrictedProvider</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Custom_provider_name</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>financialProduct.CustomProviderName__c</elementReference>
            </defaultValue>
            <fieldText>Custom provider name</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>ProviderRadioButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>customProviderText</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>hasRestrictedProvider</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Issue_number</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>financialProduct.IssueNumber__c</elementReference>
            </defaultValue>
            <fieldText>Issue number</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;&lt;span style=&quot;background-color: rgba(232, 232, 232, 0.04); font-size: 12px; color: rgb(2, 2, 2);&quot;&gt;Helps to identify the specific terms and interest rates of NS&amp;amp;I bonds&lt;/span&gt;&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <scale>0</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;Issue number must be 11 digits&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN(TEXT({!Issue_number}))&lt;=11</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>FinancialProductType.HasAnIssueNumber__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Owners</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>Account</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Owners</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>MULTI_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>Get_people_in_household</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>2.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectedRows</name>
                <value>
                    <elementReference>preSelectedOwners</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;Name&quot;,&quot;guid&quot;:&quot;column-66c8&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Account Name&quot;,&quot;type&quot;:&quot;text&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Does_this_account_have_a_fixed_term</name>
            <choiceReferences>YesChoice</choiceReferences>
            <choiceReferences>NoChoice</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>financialProduct.FixedTermFormula__c</elementReference>
            </defaultValue>
            <fieldText>Does this account have a fixed term?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>FinancialProductType.HasAFixedTerm__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Fixed_term_end_date</name>
            <dataType>Date</dataType>
            <defaultValue>
                <elementReference>financialProduct.FixedTermEndDate__c</elementReference>
            </defaultValue>
            <fieldText>Fixed term end date</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>Does_this_account_have_a_fixed_term</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>YesChoice</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>FinancialProductType.HasAFixedTerm__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Does_this_account_have_a_notice_period</name>
            <choiceReferences>YesChoice</choiceReferences>
            <choiceReferences>NoChoice</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>financialProduct.NoticePeriodFormula__c</elementReference>
            </defaultValue>
            <fieldText>Does this account have a notice period?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>FinancialProductType.HasANoticePeriod__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Notice_period_days</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>financialProduct.NoticePeriodDays__c</elementReference>
            </defaultValue>
            <fieldText>Notice period days</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <scale>0</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;strong&gt;Notice period days&lt;/strong&gt; cannot be over 99&lt;/p&gt;</errorMessage>
                <formulaExpression>{!Notice_period_days} &lt;= 99</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>Does_this_account_have_a_notice_period</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>YesChoice</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>FinancialProductType.HasANoticePeriod__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InterestRate</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>financialProduct.InterestRateFormula__c</elementReference>
            </defaultValue>
            <fieldText>Interest rate</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <scale>2</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>FinancialProductType.HasAnInterestRate__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InterestRateRequired</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>financialProduct.InterestRateFormula__c</elementReference>
            </defaultValue>
            <fieldText>Interest rate</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <scale>0</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;Interest rate must be greater than 0% and less than 100%.&lt;/p&gt;</errorMessage>
                <formulaExpression>{!InterestRateRequired} &gt;0
&amp;&amp;
{!InterestRateRequired} &lt;100</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>FinancialProductType.HasAnInterestRate__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Notes_internal</name>
            <defaultValue>
                <stringValue>{!financialProduct.NotesInternal__c}</stringValue>
            </defaultValue>
            <fieldText>Notes (internal)</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;Notes cannot exceed 3000 characters&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!Notes_internal}) &lt; 3000</formulaExpression>
            </validationRule>
        </fields>
        <nextOrFinishButtonLabel>Save account</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Success_screen</name>
        <label>Success screen</label>
        <locationX>1150</locationX>
        <locationY>4850</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>SuccessToast</name>
            <extensionName>c:displayToastFlow</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>message</name>
                <value>
                    <stringValue>Record has successfully been saved</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>variant</name>
                <value>
                    <stringValue>success</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>title</name>
                <value>
                    <stringValue>Success</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>triggerNavigationNextEvent</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Update_Customer_Notes_Screen</name>
        <label>Update Customer Notes</label>
        <locationX>314</locationX>
        <locationY>1598</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Assign_Customer_Notes</targetReference>
        </connector>
        <fields>
            <name>Notes_Customer</name>
            <defaultValue>
                <stringValue>{!financialProduct.NotesCustomer__c}</stringValue>
            </defaultValue>
            <fieldText>Notes (Customer)</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Notes cannot exceed 1000 characters&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!Notes_Customer}) &lt; 1000</formulaExpression>
            </validationRule>
        </fields>
        <nextOrFinishButtonLabel>Update customer notes</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Update_Valuation_Screen</name>
        <label>Update Valuation Screen</label>
        <locationX>50</locationX>
        <locationY>1598</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Assign_Valuations_to_screen</targetReference>
        </connector>
        <fields>
            <name>ValueUpdate</name>
            <dataType>Currency</dataType>
            <fieldText>Value</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <scale>0</scale>
        </fields>
        <fields>
            <name>Valuation_Date_Update</name>
            <dataType>Date</dataType>
            <fieldText>Valuation Date</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Valuation date&lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt; cannot be in the future!&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!Valuation_Date_Update} &lt;= TODAY()</formulaExpression>
            </validationRule>
        </fields>
        <nextOrFinishButtonLabel>Update valuation</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>1332</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Does_user_have_correct_permissions</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Handle_errors_NS</name>
        <label>Handle errors</label>
        <locationX>1282</locationX>
        <locationY>4418</locationY>
        <flowName>ExceptionHandlingNovaServiceErrors</flowName>
        <inputAssignments>
            <name>Calloutexceptionmessage</name>
            <value>
                <elementReference>ExceptionMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>flowError</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>AccountContactRelationships</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountContactRelation</objectType>
    </variables>
    <variables>
        <name>acrContactIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>actionType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>createCashBody</name>
        <apexClass>ExternalService__NovaServiceCash_AdminCreateCashAccountBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ExceptionMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>financialProduct</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>FinancialProduct__c</objectType>
    </variables>
    <variables>
        <name>FinancialProductType</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>FinancialProductType__c</objectType>
    </variables>
    <variables>
        <name>finProdTypeCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>FinancialProductType__c</objectType>
    </variables>
    <variables>
        <name>householdId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>PeopleInRoles</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>preSelectedOwners</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>responseCode</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>roleBody</name>
        <apexClass>ExternalService__NovaServiceCash_RoleBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>roleBody1</name>
        <apexClass>ExternalService__NovaServiceCash_RoleBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>updateCashBody</name>
        <apexClass>ExternalService__NovaServiceCash_AdminUpdateCashAccountBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
