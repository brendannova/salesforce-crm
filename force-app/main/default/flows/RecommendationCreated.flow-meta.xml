<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Add_to_initial_fee</name>
        <label>Add to initial fee</label>
        <locationX>264</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>oneOffFee</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>oneOffFeeFormula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_one_off_fees</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_to_ongoing_fee</name>
        <label>Add to ongoing fee</label>
        <locationX>264</locationX>
        <locationY>1163</locationY>
        <assignmentItems>
            <assignToReference>ongoingRevenue</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>ongoingRevenueFormula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_ongoing_fees</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <name>Get_fees_that_pay_to_NOVA</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Get fees that pay to NOVA</label>
        <locationX>176</locationX>
        <locationY>431</locationY>
        <assignNextValueToReference>currentItem_Get_fees_that_pay_to_NOVA</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_fees</collectionReference>
        <conditionLogic>formula_evaluates_to_true</conditionLogic>
        <connector>
            <targetReference>One_off_fees</targetReference>
        </connector>
        <formula>{!currentItem_Get_fees_that_pay_to_NOVA.FeeModel__r.RevenueDueTo__r.OW_own_company__c}</formula>
    </collectionProcessors>
    <collectionProcessors>
        <name>One_off_fees</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>One off fees</label>
        <locationX>176</locationX>
        <locationY>539</locationY>
        <assignNextValueToReference>currentItem_One_off_fees</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_fees_that_pay_to_NOVA</collectionReference>
        <conditionLogic>formula_evaluates_to_true</conditionLogic>
        <connector>
            <targetReference>Ongoing_fees</targetReference>
        </connector>
        <formula>ISPICKVAL({!currentItem_One_off_fees.FeeModel__r.Duration__c}, &quot;One-off&quot;)</formula>
    </collectionProcessors>
    <collectionProcessors>
        <name>Ongoing_fees</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Ongoing fees</label>
        <locationX>176</locationX>
        <locationY>647</locationY>
        <assignNextValueToReference>currentItem_Ongoing_fees</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_fees_that_pay_to_NOVA</collectionReference>
        <conditionLogic>formula_evaluates_to_true</conditionLogic>
        <connector>
            <targetReference>Loop_through_one_off_fees</targetReference>
        </connector>
        <formula>ISPICKVAL({!currentItem_Ongoing_fees.FeeModel__r.Duration__c}, &quot;Ongoing&quot;)</formula>
    </collectionProcessors>
    <description>Flow to create a new business register record when recommendations are created</description>
    <environments>Default</environments>
    <formulas>
        <name>AdviserName</name>
        <dataType>String</dataType>
        <expression>{!$Record.Household__r.Owner.FirstName} + &quot; &quot; +  {!$Record.Household__r.Owner.LastName}</expression>
    </formulas>
    <formulas>
        <name>oneOffFeeFormula</name>
        <dataType>Number</dataType>
        <expression>IF(ISPICKVAL({!Loop_through_one_off_fees.FeeModel__r.Format__c}, &quot;Percentage&quot;), {!Loop_through_one_off_fees.PercentageFee__c}*0.01*{!Loop_through_one_off_fees.AppliesToRecommendation__r.Amount__c}, {!Loop_through_one_off_fees.FixedFee__c})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ongoingRevenueFormula</name>
        <dataType>Number</dataType>
        <expression>{!Loop_through_ongoing_fees.PercentageFee__c} * {!$Record.Amount__c} * 12 * 0.01</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>transferRevenue</name>
        <dataType>Number</dataType>
        <expression>{!Get_transfer_fee.PercentageFee__c} * 0.01 * {!$Record.Amount__c}</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Recommendation - created {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Recommendation | created</label>
    <loops>
        <name>Loop_through_one_off_fees</name>
        <label>Loop through one off fees</label>
        <locationX>176</locationX>
        <locationY>755</locationY>
        <collectionReference>One_off_fees</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_to_initial_fee</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Loop_through_ongoing_fees</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_through_ongoing_fees</name>
        <label>Loop through ongoing fees</label>
        <locationX>176</locationX>
        <locationY>1055</locationY>
        <collectionReference>Ongoing_fees</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_to_ongoing_fee</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_transfer_fee_model</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_NBR_record</name>
        <label>Create NBR record</label>
        <locationX>176</locationX>
        <locationY>1571</locationY>
        <inputAssignments>
            <field>Adviser__c</field>
            <value>
                <elementReference>AdviserName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EstimatedRevenueFromInitialFees__c</field>
            <value>
                <elementReference>oneOffFee</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EstimatedRevenueFromOngoingFees__c</field>
            <value>
                <elementReference>ongoingRevenue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EstimatedRevenueFromTransferFees__c</field>
            <value>
                <elementReference>transferRevenue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Recommendation__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BusinessRegisterEntry__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_fees</name>
        <label>Get fees</label>
        <locationX>176</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_fees_that_pay_to_NOVA</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AppliesToRecommendation__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Fee__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_transfer_fee</name>
        <label>Get transfer fee</label>
        <locationX>176</locationX>
        <locationY>1463</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_NBR_record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AppliesToRecommendation__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>FeeModel__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_transfer_fee_model.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Fee__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_transfer_fee_model</name>
        <label>Get transfer fee model</label>
        <locationX>176</locationX>
        <locationY>1355</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_transfer_fee</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Transfer fee</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>FeeModel__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_fees</targetReference>
        </connector>
        <object>Recommendation__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>currentItem_Get_fees_that_pay_to_NOVA</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Fee__c</objectType>
    </variables>
    <variables>
        <name>currentItem_One_off_fees</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Fee__c</objectType>
    </variables>
    <variables>
        <name>currentItem_Ongoing_fees</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Fee__c</objectType>
    </variables>
    <variables>
        <name>oneOffFee</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>ongoingRevenue</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
</Flow>
