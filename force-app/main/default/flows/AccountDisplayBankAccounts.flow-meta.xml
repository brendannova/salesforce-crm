<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Go_to_bank_account</name>
        <label>Go to bank account</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <actionName>c:navigateToRecord</actionName>
        <actionType>component</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>displayBankAccounts.firstSelectedRow.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>c:navigateToRecord</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <collectionProcessors>
        <name>Active_bank_accounts</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Active bank accounts</label>
        <locationX>182</locationX>
        <locationY>350</locationY>
        <assignNextValueToReference>currentItem_Active_bank_accounts</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_bank_accounts</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_Active_bank_accounts.Status__c</leftValueReference>
            <operator>NotEqualTo</operator>
            <rightValue>
                <stringValue>Inactive</stringValue>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>DisplayInitial</targetReference>
        </connector>
    </collectionProcessors>
    <decisions>
        <name>Button_pressed</name>
        <label>Button pressed?</label>
        <locationX>182</locationX>
        <locationY>566</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SeeBankAcc.renderNext</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Go_to_bank_account</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Flow to display bank accounts associated with a person</description>
    <environments>Default</environments>
    <interviewLabel>Account | display bank accounts {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Account | display bank accounts</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_bank_accounts</name>
        <label>Get bank accounts</label>
        <locationX>182</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Active_bank_accounts</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OwnerIds__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>BankAccount__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_person_account</name>
        <label>Get person account</label>
        <locationX>182</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_bank_accounts</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>DisplayInitial</name>
        <label>Display</label>
        <locationX>182</locationX>
        <locationY>458</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Button_pressed</targetReference>
        </connector>
        <fields>
            <name>hiddenText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!Get_person_account.Name}&#39;s bank account status is {!Get_person_account.BankDetailsStatus__c}. You&#39;ll be able to view or add any bank accounts for them once they&#39;ve accepted a recommendation.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_person_account.BankDetailsStatus__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Hidden</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>statusText</name>
            <fieldText>&lt;p&gt;{!Get_person_account.Name}&#39;s bank account status is {!Get_person_account.BankDetailsStatus__c}.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_person_account.BankDetailsStatus__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Hidden</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>displayBankAccounts</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>BankAccount__c</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Bank accounts</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>SINGLE_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>Active_bank_accounts</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;Type__c&quot;,&quot;guid&quot;:&quot;column-5d87&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Type&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;AccountOwners__c&quot;,&quot;guid&quot;:&quot;column-e9e4&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Account owners&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;BankName__c&quot;,&quot;guid&quot;:&quot;column-ebb6&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Bank name&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;AccountNumber__c&quot;,&quot;guid&quot;:&quot;column-2f52&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:3,&quot;label&quot;:&quot;Account number&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;SortCodeFormatted__c&quot;,&quot;guid&quot;:&quot;column-ed5f&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:true,&quot;customHeaderLabel&quot;:&quot;Sort code&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:4,&quot;label&quot;:&quot;Sort code formatted&quot;,&quot;type&quot;:&quot;customRichText&quot;},{&quot;apiName&quot;:&quot;Status__c&quot;,&quot;guid&quot;:&quot;column-3fa7&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:5,&quot;label&quot;:&quot;Status&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;PlatformStatus__c&quot;,&quot;guid&quot;:&quot;column-c82d&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:6,&quot;label&quot;:&quot;Hubwise status&quot;,&quot;type&quot;:&quot;text&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_person_account.BankDetailsStatus__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Hidden</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SeeBankAcc</name>
            <extensionName>runtime_industries_lending:flowButton</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>buttonLabel</name>
                <value>
                    <stringValue>See bank account</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_person_account.BankDetailsStatus__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Hidden</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_person_account</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>currentItem_Active_bank_accounts</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>BankAccount__c</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
