<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <assignments>
        <name>Create_new_SLA</name>
        <label>Create new SLA</label>
        <locationX>578</locationX>
        <locationY>2177</locationY>
        <assignmentItems>
            <assignToReference>createNewSla</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Manage_SLAs</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_annual_review_data_gathering_task</name>
        <label>Set annual review  data gathering task</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>taskToClose</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>ADVICE_ANNUAL_REVIEW_DATA_GATHERING</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Close_data_gathering_task_annual_review</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_error</name>
        <label>Set error</label>
        <locationX>842</locationX>
        <locationY>2585</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Manage_SLAs.errorMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>FlowFaultError</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_error_to_fault_message</name>
        <label>Set error to fault message</label>
        <locationX>1810</locationX>
        <locationY>1553</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>FlowFaultError</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_no_advice_type_status_error</name>
        <label>Set no advice type status error</label>
        <locationX>1106</locationX>
        <locationY>1661</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No advice type status found. Please raise a ticket.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>FlowFaultError</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_protection_data_gathering_task</name>
        <label>Set protection data gathering task</label>
        <locationX>754</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>taskToClose</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>ADVICE_PROTECTION_DATA_GATHERING</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Close_data_gathering_task_annual_review</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_SLA_status_variables</name>
        <label>Set SLA status variables</label>
        <locationX>710</locationX>
        <locationY>1961</locationY>
        <assignmentItems>
            <assignToReference>statusNew</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Advice_Status__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>statusExit</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record__Prior.Advice_Status__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SLA_applies</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_trust_onbording_data_gathering_task</name>
        <label>Set trust onbording data gathering task</label>
        <locationX>1194</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>taskToClose</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>ADVICE_TRUST_ONBOARDING_DATA_GATHERING</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Close_fact_find_task</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_variables</name>
        <label>Set variables</label>
        <locationX>908</locationX>
        <locationY>323</locationY>
        <assignmentItems>
            <assignToReference>adviceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>householdId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Advice_Household__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Advice_type</targetReference>
        </connector>
    </assignments>
    <customErrors>
        <name>FlowFaultError</name>
        <label>Flow Fault Error</label>
        <locationX>1810</locationX>
        <locationY>1661</locationY>
        <customErrorMessages>
            <errorMessage>{!errorMessage}</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Advice_type</name>
        <label>Advice type</label>
        <locationX>908</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>StatusDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other</defaultConnectorLabel>
        <rules>
            <name>Annual_review</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AdviceType__r.DeveloperName__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ANNUAL_REVIEW_ACCUMULATION</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AdviceType__r.DeveloperName__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ANNUAL_REVIEW_RETIREMENT</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stage</targetReference>
            </connector>
            <label>Annual review</label>
        </rules>
        <rules>
            <name>Protection</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AdviceType__r.DeveloperName__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PROTECTION</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Data_gathering</targetReference>
            </connector>
            <label>Protection</label>
        </rules>
        <rules>
            <name>Trust_Onboarding</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AdviceType__r.DeveloperName__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TRUST_ONBOARDING</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stage_trust_onboarding</targetReference>
            </connector>
            <label>Trust | Onboarding</label>
        </rules>
    </decisions>
    <decisions>
        <name>Data_gathering</name>
        <label>Data gathering</label>
        <locationX>886</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>StatusDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not completed</defaultConnectorLabel>
        <rules>
            <name>Completed_protection_data_gathering</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Advice_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Prepare advice</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_protection_data_gathering_task</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Completed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_advice_type_status</name>
        <label>Found advice type status</label>
        <locationX>908</locationX>
        <locationY>1553</locationY>
        <defaultConnector>
            <targetReference>Set_no_advice_type_status_error</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not found</defaultConnectorLabel>
        <rules>
            <name>Found_record</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>adviceTypeStatus</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Initial_task</targetReference>
            </connector>
            <label>Found record</label>
        </rules>
    </decisions>
    <decisions>
        <name>Initial_task</name>
        <label>Initial task</label>
        <locationX>710</locationX>
        <locationY>1661</locationY>
        <defaultConnector>
            <targetReference>Set_SLA_status_variables</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_create</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>adviceTypeStatus.Task__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_initial_status_task</targetReference>
            </connector>
            <label>Yes, create</label>
        </rules>
    </decisions>
    <decisions>
        <name>SLA_applies</name>
        <label>SLA applies?</label>
        <locationX>710</locationX>
        <locationY>2069</locationY>
        <defaultConnector>
            <targetReference>Manage_SLAs</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No SLA</defaultConnectorLabel>
        <rules>
            <name>Applies</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>adviceTypeStatus.ServiceLevelAgreementApplies__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_new_SLA</targetReference>
            </connector>
            <label>Applies</label>
        </rules>
    </decisions>
    <decisions>
        <name>SLA_outcome</name>
        <label>SLA outcome</label>
        <locationX>710</locationX>
        <locationY>2477</locationY>
        <defaultConnector>
            <targetReference>Set_error</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Error</defaultConnectorLabel>
        <rules>
            <name>Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Manage_SLAs.error</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Success</label>
        </rules>
    </decisions>
    <decisions>
        <name>Stage</name>
        <label>Stage</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>StatusDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No change</defaultConnectorLabel>
        <rules>
            <name>DG_complete_catch_up_call_ready</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Advice_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Data gathering</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ProfileUpdateStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Complete</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.DataGatheringStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Not required</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RiskCallStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Ready</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Set_annual_review_data_gathering_task</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>DG complete / catch up call ready</label>
        </rules>
        <rules>
            <name>Data_analysis_or_prepare_advice</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Advice_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Data analysis</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Advice_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Prepare advice</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_annual_review_data_gathering_task</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Data analysis or prepare advice</label>
        </rules>
    </decisions>
    <decisions>
        <name>Stage_trust_onboarding</name>
        <label>Stage</label>
        <locationX>1326</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>StatusDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No change</defaultConnectorLabel>
        <rules>
            <name>Risk_call</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Advice_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Risk Call</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_trust_onbording_data_gathering_task</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Risk call</label>
        </rules>
    </decisions>
    <decisions>
        <description>If the advice status is changed, we need to run the task and SLA checks. 

If advice type is changed, we also need to close any orchestration tasks for the prior advice type. This should only be done where the deck status is not started since we reconfirm the advice type when deck is marked as completed by the planner.</description>
        <name>StatusDecision</name>
        <label>Status</label>
        <locationX>908</locationX>
        <locationY>1097</locationY>
        <defaultConnectorLabel>No change</defaultConnectorLabel>
        <rules>
            <name>Advice_type_changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AdviceType__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.DeckStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Not started</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>isNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Close_orchestrated_task_on_advice</targetReference>
            </connector>
            <label>Advice type changed</label>
        </rules>
        <rules>
            <name>Updated</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>isNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Advice_Status__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_advice_type_status</targetReference>
            </connector>
            <label>Updated</label>
        </rules>
    </decisions>
    <description>Record triggered flow to automate actions for orchestrated advice.</description>
    <environments>Default</environments>
    <formulas>
        <description>Returns true if this is a new record.</description>
        <name>isNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>Advice | Orchestration | Automation {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Advice | Orchestration | Automation</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_advice_type_status</name>
        <label>Get advice type status</label>
        <locationX>908</locationX>
        <locationY>1445</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_advice_type_status</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Set_error_to_fault_message</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AdviceType__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AdviceType__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Advice_Status__c</elementReference>
            </value>
        </filters>
        <object>AdviceTypeStatus__c</object>
        <outputReference>adviceTypeStatus</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>ServiceLevelAgreementApplies__c</queriedFields>
        <queriedFields>ServiceLevelAgreement__c</queriedFields>
        <queriedFields>Task__c</queriedFields>
    </recordLookups>
    <recordUpdates>
        <name>Close_data_gathering_task_annual_review</name>
        <label>Close data gathering task</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>StatusDecision</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Set_error_to_fault_message</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </filters>
        <filters>
            <field>FinServ__Household__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OW_task_information_name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>taskToClose</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OrchestrationTaskStatus__c</field>
            <value>
                <stringValue>Complete</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <recordUpdates>
        <name>Close_fact_find_task</name>
        <label>Close fact find task</label>
        <locationX>1194</locationX>
        <locationY>755</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Close_data_gathering_task_annual_review</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5)</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </filters>
        <filters>
            <field>FinServ__Household__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OW_task_information_name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ADVICE_TRUST_ONBOARDING_FACT_FIND_SEND</stringValue>
            </value>
        </filters>
        <filters>
            <field>OW_task_information_name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ADVICE_TRUST_ONBOARDING_FACT_FIND_CHASE</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Cancelled</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <recordUpdates>
        <name>Close_orchestrated_task_on_advice</name>
        <label>Close orchestrated task on advice</label>
        <locationX>556</locationX>
        <locationY>1205</locationY>
        <connector>
            <targetReference>Get_advice_type_status</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Set_error_to_fault_message</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </filters>
        <filters>
            <field>FinServ__Household__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OW_task_information_name__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Cancelled</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <start>
        <locationX>782</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Set_variables</targetReference>
        </connector>
        <filterFormula>{!$Record.AdviceType__r.DeveloperName__c} = &quot;ANNUAL_REVIEW_ACCUMULATION&quot; ||
{!$Record.AdviceType__r.DeveloperName__c} = &quot;ANNUAL_REVIEW_RETIREMENT&quot; || 
{!$Record.AdviceType__r.DeveloperName__c} = &quot;TOP_UP&quot; || 
{!$Record.AdviceType__r.DeveloperName__c} = &quot;WITHDRAWAL&quot; || 
{!$Record.AdviceType__r.DeveloperName__c} = &quot;REGULAR_AMENDMENT&quot; || 
{!$Record.AdviceType__r.DeveloperName__c} = &quot;PROTECTION&quot; ||
{!$Record.AdviceType__r.DeveloperName__c} = &quot;TRUST_ONBOARDING&quot;</filterFormula>
        <object>Advice__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>Create_initial_status_task</name>
        <label>Create initial status task</label>
        <locationX>578</locationX>
        <locationY>1769</locationY>
        <connector>
            <targetReference>Set_SLA_status_variables</targetReference>
        </connector>
        <flowName>OW_task_create_from_task_information</flowName>
        <inputAssignments>
            <name>household_id</name>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>related_advice_id</name>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>task_type</name>
            <value>
                <elementReference>adviceTypeStatus.Task__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>what_id</name>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Manage_SLAs</name>
        <label>Manage SLAs</label>
        <locationX>710</locationX>
        <locationY>2369</locationY>
        <connector>
            <targetReference>SLA_outcome</targetReference>
        </connector>
        <flowName>ServiceLevelAgreementManage</flowName>
        <inputAssignments>
            <name>adviceId</name>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>createNewSla</name>
            <value>
                <elementReference>createNewSla</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>slaDays</name>
            <value>
                <elementReference>adviceTypeStatus.ServiceLevelAgreement__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>statusExit</name>
            <value>
                <elementReference>statusExit</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>statusNew</name>
            <value>
                <elementReference>statusNew</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>adviceId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>adviceTypeStatus</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AdviceTypeStatus__c</objectType>
    </variables>
    <variables>
        <description>If true, a new SLA should be created for this record.</description>
        <name>createNewSla</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>currentSla</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceLevelAgreement__c</objectType>
    </variables>
    <variables>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>householdId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>statusExit</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>statusNew</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>taskToClose</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
