<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <name>ClientsWithExistingRoles</name>
        <label>Find Clients With Existing Roles</label>
        <locationX>446</locationX>
        <locationY>2588</locationY>
        <actionName>ClientsWithRoles</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>GetAssetsFromHousehold</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>clients</name>
            <value>
                <elementReference>clients</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Roles</name>
            <value>
                <elementReference>ClientsInRoleIds</elementReference>
            </value>
        </inputParameters>
        <nameSegment>ClientsWithRoles</nameSegment>
        <outputParameters>
            <assignToReference>OwnersAlreadySelected</assignToReference>
            <name>clientsWithRoles</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Create_Liability</name>
        <label>Create Liability</label>
        <locationX>50</locationX>
        <locationY>3944</locationY>
        <actionName>NovaServiceLiabilities.createLiability</actionName>
        <actionType>externalService</actionType>
        <connector>
            <targetReference>IsSuccessful</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Handle_exceptions</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>CreateLiabilityBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>NovaServiceLiabilities.createLiability</nameSegment>
        <outputParameters>
            <assignToReference>ResponseCode</assignToReference>
            <name>responseCode</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>CallOutExceptionMessage</assignToReference>
            <name>defaultExc</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Update_Liability</name>
        <label>Update Liability</label>
        <locationX>578</locationX>
        <locationY>3944</locationY>
        <actionName>NovaServiceLiabilities.updateLiability</actionName>
        <actionType>externalService</actionType>
        <connector>
            <targetReference>IsSuccessful</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Handle_exceptions</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>platformId</name>
            <value>
                <elementReference>liability.PlatformId__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>UpdateLiabilityBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>NovaServiceLiabilities.updateLiability</nameSegment>
        <outputParameters>
            <assignToReference>ResponseCode</assignToReference>
            <name>responseCode</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>CallOutExceptionMessage</assignToReference>
            <name>defaultExc</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>AssignClientIdFromRoleToCollection</name>
        <label>Assign Client ID From Role To Collection</label>
        <locationX>710</locationX>
        <locationY>1106</locationY>
        <assignmentItems>
            <assignToReference>ClientsInRoleIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LoopLiabilityRoles.Person__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopLiabilityRoles</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignClientsChildrenToCollection</name>
        <label>Assign Clients &amp; Children to collection</label>
        <locationX>578</locationX>
        <locationY>2372</locationY>
        <assignmentItems>
            <assignToReference>clients</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>outputClients</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AreThereExistingLiabilityRoles</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignCustomerNotes</name>
        <label>Assign Customer Notes</label>
        <locationX>622</locationX>
        <locationY>1598</locationY>
        <assignmentItems>
            <assignToReference>liability.NotesCustomer__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NotesCustomer</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopAlreadySelectedClientsAndAssignBody</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignHouseholdId</name>
        <label>Assign household id</label>
        <locationX>270</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>householdId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ChooseLiabilityCategory</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignHouseholdIdUpdate</name>
        <label>Assign HouseholdId</label>
        <locationX>622</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>householdId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetLiabillity.Household__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetLiabilityType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignIdsOfSelectedAssets</name>
        <label>Assign ID&#39;s of Selected Assets</label>
        <locationX>578</locationX>
        <locationY>3104</locationY>
        <assignmentItems>
            <assignToReference>RelatedAssetAlwaysId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RelatedAssetAlways</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RelatedAssetOptionalId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RelatedAssetOptional</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AssignLiabilityVariables</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignLiability</name>
        <label>Assign Liability</label>
        <locationX>622</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>liability</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetLiabillity</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AssignHouseholdIdUpdate</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignLiabilityRoleBody1</name>
        <label>Assign Liability Role Body &gt;1</label>
        <locationX>666</locationX>
        <locationY>3428</locationY>
        <assignmentItems>
            <assignToReference>LiabilityRoleBody.personSfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopSelectedClients.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>LiabilityRoleBody.role</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Owner</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LiabilityRoleCollectionAssignment</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignLiabilityRoleBodyAlreadySelected</name>
        <label>Assign Liability Role Body &gt;1</label>
        <locationX>710</locationX>
        <locationY>1814</locationY>
        <assignmentItems>
            <assignToReference>LiabilityRoleBody.personSfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopAlreadySelectedClientsAndAssignBody.Person__r.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>LiabilityRoleBody.role</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Owner</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LiabilityRoleCollectionAssignment1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignLiabilityType</name>
        <label>Assign Liability Type</label>
        <locationX>622</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>liabilityType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetLiabilityType</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AssignLiabilityTypeToCollection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignLiabilityTypeToCollection</name>
        <label>Assign Liability Type to collection</label>
        <locationX>622</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>LiabilityTypeCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetLiabilityType</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetLiabilityRole</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignLiabilityTypeToSelected</name>
        <label>Assign liability type to selected</label>
        <locationX>270</locationX>
        <locationY>1814</locationY>
        <assignmentItems>
            <assignToReference>liabilityType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LiabilityTypeTable.firstSelectedRow</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetClientsInHousehold</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignLiabilityVariables</name>
        <label>Assign Liability Variables</label>
        <locationX>578</locationX>
        <locationY>3212</locationY>
        <assignmentItems>
            <assignToReference>liability.PublicProviderList__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PublicProviderFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.FixedRateExpiry__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FixedRateExpiryDateOptional</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.InitialBalance__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>InitialBalanceOptional</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.IsPaidInFullEachMonth__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PaidOffInFullFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.RateType__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RateTypeFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.RepaymentAmount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RepaymentAmountFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.RepaymentFrequency__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RepaymentFrequencyOptional</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.Balance__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CurrentBalanceFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.CustomProviderName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CustomProviderFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.NotesInternal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NotesInternal</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.Asset__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RelatedAssetFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.InterestRate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>InterestRateFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.EndDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EndDateFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.Asset__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RelatedAssetFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.LiabilityType__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LiabilityTypeTable.firstSelectedRow.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.Household__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.FinalPayment__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FinalPaymentBalloonPayment</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>liability.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopSelectedClients</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignMissingDataError</name>
        <label>Assign missing data error</label>
        <locationX>886</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>ErrorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>DATA_ERROR</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>AssignToLiabilityCreateBody</name>
        <label>Assign to Liability Create Body</label>
        <locationX>50</locationX>
        <locationY>3836</locationY>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.typeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.LiabilityType__r.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.publicProvider.sfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.PublicProviderList__r.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.publicProvider.customName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.CustomProviderName__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.initialBalance</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.InitialBalance__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.currentBalance</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Balance__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.roles</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LiabilityRoleCollection</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.expiryDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.EndDate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.fixedRateExpiryDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.FixedRateExpiry__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.repaymentAmount</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.RepaymentAmount__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.repaymentFrequency</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.RepaymentFrequency__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.paidInFullEachMonth</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.IsPaidInFullEachMonth__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.internalNotes</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.NotesInternal__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.householdId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Household__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.interestRate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.InterestRate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.interestRateType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.RateType__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.finalBalloonPayment</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.FinalPayment__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Status__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.asset.sfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Asset__r.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CreateLiabilityBody.asset.platformId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Asset__r.PlatformId__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Liability</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignToLiabilityUpdateBody</name>
        <label>Assign to Liability Update Body</label>
        <locationX>578</locationX>
        <locationY>3836</locationY>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.publicProvider.sfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.PublicProviderList__r.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.publicProvider.customName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.CustomProviderName__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.initialBalance</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.InitialBalance__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.currentBalance</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Balance__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.roles</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LiabilityRoleCollection</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.expiryDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.EndDate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.fixedRateExpiryDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.FixedRateExpiry__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.repaymentAmount</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.RepaymentAmount__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.repaymentFrequency</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.RepaymentFrequency__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.paidInFullEachMonth</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.IsPaidInFullEachMonth__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.internalNotes</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.NotesInternal__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.householdId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Household__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.interestRate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.InterestRate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.interestRateType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.RateType__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.sfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.platformId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.PlatformId__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.typeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liabilityType.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.finalBalloonPayment</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.FinalPayment__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Status__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.notes</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.NotesCustomer__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.platformLastModifiedDateTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.PlatformLastModifiedDateTime__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.asset.sfid</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Asset__r.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateLiabilityBody.asset.platformId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>liability.Asset__r.PlatformId__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Liability</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>LiabilityRoleCollectionAssignment</name>
        <label>LiabilityRoleCollection Assignment</label>
        <locationX>666</locationX>
        <locationY>3536</locationY>
        <assignmentItems>
            <assignToReference>LiabilityRoleCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LiabilityRoleBody</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopSelectedClients</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>LiabilityRoleCollectionAssignment1</name>
        <label>LiabilityRoleCollection Assignment</label>
        <locationX>710</locationX>
        <locationY>1922</locationY>
        <assignmentItems>
            <assignToReference>LiabilityRoleCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>LiabilityRoleBody</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopAlreadySelectedClientsAndAssignBody</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>CustomProvider</name>
        <choiceText>Custom Provider</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Custom Provider</stringValue>
        </value>
    </choices>
    <choices>
        <name>Fixed</name>
        <choiceText>Fixed</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Fixed</stringValue>
        </value>
    </choices>
    <choices>
        <name>Monthly</name>
        <choiceText>Monthly</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Monthly</stringValue>
        </value>
    </choices>
    <choices>
        <name>No</name>
        <choiceText>No</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>False</stringValue>
        </value>
    </choices>
    <choices>
        <name>PublicProviderList</name>
        <choiceText>Public Provider List</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Public Provider List</stringValue>
        </value>
    </choices>
    <choices>
        <name>Variable</name>
        <choiceText>Variable</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Variable</stringValue>
        </value>
    </choices>
    <choices>
        <name>Yes</name>
        <choiceText>Yes</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>True</stringValue>
        </value>
    </choices>
    <collectionProcessors>
        <name>SortLiabilityTypes</name>
        <elementSubtype>SortCollectionProcessor</elementSubtype>
        <label>Sort Liability Types</label>
        <locationX>270</locationX>
        <locationY>1598</locationY>
        <collectionProcessorType>SortCollectionProcessor</collectionProcessorType>
        <collectionReference>GetLiabilityTypes</collectionReference>
        <connector>
            <targetReference>ChooseLiabilityType</targetReference>
        </connector>
        <sortOptions>
            <doesPutEmptyStringAndNullFirst>false</doesPutEmptyStringAndNullFirst>
            <sortField>SortOrder__c</sortField>
            <sortOrder>Asc</sortOrder>
        </sortOptions>
    </collectionProcessors>
    <constants>
        <name>LiabilityRecordConst</name>
        <dataType>String</dataType>
        <value>
            <stringValue>a0l</stringValue>
        </value>
    </constants>
    <decisions>
        <name>AreThereExistingLiabilityRoles</name>
        <label>Are There Existing Liability Roles?</label>
        <locationX>578</locationX>
        <locationY>2480</locationY>
        <defaultConnector>
            <targetReference>GetAssetsFromHousehold</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Roles don&#39;t exist</defaultConnectorLabel>
        <rules>
            <name>RolesExist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>LiabilityRoles</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ClientsWithExistingRoles</targetReference>
            </connector>
            <label>Roles exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>CreateOrUpdate</name>
        <label>Create or update</label>
        <locationX>578</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>AssignMissingDataError</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Create</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>001</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignHouseholdId</targetReference>
            </connector>
            <label>Create</label>
        </rules>
        <rules>
            <name>Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>LiabilityRecordConst</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetLiabillity</targetReference>
            </connector>
            <label>Update</label>
        </rules>
    </decisions>
    <decisions>
        <name>CreateOrUpdateLiability</name>
        <label>Create or Update Liability</label>
        <locationX>578</locationX>
        <locationY>3728</locationY>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>CreatingLiability</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>liability.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignToLiabilityCreateBody</targetReference>
            </connector>
            <label>Create</label>
        </rules>
        <rules>
            <name>UpdatingLiability</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>liability.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignToLiabilityUpdateBody</targetReference>
            </connector>
            <label>Update</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsSuccessful</name>
        <label>Is successful?</label>
        <locationX>578</locationX>
        <locationY>4376</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Handle_exceptions</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Unsuccessful</defaultConnectorLabel>
        <rules>
            <name>X200</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>ResponseCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>200.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ResponseCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>201.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SuccessScreen</targetReference>
            </connector>
            <label>200/201</label>
        </rules>
    </decisions>
    <decisions>
        <name>WhichActionWasTaken</name>
        <label>Which Action Was Taken</label>
        <locationX>578</locationX>
        <locationY>1382</locationY>
        <defaultConnector>
            <targetReference>GetClientsInHousehold</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Update Liability</defaultConnectorLabel>
        <rules>
            <name>CreateLiability</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>liability.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ActionType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Change_Liability_Type</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetLiabilityTypes</targetReference>
            </connector>
            <label>Create Liability Or Change Type</label>
        </rules>
        <rules>
            <name>UpdateCustomerNotes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ActionType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CustomerNotes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateCustomerNotesScreen</targetReference>
            </connector>
            <label>Update Customer Notes</label>
        </rules>
    </decisions>
    <description>Flow used to capture new, or updates to existing, liability records.</description>
    <dynamicChoiceSets>
        <name>AssetsPicklistChoices</name>
        <collectionReference>GetAssetsFromHousehold</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>Asset__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>LiabilityCategoryChoice</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true" />
        <object xsi:nil="true" />
        <picklistField>Category__c</picklistField>
        <picklistObject>LiabilityType__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>PublicProvidersCollection</name>
        <collectionReference>GetPublicProviders</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>Public_Provider_Names__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>RateTypeChoices</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true" />
        <object xsi:nil="true" />
        <picklistField>RateType__c</picklistField>
        <picklistObject>Liability__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>RepaymentFrequencyChoices</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true" />
        <object xsi:nil="true" />
        <picklistField>RepaymentFrequency__c</picklistField>
        <picklistObject>Liability__c</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>CallOutExceptionMessageReplaced</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(
SUBSTITUTE({!CallOutExceptionMessage}, &#39;}&#39;, &#39;)&#39;),
 &#39;{&#39;, &#39;(&#39;)</expression>
    </formulas>
    <formulas>
        <name>CurrentBalanceFormula</name>
        <dataType>Currency</dataType>
        <expression>IF(ISNULL({!CurrentBalanceAlways}),{!CurrentBalanceOptional},{!CurrentBalanceAlways})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>CustomProviderFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!CustomProviderNameAlways}),{!CustomProviderNameOptional}, {!CustomProviderNameAlways})</expression>
    </formulas>
    <formulas>
        <name>EndDateFormula</name>
        <dataType>Date</dataType>
        <expression>IF(ISBLANK({!EndDateAlways}),{!EndDateYearOptional},{!EndDateAlways})</expression>
    </formulas>
    <formulas>
        <name>ErrorMessageDisplay</name>
        <dataType>String</dataType>
        <expression>CASE({!ErrorMessage},
&quot;DATA_ERROR&quot;, &quot;We couldn&#39;t find a liability to display here.&quot;,
&quot;CALL_OUT_ERROR&quot;, &quot;There was an issue connecting to the NOVA service.&quot;,
&quot;CALL_OUT_FAILED&quot;, &quot;The NOVA service has run into an issue.&quot;,
&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>InterestRateFormula</name>
        <dataType>Number</dataType>
        <expression>IF(ISBLANK({!InterestRateAlways}), ({!InterestRateOptional}/100), ({!InterestRateAlways}/100))</expression>
        <scale>4</scale>
    </formulas>
    <formulas>
        <name>LiabilityNameFormula</name>
        <dataType>String</dataType>
        <expression>{!ProviderNameFormula} &amp; &quot; | &quot; &amp; {!liabilityType.Name}</expression>
    </formulas>
    <formulas>
        <name>PaidOffInFullFormula</name>
        <dataType>Boolean</dataType>
        <expression>if({!PaidInFullEachMonthAlwaysNew} = &quot;Yes&quot;, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>ProviderDefaultFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!liability.CustomProviderName__c}), {!PublicProviderList}, {!CustomProvider})</expression>
    </formulas>
    <formulas>
        <name>ProviderNameFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISNULL({!PublicProviderNameFormula}),{!CustomProviderFormula},{!PublicProviderNameFormula})</expression>
    </formulas>
    <formulas>
        <name>PublicProviderFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!ProviderNameAlways.selectedChoiceValues}), {!ProviderNameOptional.selectedChoiceValues}, {!ProviderNameAlways.selectedChoiceValues})</expression>
    </formulas>
    <formulas>
        <name>PublicProviderNameFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!ProviderNameAlways.selectedChoiceLabels}), {!ProviderNameOptional.selectedChoiceLabels}, {!ProviderNameAlways.selectedChoiceLabels})</expression>
    </formulas>
    <formulas>
        <name>RateTypeFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!RateTypeAlways}),{!RateTypeOptional},{!RateTypeAlways})</expression>
    </formulas>
    <formulas>
        <name>RelatedAssetFormula</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!RelatedAssetAlwaysId}),{!RelatedAssetOptionalId},{!RelatedAssetAlwaysId})</expression>
    </formulas>
    <formulas>
        <name>RepaymentAmountFormula</name>
        <dataType>Currency</dataType>
        <expression>IF(ISBLANK({!RepaymentAmountAlways}),{!RepaymentAmountOptional},{!RepaymentAmountAlways})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ToastErrorMessageFormula</name>
        <dataType>String</dataType>
        <expression>{!ErrorMessageDisplay} &amp;&quot; Please raise a ticket for the salesforce team: &quot;&amp; {!CallOutExceptionMessageReplaced}</expression>
    </formulas>
    <interviewLabel>Liability | Manage Data {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Liability | Manage Data</label>
    <loops>
        <name>LoopAlreadySelectedClientsAndAssignBody</name>
        <label>Loop Already Selected Clients and assign body</label>
        <locationX>622</locationX>
        <locationY>1706</locationY>
        <collectionReference>LiabilityRoles</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignLiabilityRoleBodyAlreadySelected</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <isGoTo>true</isGoTo>
            <targetReference>AssignToLiabilityUpdateBody</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopLiabilityRoles</name>
        <label>Loop Liability Roles</label>
        <locationX>622</locationX>
        <locationY>998</locationY>
        <collectionReference>LiabilityRoles</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignClientIdFromRoleToCollection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>WhichActionWasTaken</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>LoopSelectedClients</name>
        <label>Loop Selected Clients and assign body</label>
        <locationX>578</locationX>
        <locationY>3320</locationY>
        <collectionReference>Owners.selectedRows</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignLiabilityRoleBody1</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CreateOrUpdateLiability</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>GetAssetsFromHousehold</name>
        <label>Get Assets from Household</label>
        <locationX>578</locationX>
        <locationY>2780</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetPublicProviders</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Household__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Asset__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetLiabilityRole</name>
        <label>Get Liability Role</label>
        <locationX>622</locationX>
        <locationY>890</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopLiabilityRoles</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Liability__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>liability.Id</elementReference>
            </value>
        </filters>
        <object>Role__c</object>
        <outputReference>LiabilityRoles</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Liability__c</queriedFields>
        <queriedFields>Person__c</queriedFields>
        <queriedFields>Role__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>GetLiabilityType</name>
        <label>Get Liability Type</label>
        <locationX>622</locationX>
        <locationY>566</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignLiabilityType</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetLiabillity.LiabilityType__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>LiabilityType__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetLiabilityTypes</name>
        <label>Get Liability Types</label>
        <locationX>270</locationX>
        <locationY>1490</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SortLiabilityTypes</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Category__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>LiabilityCategory</elementReference>
            </value>
        </filters>
        <filters>
            <field>Category__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>liability.LiabilityType__r.Category__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>LiabilityType__c</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetLiabillity</name>
        <label>Get Liability</label>
        <locationX>622</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignLiability</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Liability__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetPublicProviders</name>
        <label>Get Public Providers</label>
        <locationX>578</locationX>
        <locationY>2888</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SpecifyLiabilityDetails</targetReference>
        </connector>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Public_Provider_Names__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>ChooseLiabilityCategory</name>
        <label>Choose liability category</label>
        <locationX>270</locationX>
        <locationY>350</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>WhichActionWasTaken</targetReference>
        </connector>
        <fields>
            <name>LiabilityCategory</name>
            <choiceReferences>LiabilityCategoryChoice</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Liability Category</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ChooseLiabilityType</name>
        <label>Choose Liability Type</label>
        <locationX>270</locationX>
        <locationY>1706</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>AssignLiabilityTypeToSelected</targetReference>
        </connector>
        <fields>
            <name>LiabilityTypeTable</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>LiabilityType__c</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Liability Type</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>SINGLE_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>GetLiabilityTypes</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;Name&quot;,&quot;guid&quot;:&quot;column-3363&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Liability Type Name&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;DescriptionInternal__c&quot;,&quot;guid&quot;:&quot;column-11f2&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:true,&quot;customHeaderLabel&quot;:&quot;Description&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Description (internal)&quot;,&quot;type&quot;:&quot;text&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>SpecifyLiabilityDetails</name>
        <label>Specify Liability Details</label>
        <locationX>578</locationX>
        <locationY>2996</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>AssignIdsOfSelectedAssets</targetReference>
        </connector>
        <fields>
            <name>TypeName</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Liability Type: {!liabilityType.Name}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>RelatedAssetAlways</name>
            <choiceReferences>AssetsPicklistChoices</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>liability.Asset__c</elementReference>
            </defaultValue>
            <fieldText>Related Asset</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasRelatedAsset__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RelatedAssetOptional</name>
            <choiceReferences>AssetsPicklistChoices</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>liability.Asset__c</elementReference>
            </defaultValue>
            <fieldText>Related Asset</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasRelatedAsset__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasRelatedAsset__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ProviderRadioButtons</name>
            <choiceReferences>PublicProviderList</choiceReferences>
            <choiceReferences>CustomProvider</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>ProviderDefaultFormula</elementReference>
            </defaultValue>
            <fieldText>Please select method to enter provider name</fieldText>
            <fieldType>RadioButtons</fieldType>
            <helpText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Please only use Custom Provider if you cannot find provider via the Public Provider List&lt;/span&gt;&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasPublicProvider__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ProviderNameAlways</name>
            <choiceReferences>PublicProvidersCollection</choiceReferences>
            <defaultValue>
                <elementReference>liability.PublicProviderList__c</elementReference>
            </defaultValue>
            <extensionName>flowruntime:choiceLookup</extensionName>
            <fieldText>Public Provider Name</fieldText>
            <fieldType>ComponentChoice</fieldType>
            <inputParameters>
                <name>placeholder</name>
                <value>
                    <elementReference>liability.PublicProviderList__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>ProviderRadioButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicProviderList</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ProviderNameOptional</name>
            <choiceReferences>PublicProvidersCollection</choiceReferences>
            <defaultValue>
                <elementReference>liability.PublicProviderList__c</elementReference>
            </defaultValue>
            <extensionName>flowruntime:choiceLookup</extensionName>
            <fieldText>Public Provider Name</fieldText>
            <fieldType>ComponentChoice</fieldType>
            <inputParameters>
                <name>placeholder</name>
                <value>
                    <elementReference>liability.PublicProviderList__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasPublicProvider__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasPublicProvider__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>CustomProviderNameAlways</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>liability.CustomProviderName__c</elementReference>
            </defaultValue>
            <fieldText>Custom Provider Name</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;You have exceeded the 80 character limit for this field.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!CustomProviderNameAlways}) &lt;=80</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>ProviderRadioButtons</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>CustomProvider</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>CustomProviderNameOptional</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>liability.CustomProviderName__c</elementReference>
            </defaultValue>
            <fieldText>Custom Provider Name</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;You have exceeded the 80 character limit for this field.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!CustomProviderNameOptional}) &lt;=80</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasPublicProvider__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasPublicProvider__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Owners</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>Account</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Owners</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>MULTI_SELECT</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>shouldDisplayLabel</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>clients</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>2.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;Name&quot;,&quot;guid&quot;:&quot;column-15a1&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Account Name&quot;,&quot;type&quot;:&quot;text&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectedRows</name>
                <value>
                    <elementReference>OwnersAlreadySelected</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>InitialBalanceOptional</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <elementReference>liability.InitialBalance__c</elementReference>
            </defaultValue>
            <fieldText>Initial Balance</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <scale>2</scale>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasAnInitialBalance__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasAnInitialBalance__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>PaidInFullEachMonthAlwaysNew</name>
            <choiceReferences>Yes</choiceReferences>
            <choiceReferences>No</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>liability.IsPaidInFullEachMonth__c</elementReference>
            </defaultValue>
            <fieldText>Is this paid off in full each month?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.IsPaidOffInFullEachMonth__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>CurrentBalanceAlways</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <elementReference>liability.Balance__c</elementReference>
            </defaultValue>
            <fieldText>Current Balance</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;Current Balance must be grater than zero&lt;/p&gt;</errorMessage>
                <formulaExpression>{!CurrentBalanceAlways} &gt; 0</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>1 OR (2 AND 3)</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasABalance__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>PaidInFullEachMonthAlwaysNew</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>No</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasABalance__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>CurrentBalanceOptional</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <elementReference>liability.Balance__c</elementReference>
            </defaultValue>
            <fieldText>Current Balance</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Current Balance must be grater than zero&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!CurrentBalanceOptional} &gt; 0</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>(1 AND 3) OR 2</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasABalance__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasABalance__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>PaidInFullEachMonthAlwaysNew</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <elementReference>No</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RateTypeAlways</name>
            <choiceReferences>Fixed</choiceReferences>
            <choiceReferences>Variable</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>liability.RateType__c</elementReference>
            </defaultValue>
            <fieldText>Rate Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasARateType__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RateTypeOptional</name>
            <choiceReferences>Fixed</choiceReferences>
            <choiceReferences>Variable</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>liability.RateType__c</elementReference>
            </defaultValue>
            <fieldText>Rate Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasARateType__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasARateType__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InterestRateOptional</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>liability.InterestRateFormula__c</elementReference>
            </defaultValue>
            <fieldText>Interest Rate</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;Please enter the interest rate percentage without the &quot;%&quot; sign.&lt;/p&gt;&lt;p&gt;E.g. for 2.4%, enter &quot;2.4&quot;&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;Interest rate must be between 0 - 100&lt;/p&gt;</errorMessage>
                <formulaExpression>{!InterestRateOptional} &lt;= 100</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND (3 AND 4)</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasAnInterestRate__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasAnInterestRate__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>RateTypeAlways</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Fixed</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>RateTypeOptional</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Fixed</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InterestRateAlways</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>liability.InterestRateFormula__c</elementReference>
            </defaultValue>
            <fieldText>Interest Rate</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;Please enter the interest rate percentage without the &quot;%&quot; sign.&lt;/p&gt;&lt;p&gt;E.g. for 2.4%, enter &quot;2.4&quot;&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Interest rate must be between 0 - 100&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!InterestRateAlways} &lt;= 100</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasAnInterestRate__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>RateTypeOptional</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Fixed</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>RateTypeAlways</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Fixed</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>FixedRateExpiryDateOptional</name>
            <dataType>Date</dataType>
            <defaultValue>
                <elementReference>liability.FixedRateExpiry__c</elementReference>
            </defaultValue>
            <fieldText>Fixed Rate Expiry Date</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND (3 OR 4)</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasAFixedRateThatWillExpire__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasAFixedRateThatWillExpire__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>RateTypeAlways</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Fixed</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>RateTypeOptional</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Fixed</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>EndDateYearOptional</name>
            <dataType>Date</dataType>
            <defaultValue>
                <elementReference>liability.EndDate__c</elementReference>
            </defaultValue>
            <fieldText>End Date</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;End Date must not be in the past&lt;/p&gt;</errorMessage>
                <formulaExpression>{!EndDateYearOptional} &gt;= TODAY()</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasAnEndDate__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasAnEndDate__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>EndDateAlways</name>
            <dataType>Date</dataType>
            <defaultValue>
                <elementReference>liability.EndDate__c</elementReference>
            </defaultValue>
            <fieldText>End Date</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;End Date must not be in the past&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!EndDateAlways} &gt;= TODAY()</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasAnEndDate__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RepaymentFrequencyOptional</name>
            <choiceReferences>Monthly</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <stringValue>Monthly</stringValue>
            </defaultValue>
            <fieldText>Repayment Frequency</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasARepaymentFrequency__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasARepaymentFrequency__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RepaymentAmountOptional</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <elementReference>liability.RepaymentAmount__c</elementReference>
            </defaultValue>
            <fieldText>Repayment Amount</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;Repayment Amount &lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;must be grater than zero&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!RepaymentAmountOptional} &gt; 0</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasARepaymentAmount__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasARepaymentAmount__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RepaymentAmountAlways</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <elementReference>liability.RepaymentAmount__c</elementReference>
            </defaultValue>
            <fieldText>Repayment Amount</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Repayment Amount must be grater than zero&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!RepaymentAmountAlways} &gt; 0</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasARepaymentAmount__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Mandatory</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>FinalPaymentBalloonPayment</name>
            <dataType>Currency</dataType>
            <defaultValue>
                <elementReference>liability.FinalPayment__c</elementReference>
            </defaultValue>
            <fieldText>Final Payment (aka Balloon Payment)</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Final Payment (aka Balloon Payment) must be greater than zero (or left blank).&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!FinalPaymentBalloonPayment} &gt; 0</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>liabilityType.HasAFinalPayment__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Optional</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>liabilityType.HasAFinalPayment__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Ask if we need it</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>NotesInternal</name>
            <defaultValue>
                <stringValue>{!liability.NotesInternal__c}</stringValue>
            </defaultValue>
            <fieldText>Notes (Internal)</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Notes cannot exceed 1000 characters&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!NotesInternal}) &lt; 1000</formulaExpression>
            </validationRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>SuccessScreen</name>
        <label>SuccessScreen</label>
        <locationX>446</locationX>
        <locationY>4484</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>LiabilitySavedToast</name>
            <extensionName>c:displayToastFlow</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>message</name>
                <value>
                    <stringValue>Liability saved</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>title</name>
                <value>
                    <stringValue>Success</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>triggerNavigationNextEvent</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>variant</name>
                <value>
                    <stringValue>success</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <nextOrFinishButtonLabel>Close window</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>UpdateCustomerNotesScreen</name>
        <label>UpdateCustomerNotesScreen</label>
        <locationX>622</locationX>
        <locationY>1490</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>AssignCustomerNotes</targetReference>
        </connector>
        <fields>
            <name>NotesCustomer</name>
            <defaultValue>
                <stringValue>{!liability.NotesCustomer__c}</stringValue>
            </defaultValue>
            <fieldText>Notes (Customer)</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Notes cannot exceed 1000 characters&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!NotesCustomer}) &lt; 1000</formulaExpression>
            </validationRule>
        </fields>
        <nextOrFinishButtonLabel>Update customer notes</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>CreateOrUpdate</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>GetClientsInHousehold</name>
        <label>Get clients in household</label>
        <locationX>578</locationX>
        <locationY>2264</locationY>
        <connector>
            <targetReference>AssignClientsChildrenToCollection</targetReference>
        </connector>
        <flowName>AccountGetPeopleInHousehold</flowName>
        <inputAssignments>
            <name>householdId</name>
            <value>
                <elementReference>householdId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>role</name>
            <value>
                <stringValue>Client</stringValue>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>outputClients</assignToReference>
            <name>personAccounts</name>
        </outputAssignments>
    </subflows>
    <subflows>
        <name>Handle_exceptions</name>
        <label>Handle exceptions</label>
        <locationX>314</locationX>
        <locationY>4052</locationY>
        <flowName>ExceptionHandlingNovaServiceErrors</flowName>
        <inputAssignments>
            <name>Calloutexceptionmessage</name>
            <value>
                <elementReference>CallOutExceptionMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>flowError</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>ActionType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CallOutExceptionMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>clients</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>ClientsInRoleIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CreateLiabilityBody</name>
        <apexClass>ExternalService__NovaServiceLiabilities_AdminCreateLiabilityBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>currentItem_FilterOutChildren</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>ErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>householdId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>liability</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Liability__c</objectType>
    </variables>
    <variables>
        <name>LiabilityRoleBody</name>
        <apexClass>ExternalService__NovaServiceLiabilities_RoleBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>LiabilityRoleCollection</name>
        <apexClass>ExternalService__NovaServiceLiabilities_RoleBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>LiabilityRoles</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Role__c</objectType>
    </variables>
    <variables>
        <name>liabilityType</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>LiabilityType__c</objectType>
    </variables>
    <variables>
        <name>LiabilityTypeCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>LiabilityType__c</objectType>
    </variables>
    <variables>
        <name>outputChildren</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>outputClients</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>OwnersAlreadySelected</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RelatedAssetAlwaysId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>RelatedAssetOptionalId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ResponseCode</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>UpdateLiabilityBody</name>
        <apexClass>ExternalService__NovaServiceLiabilities_AdminUpdateLiabilityBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
