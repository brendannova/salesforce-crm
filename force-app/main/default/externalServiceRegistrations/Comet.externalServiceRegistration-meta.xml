<?xml version="1.0" encoding="UTF-8"?>
<ExternalServiceRegistration xmlns="http://soap.sforce.com/2006/04/metadata">
    <description>Used for information request checklists and document generation</description>
    <label>Comet</label>
    <namedCredentialReference>PlatformAudit</namedCredentialReference>
    <operations>
        <active>false</active>
        <name>accountaudit</name>
    </operations>
    <operations>
        <active>false</active>
        <name>addanswers</name>
    </operations>
    <operations>
        <active>false</active>
        <name>assetaudit</name>
    </operations>
    <operations>
        <active>false</active>
        <name>checkinformationrequestlastupdated</name>
    </operations>
    <operations>
        <active>true</active>
        <name>completeinforequest</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createasset</name>
    </operations>
    <operations>
        <active>true</active>
        <name>createauthoritydocument</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createcashaccount</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createcashholding</name>
    </operations>
    <operations>
        <active>true</active>
        <name>createchecklist</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createclientportaldocuments</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createcustomholding</name>
    </operations>
    <operations>
        <active>false</active>
        <name>creategdriveclientadvicefolders</name>
    </operations>
    <operations>
        <active>false</active>
        <name>creategdriveclientfolders</name>
    </operations>
    <operations>
        <active>false</active>
        <name>creategdrivediscomeetingnonpersonalised</name>
    </operations>
    <operations>
        <active>false</active>
        <name>creategdrivediscomeetingpersonalised</name>
    </operations>
    <operations>
        <active>false</active>
        <name>creategdriveprospectfolders</name>
    </operations>
    <operations>
        <active>false</active>
        <name>creategdrivesuitabilitylifeline</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createholdings</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createinformationrequestfee</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createliability</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createmyasset</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createmycashaccount</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createmyliability</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createquestion</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createreview</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createtimelineevents</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createtopup</name>
    </operations>
    <operations>
        <active>false</active>
        <name>createwithdrawal</name>
    </operations>
    <operations>
        <active>false</active>
        <name>deleteauditrecordsbyhousehold</name>
    </operations>
    <operations>
        <active>false</active>
        <name>deleteholdings</name>
    </operations>
    <operations>
        <active>false</active>
        <name>deleteinformationrequestfee</name>
    </operations>
    <operations>
        <active>false</active>
        <name>downloadhouseholdgdriveclientdocument</name>
    </operations>
    <operations>
        <active>false</active>
        <name>exportholdings</name>
    </operations>
    <operations>
        <active>false</active>
        <name>financialproductaudit</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getaccountaudithistory</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getaccountauditrecord</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getallchecklists</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getallhouseholdinfo</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getallquestiongroups</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getallquestions</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getassetaudithistory</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getassetauditrecord</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getassetsbyhousehold</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getassettypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getcashaccountsbyhousehold</name>
    </operations>
    <operations>
        <active>true</active>
        <name>getchecklist</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getfinancialproductauditrecord</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getfinancialproductsaudithistory</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getfinancialproducttypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getgdrivejob</name>
    </operations>
    <operations>
        <active>false</active>
        <name>gethouseholdgdriveclientdocuments</name>
    </operations>
    <operations>
        <active>true</active>
        <name>getinforequest</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinforequestfees</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinforequestholdings</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getliabilitiesbyhousehold</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getliabilityaudithistory</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getliabilityauditrecord</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getliabilitytypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmyassettypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmyfinancialproducttypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmyhouseholdassets</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmyhouseholdcashaccounts</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmyhouseholdliabilities</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmyliabilitytypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>gettrustpilotscore</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getworkablejobs</name>
    </operations>
    <operations>
        <active>false</active>
        <name>householdaccountsauditoverview</name>
    </operations>
    <operations>
        <active>false</active>
        <name>householdassetsauditoverview</name>
    </operations>
    <operations>
        <active>false</active>
        <name>householdaudit</name>
    </operations>
    <operations>
        <active>false</active>
        <name>householdfinancialproductsauditoverview</name>
    </operations>
    <operations>
        <active>false</active>
        <name>householdliabilitiesauditoverview</name>
    </operations>
    <operations>
        <active>false</active>
        <name>liabilityaudit</name>
    </operations>
    <operations>
        <active>false</active>
        <name>movegdrivefolder</name>
    </operations>
    <operations>
        <active>false</active>
        <name>serveaudio</name>
    </operations>
    <operations>
        <active>false</active>
        <name>servevideo</name>
    </operations>
    <operations>
        <active>false</active>
        <name>softdelete</name>
    </operations>
    <operations>
        <active>false</active>
        <name>softdeletecashaccount</name>
    </operations>
    <operations>
        <active>false</active>
        <name>softdeleteliability</name>
    </operations>
    <operations>
        <active>false</active>
        <name>softdeletemyasset</name>
    </operations>
    <operations>
        <active>false</active>
        <name>softdeletemycashaccount</name>
    </operations>
    <operations>
        <active>false</active>
        <name>softdeletemyliability</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateasset</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatecashaccount</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatecustomholding</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateholdings</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateinforequest</name>
    </operations>
    <operations>
        <active>true</active>
        <name>updateinforequestfeedocumentation</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateinformationrequestfee</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updateliability</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatemyasset</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatemycashaccount</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatemyliability</name>
    </operations>
    <operations>
        <active>false</active>
        <name>updatequestion</name>
    </operations>
    <operations>
        <active>false</active>
        <name>uploadhouseholdgdriveclientdocument</name>
    </operations>
    <registrationProviderType>Custom</registrationProviderType>
    <schema>{
  &quot;components&quot;: {
    &quot;schemas&quot;: {
      &quot;AccountAuditRecordResponse&quot;: {
        &quot;properties&quot;: {
          &quot;changes&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/AccountAuditResponse&quot;
          },
          &quot;current&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/AccountAuditResponse&quot;
          },
          &quot;previous&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/AccountAuditResponse&quot;
          }
        },
        &quot;required&quot;: [
          &quot;changes&quot;,
          &quot;current&quot;,
          &quot;previous&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AccountAuditResponse&quot;: {
        &quot;properties&quot;: {
          &quot;account_external_id__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;anticipated_changes_to_income__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;bank_account_name__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;bank_account_number__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;bank_name__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;bank_sort_code__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;cash__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;cash_frequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;certificate_number__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;cognitomigrationstatus__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;cost_of_childcare__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;cost_of_childcare_frequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;cost_of_education_frequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;costs_of_education__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;country_of_domicile__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;country_of_residence__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;dashboard_visibility__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;discovery_level_of_risk__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;do_you_anticioate_any_changes_to_income__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;do_you_have_any_connections_with_the_usa__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;dual_nationality__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;expected_windfalls__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fact_find_type__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finserv__countryofbirth__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finserv__investmentexperience__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finserv__maritalstatus__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finserv__notes__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finserv__preferredname__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finserv__status__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;firstname&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;giving__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;googledrivefolderid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;groupcompany__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasclienttablerow__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;household_lookup__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;in_good_health__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;intelligent_office_id__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;is_will_up_to_date__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isas__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isas_frequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isdeleted&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;last_completed_by_client__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifiedbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifieddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastname&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lta_protection__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lta_protection_type__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;medical_conditions__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;middlename&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;national_insurance_number__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;nationality__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;nominated_bank_details_visible__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;other_investments__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;other_investments_frequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ow_aml_check_account__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ow_essential_spending__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ow_essential_spending_frequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ow_non_essential_spending__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ow_non_essential_spending_frequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ow_portal_activated__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ow_role_in_primary_household__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ow_third_nationality__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ow_total_value_of_contents__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownerid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;parentid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;pensions__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;pensions_frequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personbirthdate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personcontactid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personemail&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personmobilephone&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;phone&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;planning_to_have_more_children__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreatedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreateddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifiedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifieddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;portal_status_last_change__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;portalaccountstatus__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;power_of_attorney_in_place__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;power_of_attorney_types__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;prefered_contact_method__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;profile_status__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;recent_windfalls_inheritance__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;recordtypeid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;rent__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;rent_frequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;retirement_target__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;shippingcity&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;shippingcountry&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;shippingpostalcode&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;shippingstate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;shippingstreet&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;smoked_in_last_12_months__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;smoker__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;valid_will_in_place__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;wealth_marketing_opt_in__pc&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;what_are_your_plans_re_more_children__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;working_situation__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AccountContactRelation&quot;: {
        &quot;properties&quot;: {
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isPrimaryClient&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AddInfoRequestAnswersBody&quot;: {
        &quot;properties&quot;: {
          &quot;questionId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;questionId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminAssetResponse&quot;: {
        &quot;properties&quot;: {
          &quot;businessOwnershipPercentage&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;closureNotes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdAt&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;income&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/IncomeResponse&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;internalNotes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;liabilities&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RelatedLiabilityResponse&quot;
            },
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;purchaseValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;retainedEarnings&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;soldDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;soldValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Sold&quot;,
              &quot;Owned&quot;,
              &quot;Gifted&quot;,
              &quot;Other&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/AssetTypeResponse&quot;
          },
          &quot;typeId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;businessOwnershipPercentage&quot;,
          &quot;closureNotes&quot;,
          &quot;createdAt&quot;,
          &quot;currentValue&quot;,
          &quot;dateOfValuation&quot;,
          &quot;householdId&quot;,
          &quot;id&quot;,
          &quot;income&quot;,
          &quot;internalNotes&quot;,
          &quot;liabilities&quot;,
          &quot;name&quot;,
          &quot;notes&quot;,
          &quot;platformId&quot;,
          &quot;platformLastModifiedDateTime&quot;,
          &quot;purchaseValue&quot;,
          &quot;retainedEarnings&quot;,
          &quot;roles&quot;,
          &quot;soldDate&quot;,
          &quot;soldValue&quot;,
          &quot;status&quot;,
          &quot;type&quot;,
          &quot;typeId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminCashAccountResponse&quot;: {
        &quot;properties&quot;: {
          &quot;closureDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;currentValue&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;customProviderName&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fixedTermEndDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasFixedTerm&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;hasNoticePeriod&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;interestRate&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;internalNotes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;issueNumber&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;name&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;noticePeriodDays&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;platformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderResponse&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sfid&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductTypesResponse&quot;
          }
        },
        &quot;required&quot;: [
          &quot;closureDate&quot;,
          &quot;currentValue&quot;,
          &quot;customProviderName&quot;,
          &quot;dateOfValuation&quot;,
          &quot;fixedTermEndDate&quot;,
          &quot;hasFixedTerm&quot;,
          &quot;hasNoticePeriod&quot;,
          &quot;householdId&quot;,
          &quot;interestRate&quot;,
          &quot;internalNotes&quot;,
          &quot;issueNumber&quot;,
          &quot;name&quot;,
          &quot;notes&quot;,
          &quot;noticePeriodDays&quot;,
          &quot;platformId&quot;,
          &quot;platformLastModifiedDateTime&quot;,
          &quot;publicProvider&quot;,
          &quot;roles&quot;,
          &quot;sfid&quot;,
          &quot;status&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminCreateAssetBody&quot;: {
        &quot;properties&quot;: {
          &quot;businessOwnershipPercentage&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;householdId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;income&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/IncomeBody&quot;
          },
          &quot;internalNotes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;purchaseValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;retainedEarnings&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Sold&quot;,
              &quot;Owned&quot;,
              &quot;Gifted&quot;,
              &quot;Other&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;,
          &quot;income&quot;,
          &quot;name&quot;,
          &quot;roles&quot;,
          &quot;typeId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminCreateCashAccountBody&quot;: {
        &quot;properties&quot;: {
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fixedTermEndDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasFixedTerm&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;hasNoticePeriod&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;householdId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;internalNotes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;issueNumber&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;noticePeriodDays&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderBody&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;status&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;,
          &quot;roles&quot;,
          &quot;typeId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminCreateLiabilityBody&quot;: {
        &quot;properties&quot;: {
          &quot;asset&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/RelatedAssetBody&quot;
          },
          &quot;currentBalance&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;expiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finalBalloonPayment&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;fixedRateExpiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;householdId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;initialBalance&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRateType&quot;: {
            &quot;enum&quot;: [
              &quot;Fixed&quot;,
              &quot;Variable&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;internalNotes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;paidInFullEachMonth&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderBody&quot;
          },
          &quot;repaymentAmount&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;repaymentFrequency&quot;: {
            &quot;enum&quot;: [
              &quot;Annually&quot;,
              &quot;Monthly&quot;,
              &quot;Weekly&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Open&quot;,
              &quot;Remortgaged&quot;,
              &quot;Repaid&quot;,
              &quot;Other&quot;,
              &quot;Discovery mistake&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;,
          &quot;roles&quot;,
          &quot;typeId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminLiabilityResponse&quot;: {
        &quot;properties&quot;: {
          &quot;asset&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/RelatedAssetResponse&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;closureDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;closureNotes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdAt&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;currentBalance&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;customProviderName&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;expiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finalBalloonPayment&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;fixedRateExpiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;household&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;initialBalance&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRateType&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;internalNotes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;paidInFullEachMonth&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;platformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderResponse&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;repaymentAmount&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;repaymentFrequency&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;roles&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/RoleResponse&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;OPEN&quot;,
              &quot;REMORTGAGED&quot;,
              &quot;REPAID&quot;,
              &quot;OTHER&quot;,
              &quot;DISCOVERY_MISTAKE&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LiabilityTypeResponse&quot;
          }
        },
        &quot;required&quot;: [
          &quot;asset&quot;,
          &quot;createdAt&quot;,
          &quot;customProviderName&quot;,
          &quot;expiryDate&quot;,
          &quot;household&quot;,
          &quot;id&quot;,
          &quot;interestRate&quot;,
          &quot;interestRateType&quot;,
          &quot;name&quot;,
          &quot;platformId&quot;,
          &quot;platformLastModifiedDateTime&quot;,
          &quot;publicProvider&quot;,
          &quot;repaymentAmount&quot;,
          &quot;repaymentFrequency&quot;,
          &quot;roles&quot;,
          &quot;sfid&quot;,
          &quot;status&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminSoftDeleteAssetBody&quot;: {
        &quot;properties&quot;: {
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;soldDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;soldValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Sold&quot;,
              &quot;Gifted&quot;,
              &quot;Other&quot;,
              &quot;Discovery mistake&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminSoftDeleteLiabilityBody&quot;: {
        &quot;properties&quot;: {
          &quot;closureDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Remortgaged&quot;,
              &quot;Repaid&quot;,
              &quot;Other&quot;,
              &quot;Discovery mistake&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminUpdateAssetBody&quot;: {
        &quot;properties&quot;: {
          &quot;businessOwnershipPercentage&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;householdId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;income&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/IncomeBody&quot;
          },
          &quot;internalNotes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;purchaseValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;retainedEarnings&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Sold&quot;,
              &quot;Owned&quot;,
              &quot;Gifted&quot;,
              &quot;Other&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;platformId&quot;,
          &quot;platformLastModifiedDateTime&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminUpdateCashAccountBody&quot;: {
        &quot;properties&quot;: {
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fixedTermEndDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasFixedTerm&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;hasNoticePeriod&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;householdId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;internalNotes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;issueNumber&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;noticePeriodDays&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;platformId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderBody&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;,
          &quot;platformId&quot;,
          &quot;platformLastModifiedDateTime&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AdminUpdateLiabilityBody&quot;: {
        &quot;properties&quot;: {
          &quot;asset&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/RelatedAssetBody&quot;
          },
          &quot;currentBalance&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;expiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finalBalloonPayment&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;fixedRateExpiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;householdId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;initialBalance&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRateType&quot;: {
            &quot;enum&quot;: [
              &quot;Fixed&quot;,
              &quot;Variable&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;internalNotes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;paidInFullEachMonth&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;platformId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderBody&quot;
          },
          &quot;repaymentAmount&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;repaymentFrequency&quot;: {
            &quot;enum&quot;: [
              &quot;Annually&quot;,
              &quot;Monthly&quot;,
              &quot;Weekly&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Open&quot;,
              &quot;Remortgaged&quot;,
              &quot;Repaid&quot;,
              &quot;Other&quot;,
              &quot;Discovery mistake&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;platformId&quot;,
          &quot;platformLastModifiedDateTime&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;Advice&quot;: {
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AnswerResponse&quot;: {
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;questionId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;questionId&quot;,
          &quot;value&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;Asset&quot;: {
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personAccounts&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/PersonAccount1&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;purchaseValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;status&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;name&quot;,
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;Asset1&quot;: {
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personAccounts&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/PersonAccount1&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AssetAuditRecordResponse&quot;: {
        &quot;properties&quot;: {
          &quot;changes&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/AssetAuditResponse&quot;
          },
          &quot;current&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/AssetAuditResponse&quot;
          },
          &quot;previous&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/AssetAuditResponse&quot;
          },
          &quot;schemaName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;tableName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;changes&quot;,
          &quot;current&quot;,
          &quot;previous&quot;,
          &quot;schemaName&quot;,
          &quot;tableName&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AssetAuditResponse&quot;: {
        &quot;properties&quot;: {
          &quot;assettype__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;businessownershippercentage__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;closure_notes__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;household__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isdeleted&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifiedbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifieddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastreferenceddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastvieweddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;legacyasset__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notescustomer__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notesinternal__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownerid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreatedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreateddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifiedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifieddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;purchasevalue__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;retainedearnings__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;solddate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;soldvalue__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;valuationdate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AssetAuditSnapshotResponse&quot;: {
        &quot;properties&quot;: {
          &quot;asset&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/AssetAuditResponse&quot;
          },
          &quot;income&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/IncomeAuditResponse&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleAuditResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;required&quot;: [
          &quot;asset&quot;,
          &quot;income&quot;,
          &quot;roles&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AssetTypeResponse&quot;: {
        &quot;properties&quot;: {
          &quot;category&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sortOrder&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        },
        &quot;required&quot;: [
          &quot;category&quot;,
          &quot;id&quot;,
          &quot;name&quot;,
          &quot;sfid&quot;,
          &quot;sortOrder&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AuditHistoryOverviewEntry&quot;: {
        &quot;properties&quot;: {
          &quot;createdAt&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fieldsChanged&quot;: {
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;origin&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedBy&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformModifiedAt&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfLastModifiedBy&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfModifiedAt&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;tableName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updateMadeAt&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updateMadeBy&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;createdAt&quot;,
          &quot;fieldsChanged&quot;,
          &quot;id&quot;,
          &quot;origin&quot;,
          &quot;platformLastModifiedBy&quot;,
          &quot;platformModifiedAt&quot;,
          &quot;sfLastModifiedBy&quot;,
          &quot;sfModifiedAt&quot;,
          &quot;tableName&quot;,
          &quot;updateMadeAt&quot;,
          &quot;updateMadeBy&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;AuditHistoryOverviewResponse&quot;: {
        &quot;properties&quot;: {
          &quot;history&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AuditHistoryOverviewEntry&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;size&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        },
        &quot;required&quot;: [
          &quot;history&quot;,
          &quot;size&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;CashAccount&quot;: {
        &quot;properties&quot;: {
          &quot;dateOfValuation&quot;: {
            &quot;default&quot;: null,
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownership&quot;: {
            &quot;enum&quot;: [
              &quot;Individual&quot;,
              &quot;Joint&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personAccounts&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/PersonAccount1&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;publicProviderName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;default&quot;: null,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;voyantDisplayName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;name&quot;,
          &quot;ownership&quot;,
          &quot;personAccounts&quot;,
          &quot;publicProviderName&quot;,
          &quot;type&quot;,
          &quot;value&quot;,
          &quot;voyantDisplayName&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ChecklistFinancialProductTypesResponse&quot;: {
        &quot;properties&quot;: {
          &quot;category&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;category&quot;,
          &quot;id&quot;,
          &quot;name&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ChecklistResponse&quot;: {
        &quot;properties&quot;: {
          &quot;active&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;financialProductType&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ChecklistFinancialProductTypesResponse&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;questions&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/QuestionResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;type&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;active&quot;,
          &quot;financialProductType&quot;,
          &quot;id&quot;,
          &quot;questions&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientAssetResponse&quot;: {
        &quot;properties&quot;: {
          &quot;businessOwnershipPercentage&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;closureNotes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdAt&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;income&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/IncomeResponse&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;liabilities&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RelatedLiabilityResponse&quot;
            },
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;purchaseValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;retainedEarnings&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Sold&quot;,
              &quot;Owned&quot;,
              &quot;Gifted&quot;,
              &quot;Other&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/AssetTypeResponse&quot;
          },
          &quot;typeId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;businessOwnershipPercentage&quot;,
          &quot;closureNotes&quot;,
          &quot;createdAt&quot;,
          &quot;currentValue&quot;,
          &quot;dateOfValuation&quot;,
          &quot;householdId&quot;,
          &quot;id&quot;,
          &quot;income&quot;,
          &quot;liabilities&quot;,
          &quot;name&quot;,
          &quot;notes&quot;,
          &quot;platformId&quot;,
          &quot;platformLastModifiedDateTime&quot;,
          &quot;purchaseValue&quot;,
          &quot;retainedEarnings&quot;,
          &quot;roles&quot;,
          &quot;status&quot;,
          &quot;type&quot;,
          &quot;typeId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientCashAccountResponse&quot;: {
        &quot;properties&quot;: {
          &quot;currentValue&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;customProviderName&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fixedTermEndDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasFixedTerm&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;hasNoticePeriod&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;interestRate&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;issueNumber&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;name&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;noticePeriodDays&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;platformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderResponse&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sfid&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductTypesResponse&quot;
          }
        },
        &quot;required&quot;: [
          &quot;customProviderName&quot;,
          &quot;dateOfValuation&quot;,
          &quot;fixedTermEndDate&quot;,
          &quot;hasFixedTerm&quot;,
          &quot;hasNoticePeriod&quot;,
          &quot;householdId&quot;,
          &quot;interestRate&quot;,
          &quot;issueNumber&quot;,
          &quot;name&quot;,
          &quot;notes&quot;,
          &quot;noticePeriodDays&quot;,
          &quot;platformId&quot;,
          &quot;platformLastModifiedDateTime&quot;,
          &quot;publicProvider&quot;,
          &quot;roles&quot;,
          &quot;sfid&quot;,
          &quot;status&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientCreateAssetBody&quot;: {
        &quot;properties&quot;: {
          &quot;businessOwnershipPercentage&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;income&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/IncomeBody&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;purchaseValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;retainedEarnings&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Sold&quot;,
              &quot;Owned&quot;,
              &quot;Gifted&quot;,
              &quot;Other&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;income&quot;,
          &quot;name&quot;,
          &quot;roles&quot;,
          &quot;typeId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientCreateCashAccountBody&quot;: {
        &quot;properties&quot;: {
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fixedTermEndDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasFixedTerm&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;hasNoticePeriod&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;issueNumber&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;noticePeriodDays&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderBody&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;roles&quot;,
          &quot;typeId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientCreateLiabilityBody&quot;: {
        &quot;properties&quot;: {
          &quot;asset&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/RelatedAssetBody&quot;
          },
          &quot;currentBalance&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;expiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finalBalloonPayment&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;fixedRateExpiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;initialBalance&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRateType&quot;: {
            &quot;enum&quot;: [
              &quot;Fixed&quot;,
              &quot;Variable&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;paidInFullEachMonth&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderBody&quot;
          },
          &quot;repaymentAmount&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;repaymentFrequency&quot;: {
            &quot;enum&quot;: [
              &quot;Annually&quot;,
              &quot;Monthly&quot;,
              &quot;Weekly&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;roles&quot;,
          &quot;typeId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientLiabilityResponse&quot;: {
        &quot;properties&quot;: {
          &quot;asset&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/RelatedAssetResponse&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;createdAt&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;currentBalance&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;customProviderName&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;expiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finalBalloonPayment&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;fixedRateExpiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;household&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;initialBalance&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRateType&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;paidInFullEachMonth&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;platformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderResponse&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;repaymentAmount&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;repaymentFrequency&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;roles&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/RoleResponse&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;OPEN&quot;,
              &quot;REMORTGAGED&quot;,
              &quot;REPAID&quot;,
              &quot;OTHER&quot;,
              &quot;DISCOVERY_MISTAKE&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LiabilityTypeResponse&quot;
          }
        },
        &quot;required&quot;: [
          &quot;asset&quot;,
          &quot;createdAt&quot;,
          &quot;customProviderName&quot;,
          &quot;expiryDate&quot;,
          &quot;household&quot;,
          &quot;id&quot;,
          &quot;interestRate&quot;,
          &quot;interestRateType&quot;,
          &quot;name&quot;,
          &quot;platformId&quot;,
          &quot;platformLastModifiedDateTime&quot;,
          &quot;publicProvider&quot;,
          &quot;repaymentFrequency&quot;,
          &quot;roles&quot;,
          &quot;sfid&quot;,
          &quot;status&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientSoftDeleteAssetBody&quot;: {
        &quot;properties&quot;: {
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;soldDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;soldValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Sold&quot;,
              &quot;Gifted&quot;,
              &quot;Other&quot;,
              &quot;Discovery mistake&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientSoftDeleteLiabilityBody&quot;: {
        &quot;properties&quot;: {
          &quot;closureDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Remortgaged&quot;,
              &quot;Repaid&quot;,
              &quot;Other&quot;,
              &quot;Discovery mistake&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientUpdateAssetBody&quot;: {
        &quot;properties&quot;: {
          &quot;businessOwnershipPercentage&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;income&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/IncomeBody&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;purchaseValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;retainedEarnings&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;enum&quot;: [
              &quot;Sold&quot;,
              &quot;Owned&quot;,
              &quot;Gifted&quot;,
              &quot;Other&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;platformId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientUpdateCashAccountBody&quot;: {
        &quot;properties&quot;: {
          &quot;currentValue&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fixedTermEndDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasFixedTerm&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;hasNoticePeriod&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;issueNumber&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;noticePeriodDays&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;platformId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformLastModifiedDateTime&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderBody&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;platformId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ClientUpdateLiabilityBody&quot;: {
        &quot;properties&quot;: {
          &quot;asset&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/RelatedAssetBody&quot;
          },
          &quot;currentBalance&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;expiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finalBalloonPayment&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;fixedRateExpiryDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;initialBalance&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;interestRateType&quot;: {
            &quot;enum&quot;: [
              &quot;Fixed&quot;,
              &quot;Variable&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;paidInFullEachMonth&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;platformId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderBody&quot;
          },
          &quot;repaymentAmount&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;repaymentFrequency&quot;: {
            &quot;enum&quot;: [
              &quot;Annually&quot;,
              &quot;Monthly&quot;,
              &quot;Weekly&quot;
            ],
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;platformId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;CreateChecklistBody&quot;: {
        &quot;properties&quot;: {
          &quot;financialProductTypeId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;questionIds&quot;: {
            &quot;items&quot;: {
              &quot;maxLength&quot;: 1000,
              &quot;nullable&quot;: true,
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;type&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;financialProductTypeId&quot;,
          &quot;questionIds&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;CreateCustomHoldingBody&quot;: {
        &quot;properties&quot;: {
          &quot;date&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;identifier&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ocfRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;price&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;priceDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;transactionFeeRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;units&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;date&quot;,
          &quot;name&quot;,
          &quot;price&quot;,
          &quot;priceDate&quot;,
          &quot;units&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;CreateHoldingBody&quot;: {
        &quot;properties&quot;: {
          &quot;date&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isin&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;units&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;date&quot;,
          &quot;isin&quot;,
          &quot;units&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;CreateInfoRequestFeesBody&quot;: {
        &quot;properties&quot;: {
          &quot;amount&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;bands&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/FeeBands&quot;
            },
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;frequency&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;max&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;min&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;structure&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;vatApplies&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;frequency&quot;,
          &quot;structure&quot;,
          &quot;type&quot;,
          &quot;vatApplies&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;CreateQuestionBody&quot;: {
        &quot;properties&quot;: {
          &quot;description&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;groupId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;options&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/CreateQuestionOptionBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;questionIndex&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;text&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;groupId&quot;,
          &quot;text&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;CreateQuestionEdgeBody&quot;: {
        &quot;properties&quot;: {
          &quot;nextQuestionId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;nextQuestionId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;CreateQuestionOptionBody&quot;: {
        &quot;properties&quot;: {
          &quot;edges&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/CreateQuestionEdgeBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;value&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;value&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;CreateUpdateCashHoldingBody&quot;: {
        &quot;properties&quot;: {
          &quot;date&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;units&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;date&quot;,
          &quot;units&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;Employment&quot;: {
        &quot;properties&quot;: {
          &quot;averageBonus&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;dividends&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;employmentStatus&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personAccount&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/PersonAccount1&quot;
          },
          &quot;position&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;recordTypeId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;salary&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;status&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;voyantDisplayName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;voyantGrowth&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;voyantSource&quot;: {
            &quot;enum&quot;: [
              &quot;Company Owner&quot;,
              &quot;Employed&quot;,
              &quot;Self Employed&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;name&quot;,
          &quot;personAccount&quot;,
          &quot;position&quot;,
          &quot;recordTypeId&quot;,
          &quot;voyantDisplayName&quot;,
          &quot;voyantGrowth&quot;,
          &quot;voyantSource&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ExpenseStep&quot;: {
        &quot;properties&quot;: {
          &quot;event&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/VoyantLifelineEvent1&quot;
          },
          &quot;value&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;value&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ExportHoldingsBody&quot;: {
        &quot;properties&quot;: {
          &quot;sheetUrl&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;sheetUrl&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;FeeBandResponse&quot;: {
        &quot;properties&quot;: {
          &quot;lowerLimit&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;rate&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;upperLimit&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;lowerLimit&quot;,
          &quot;rate&quot;,
          &quot;upperLimit&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;FeeBands&quot;: {
        &quot;properties&quot;: {
          &quot;lowerLimit&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;rate&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;upperLimit&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;lowerLimit&quot;,
          &quot;rate&quot;,
          &quot;upperLimit&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;FileDownloadResponse&quot;: {
        &quot;properties&quot;: {
          &quot;file&quot;: {}
        },
        &quot;required&quot;: [
          &quot;file&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;FileUploadRequest&quot;: {
        &quot;properties&quot;: {
          &quot;file&quot;: {},
          &quot;notes&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;file&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;FinancialProduct&quot;: {
        &quot;properties&quot;: {
          &quot;companyName&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;dateOfValuation&quot;: {
            &quot;default&quot;: null,
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;incomeOnRetirement&quot;: {
            &quot;default&quot;: null,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;incomeOnRetirementFrequency&quot;: {
            &quot;default&quot;: null,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownership&quot;: {
            &quot;enum&quot;: [
              &quot;Individual&quot;,
              &quot;Joint&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personAccounts&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/PersonAccount1&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderResponse&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;recordTypeId&quot;: {
            &quot;default&quot;: null,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;recordTypeName&quot;: {
            &quot;default&quot;: null,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;serviceProvider&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;default&quot;: null,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;subTypeName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;voyantDisplayName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;name&quot;,
          &quot;ownership&quot;,
          &quot;subTypeName&quot;,
          &quot;value&quot;,
          &quot;voyantDisplayName&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;FinancialProductAuditRecordResponse&quot;: {
        &quot;properties&quot;: {
          &quot;changes&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductAuditResponse&quot;
          },
          &quot;current&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductAuditResponse&quot;
          },
          &quot;previous&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductAuditResponse&quot;
          },
          &quot;schemaName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;tableName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;changes&quot;,
          &quot;current&quot;,
          &quot;previous&quot;,
          &quot;schemaName&quot;,
          &quot;tableName&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;FinancialProductAuditResponse&quot;: {
        &quot;properties&quot;: {
          &quot;closeddate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;financialproducttype__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fixedtermenddate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;household__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;interestrate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isdeleted&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifiedbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifieddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastreferenceddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastvieweddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;legacyfinancialproduct__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notescustomer__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notesinternal__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;noticeperioddays__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownerid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreatedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreateddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifiedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifieddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;policynumber__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicproviderlist__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;solddate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;startdate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;valuationdate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;FinancialProductAuditSnapshotResponse&quot;: {
        &quot;properties&quot;: {
          &quot;financialProduct&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductAuditResponse&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleAuditResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;required&quot;: [
          &quot;financialProduct&quot;,
          &quot;roles&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;FinancialProductTypesResponse&quot;: {
        &quot;properties&quot;: {
          &quot;category&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;defaultProviderId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;defaultProviderName&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasFixedTerm&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasInterestRate&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasIssueNumber&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasNoticePeriod&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;isTaxable&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;maximumAge&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;minimumAge&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;category&quot;,
          &quot;defaultProviderId&quot;,
          &quot;defaultProviderName&quot;,
          &quot;hasFixedTerm&quot;,
          &quot;hasInterestRate&quot;,
          &quot;hasIssueNumber&quot;,
          &quot;hasNoticePeriod&quot;,
          &quot;id&quot;,
          &quot;isTaxable&quot;,
          &quot;maximumAge&quot;,
          &quot;minimumAge&quot;,
          &quot;name&quot;,
          &quot;sfid&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobCreateAuthorityDocumentBody&quot;: {
        &quot;properties&quot;: {
          &quot;authorityLevel&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;infoRequestId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;useSignature&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;authorityLevel&quot;,
          &quot;infoRequestId&quot;,
          &quot;useSignature&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobCreateClientAdviceFolderBody&quot;: {
        &quot;properties&quot;: {
          &quot;adviceId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;adviceId&quot;,
          &quot;householdId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobCreateClientFolderBody&quot;: {
        &quot;properties&quot;: {
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobCreateDiscoNonPersonalisedBody&quot;: {
        &quot;properties&quot;: {
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;opportunityId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;,
          &quot;opportunityId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobCreateDiscoPersonalisedBody&quot;: {
        &quot;properties&quot;: {
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;opportunityId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;voyantData&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;,
          &quot;opportunityId&quot;,
          &quot;voyantData&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobCreatePortalDocsBody&quot;: {
        &quot;properties&quot;: {
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobCreateProspectFolderBody&quot;: {
        &quot;properties&quot;: {
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobCreateSuitabilityLifelineBody&quot;: {
        &quot;properties&quot;: {
          &quot;adviceId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;voyantData&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;adviceId&quot;,
          &quot;householdId&quot;,
          &quot;voyantData&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobMoveFolderBody&quot;: {
        &quot;properties&quot;: {
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;householdId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobResponse&quot;: {
        &quot;properties&quot;: {
          &quot;result&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;result&quot;,
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveJobWaitingResponse&quot;: {
        &quot;properties&quot;: {
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GDriveRecordResponse&quot;: {
        &quot;properties&quot;: {
          &quot;canDownload&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          },
          &quot;children&quot;: {
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;fileMimetype&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;label&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;modifiedTime&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;parents&quot;: {
            &quot;items&quot;: {
              &quot;type&quot;: &quot;string&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;required&quot;: [
          &quot;canDownload&quot;,
          &quot;fileMimetype&quot;,
          &quot;id&quot;,
          &quot;label&quot;,
          &quot;modifiedTime&quot;,
          &quot;parents&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GSlidesJobReviewBody&quot;: {
        &quot;properties&quot;: {
          &quot;adviceId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;adviceId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GSlidesJobTopUpBody&quot;: {
        &quot;properties&quot;: {
          &quot;adviceId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;adviceId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GSlidesJobWithdrawalBody&quot;: {
        &quot;properties&quot;: {
          &quot;adviceId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;adviceId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GlobalMarketIndicators&quot;: {
        &quot;properties&quot;: {
          &quot;15YearGiltRate&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;CPI&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;IHTPropertyEscalationRate&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;RPI&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;annuityAssumedInterestRate&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;defaultTaxTableAssumptions&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;inflation&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;investmentGrowthRate&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;nationalAverageEarnings&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;nilRateBand&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;propertyGrowthRate&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          },
          &quot;savingsGrowthRate&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
          }
        },
        &quot;required&quot;: [
          &quot;15YearGiltRate&quot;,
          &quot;CPI&quot;,
          &quot;IHTPropertyEscalationRate&quot;,
          &quot;RPI&quot;,
          &quot;annuityAssumedInterestRate&quot;,
          &quot;defaultTaxTableAssumptions&quot;,
          &quot;inflation&quot;,
          &quot;investmentGrowthRate&quot;,
          &quot;nationalAverageEarnings&quot;,
          &quot;nilRateBand&quot;,
          &quot;propertyGrowthRate&quot;,
          &quot;savingsGrowthRate&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GoogleJobIdResponse&quot;: {
        &quot;properties&quot;: {
          &quot;job_id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;job_id&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GroupedFinancialProducts&quot;: {
        &quot;properties&quot;: {
          &quot;investments&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/FinancialProduct&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;other&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/FinancialProduct&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;pensions&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/FinancialProduct&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;savings&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/CashAccount&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;GroupedPersonAccounts&quot;: {
        &quot;properties&quot;: {
          &quot;child&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/PersonAccount&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;client&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/PersonAccount&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;Household&quot;: {
        &quot;properties&quot;: {
          &quot;essentialSpending&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isPlanMoreChildren&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastReview&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;nextReview&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;nonEssentialSpending&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/ValueWithPeriod&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;name&quot;,
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;HouseholdAccountOverviewResponse&quot;: {
        &quot;properties&quot;: {
          &quot;dateOfBirth&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;dateOfBirth&quot;,
          &quot;name&quot;,
          &quot;sfid&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;HouseholdAccountsAuditOverviewResponse&quot;: {
        &quot;properties&quot;: {
          &quot;accounts&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/HouseholdAccountOverviewResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;size&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        },
        &quot;required&quot;: [
          &quot;size&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;HouseholdAssetOverviewResponse&quot;: {
        &quot;properties&quot;: {
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;name&quot;,
          &quot;sfid&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;HouseholdAssetsAuditOverviewResponse&quot;: {
        &quot;properties&quot;: {
          &quot;assets&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/HouseholdAssetOverviewResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;size&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        },
        &quot;required&quot;: [
          &quot;size&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;HouseholdAuditDeletionResponse&quot;: {
        &quot;properties&quot;: {
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;HouseholdFinancialProductOverviewResponse&quot;: {
        &quot;properties&quot;: {
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;provider&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;name&quot;,
          &quot;provider&quot;,
          &quot;sfid&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;HouseholdFinancialProductsAuditOverviewResponse&quot;: {
        &quot;properties&quot;: {
          &quot;financialProducts&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/HouseholdFinancialProductOverviewResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;size&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        },
        &quot;required&quot;: [
          &quot;size&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;HouseholdLiabilitiesAuditOverviewResponse&quot;: {
        &quot;properties&quot;: {
          &quot;liabilities&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/HouseholdLiabilityOverviewResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;size&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        },
        &quot;required&quot;: [
          &quot;size&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;HouseholdLiabilityOverviewResponse&quot;: {
        &quot;properties&quot;: {
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;provider&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;name&quot;,
          &quot;provider&quot;,
          &quot;sfid&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;IncomeAuditRecordResponse&quot;: {
        &quot;properties&quot;: {
          &quot;changes&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/IncomeAuditResponse1&quot;
          },
          &quot;current&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/IncomeAuditResponse&quot;
          },
          &quot;previous&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/IncomeAuditResponse&quot;
          },
          &quot;schemaName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;tableName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;changes&quot;,
          &quot;current&quot;,
          &quot;previous&quot;,
          &quot;schemaName&quot;,
          &quot;tableName&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;IncomeAuditResponse&quot;: {
        &quot;properties&quot;: {
          &quot;amount__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;amountfrequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;asset__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;asset__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isdeleted&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifiedbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifieddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastreferenceddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastvieweddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownerid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreatedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreateddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifiedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifieddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;IncomeAuditResponse1&quot;: {
        &quot;properties&quot;: {
          &quot;amount__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;amountfrequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;asset__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;asset__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isdeleted&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifiedbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifieddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastreferenceddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastvieweddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownerid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreatedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreateddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifiedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifieddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;IncomeBody&quot;: {
        &quot;properties&quot;: {
          &quot;amount&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;period&quot;: {
            &quot;enum&quot;: [
              &quot;Single&quot;,
              &quot;Weekly&quot;,
              &quot;Monthly&quot;,
              &quot;Quarterly&quot;,
              &quot;Annually&quot;
            ],
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;IncomeResponse&quot;: {
        &quot;properties&quot;: {
          &quot;amount&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;period&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;amount&quot;,
          &quot;period&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestCompletedResponse&quot;: {
        &quot;properties&quot;: {
          &quot;completed&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;completed&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestFPResponse&quot;: {
        &quot;properties&quot;: {
          &quot;answers&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AnswerResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;checklist&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ChecklistResponse&quot;
          },
          &quot;financialProduct&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/SFLegacyFinancialProduct&quot;
          },
          &quot;householdDriveId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastModified&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;answers&quot;,
          &quot;checklist&quot;,
          &quot;financialProduct&quot;,
          &quot;householdDriveId&quot;,
          &quot;id&quot;,
          &quot;lastModified&quot;,
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestFeeResponse&quot;: {
        &quot;properties&quot;: {
          &quot;amount&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;bands&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/FeeBandResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;frequency&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;frequencyLabel&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;max&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;min&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;rate&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;structure&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;structureLabel&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;typeLabel&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;vatApplies&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;amount&quot;,
          &quot;bands&quot;,
          &quot;frequency&quot;,
          &quot;frequencyLabel&quot;,
          &quot;id&quot;,
          &quot;max&quot;,
          &quot;min&quot;,
          &quot;rate&quot;,
          &quot;structure&quot;,
          &quot;structureLabel&quot;,
          &quot;type&quot;,
          &quot;typeLabel&quot;,
          &quot;vatApplies&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestFeesDocumentationBody&quot;: {
        &quot;properties&quot;: {
          &quot;documentationNotes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;documentationUrl&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;documentationNotes&quot;,
          &quot;documentationUrl&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestFeesResponse&quot;: {
        &quot;properties&quot;: {
          &quot;annualCost&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;annualCostPercentage&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;annualInvestmentCost&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;annualInvestmentCostPercentage&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;documentationNotes&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;documentationUrl&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fees&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFeeResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;totalValue&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;transferValue&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;annualCost&quot;,
          &quot;annualCostPercentage&quot;,
          &quot;annualInvestmentCost&quot;,
          &quot;annualInvestmentCostPercentage&quot;,
          &quot;documentationNotes&quot;,
          &quot;documentationUrl&quot;,
          &quot;fees&quot;,
          &quot;id&quot;,
          &quot;totalValue&quot;,
          &quot;transferValue&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestHoldingResponse&quot;: {
        &quot;properties&quot;: {
          &quot;date&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;description&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;identifier&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isin&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;longName&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ocfRate&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;price&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;priceDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;transactionFeeRate&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;units&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;date&quot;,
          &quot;description&quot;,
          &quot;id&quot;,
          &quot;identifier&quot;,
          &quot;isin&quot;,
          &quot;longName&quot;,
          &quot;name&quot;,
          &quot;ocfRate&quot;,
          &quot;price&quot;,
          &quot;priceDate&quot;,
          &quot;transactionFeeRate&quot;,
          &quot;units&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestHoldingsExportResponse&quot;: {
        &quot;properties&quot;: {
          &quot;success&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;success&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestHoldingsResponse&quot;: {
        &quot;properties&quot;: {
          &quot;holdings&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestHoldingResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;totalValue&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;holdings&quot;,
          &quot;id&quot;,
          &quot;totalValue&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestIsUpdatedResponse&quot;: {
        &quot;properties&quot;: {
          &quot;answers&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AnswerResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;checklist&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ChecklistResponse&quot;
          },
          &quot;householdDriveId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastModified&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;updated&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;answers&quot;,
          &quot;checklist&quot;,
          &quot;householdDriveId&quot;,
          &quot;id&quot;,
          &quot;lastModified&quot;,
          &quot;status&quot;,
          &quot;updated&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestLegacyFPResponse&quot;: {
        &quot;properties&quot;: {
          &quot;answers&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AnswerResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;checklist&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/ChecklistResponse&quot;
          },
          &quot;financialProduct&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/SFLegacyFinancialProduct&quot;
          },
          &quot;householdDriveId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastModified&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;answers&quot;,
          &quot;checklist&quot;,
          &quot;financialProduct&quot;,
          &quot;householdDriveId&quot;,
          &quot;id&quot;,
          &quot;lastModified&quot;,
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;InfoRequestUpdateCheckBody&quot;: {
        &quot;properties&quot;: {
          &quot;lastModified&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;lastModified&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;LegacyFinancialProductOwner&quot;: {
        &quot;properties&quot;: {
          &quot;addressCity&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;addressStreet&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;dateOfBirth&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;displayName&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastName&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;nationalInsuranceNumber&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;postCode&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;addressCity&quot;,
          &quot;addressStreet&quot;,
          &quot;dateOfBirth&quot;,
          &quot;displayName&quot;,
          &quot;id&quot;,
          &quot;lastName&quot;,
          &quot;nationalInsuranceNumber&quot;,
          &quot;postCode&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;LegacyFinancialProductProvider&quot;: {
        &quot;properties&quot;: {
          &quot;addressCity&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;addressStreet&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;email&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;phone&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;postCode&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;addressCity&quot;,
          &quot;addressStreet&quot;,
          &quot;email&quot;,
          &quot;id&quot;,
          &quot;name&quot;,
          &quot;phone&quot;,
          &quot;postCode&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;LegacyFinancialProductTypeResponse&quot;: {
        &quot;properties&quot;: {
          &quot;developerName&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;developerName&quot;,
          &quot;name&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;Liabilities&quot;: {
        &quot;properties&quot;: {
          &quot;currentBalance&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;interestRate&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;linkedAsset&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/Asset1&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;monthlyPayment&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;mortgageType&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personAccounts&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/PersonAccount1&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;publicProvider&quot;: {
            &quot;allOf&quot;: [{
              &quot;$ref&quot;: &quot;#/components/schemas/PublicProviderResponse&quot;
            }],
            &quot;nullable&quot;: true
          },
          &quot;status&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;name&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;LiabilityAuditRecordResponse&quot;: {
        &quot;properties&quot;: {
          &quot;changes&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LiabilityAuditResponse1&quot;
          },
          &quot;current&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LiabilityAuditResponse&quot;
          },
          &quot;previous&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LiabilityAuditResponse&quot;
          },
          &quot;schemaName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;tableName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;changes&quot;,
          &quot;current&quot;,
          &quot;previous&quot;,
          &quot;schemaName&quot;,
          &quot;tableName&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;LiabilityAuditResponse&quot;: {
        &quot;properties&quot;: {
          &quot;asset__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;asset__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;balance__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;closuredate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;closurenotes__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;customprovidername__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;enddate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finalpayment__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fixedrateexpiry__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;household__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;initialbalance__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;interestrate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isdeleted&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ispaidoffinfulleachmonth__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifiedbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifieddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastreferenceddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastvieweddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;legacyliability__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;liabilitytype__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notescustomer__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notesinternal__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownerid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreatedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreateddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifiedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifieddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicproviderlist__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ratetype__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;repaymentamount__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;repaymentfrequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;LiabilityAuditResponse1&quot;: {
        &quot;properties&quot;: {
          &quot;asset__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;asset__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;balance__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;closuredate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;closurenotes__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;customprovidername__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;enddate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;finalpayment__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;fixedrateexpiry__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;household__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;initialbalance__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;interestrate__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isdeleted&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ispaidoffinfulleachmonth__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifiedbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifieddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastreferenceddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastvieweddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;legacyliability__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;liabilitytype__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notescustomer__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;notesinternal__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownerid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreatedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreateddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifiedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifieddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;publicproviderlist__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ratetype__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;repaymentamount__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;repaymentfrequency__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;status__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;LiabilityAuditSnapshotResponse&quot;: {
        &quot;properties&quot;: {
          &quot;liability&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LiabilityAuditResponse&quot;
          },
          &quot;roles&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/RoleAuditResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;required&quot;: [
          &quot;liability&quot;,
          &quot;roles&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;LiabilityTypeResponse&quot;: {
        &quot;properties&quot;: {
          &quot;category&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasBalance&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasEndDate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasFinalPaymentBalloonPayment&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasFixedRateExpiry&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasInitialBalance&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasInterestRate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasPublicProvider&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasRateType&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasRelatedAsset&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;hasRepaymentAmount&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;isPaidOffInFullEachMonth&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;category&quot;,
          &quot;hasBalance&quot;,
          &quot;hasEndDate&quot;,
          &quot;hasFinalPaymentBalloonPayment&quot;,
          &quot;hasFixedRateExpiry&quot;,
          &quot;hasInitialBalance&quot;,
          &quot;hasInterestRate&quot;,
          &quot;hasPublicProvider&quot;,
          &quot;hasRateType&quot;,
          &quot;hasRelatedAsset&quot;,
          &quot;hasRepaymentAmount&quot;,
          &quot;id&quot;,
          &quot;isPaidOffInFullEachMonth&quot;,
          &quot;name&quot;,
          &quot;sfid&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;Opportunities&quot;: {
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;PersonAccount&quot;: {
        &quot;properties&quot;: {
          &quot;accountRelation&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/AccountContactRelation&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;createdDate&quot;: {
            &quot;format&quot;: &quot;date-time&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;dateOfBirth&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;displayName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;householdId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personContactId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryRole&quot;: {
            &quot;enum&quot;: [
              &quot;Client&quot;,
              &quot;Child&quot;,
              &quot;Other Important Family Member&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;retirementTarget&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;workingSituation&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;displayName&quot;,
          &quot;id&quot;,
          &quot;lastName&quot;,
          &quot;name&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;PersonAccount1&quot;: {
        &quot;properties&quot;: {
          &quot;displayName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;displayName&quot;,
          &quot;id&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;PublicProviderBody&quot;: {
        &quot;properties&quot;: {
          &quot;customName&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;PublicProviderResponse&quot;: {
        &quot;properties&quot;: {
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;sfid&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;QuestionBaseResponse&quot;: {
        &quot;properties&quot;: {
          &quot;description&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;group&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/QuestionGroupResponse&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;options&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/QuestionOptionResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sortOrder&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;text&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;group&quot;,
          &quot;id&quot;,
          &quot;sortOrder&quot;,
          &quot;text&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;QuestionEdgeResponse&quot;: {
        &quot;properties&quot;: {
          &quot;nextQuestion&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/QuestionBaseResponse&quot;
          },
          &quot;option&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/QuestionOptionResponse&quot;
          },
          &quot;prevQuestion&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/QuestionBaseResponse&quot;
          }
        },
        &quot;required&quot;: [
          &quot;nextQuestion&quot;,
          &quot;option&quot;,
          &quot;prevQuestion&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;QuestionGroupResponse&quot;: {
        &quot;properties&quot;: {
          &quot;developerName&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;developerName&quot;,
          &quot;id&quot;,
          &quot;name&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;QuestionOptionResponse&quot;: {
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;value&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;QuestionResponse&quot;: {
        &quot;properties&quot;: {
          &quot;description&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;group&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/QuestionGroupResponse&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;nextEdges&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/QuestionEdgeResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;options&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/QuestionOptionResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;prevEdges&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/QuestionEdgeResponse&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;sortOrder&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;text&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;group&quot;,
          &quot;id&quot;,
          &quot;sortOrder&quot;,
          &quot;text&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;RelatedAssetBody&quot;: {
        &quot;properties&quot;: {
          &quot;platformId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;RelatedAssetResponse&quot;: {
        &quot;properties&quot;: {
          &quot;platformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;platformId&quot;,
          &quot;sfid&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;RelatedLiabilityResponse&quot;: {
        &quot;properties&quot;: {
          &quot;platformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;RoleAuditRecordResponse&quot;: {
        &quot;properties&quot;: {
          &quot;changes&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/RoleAuditResponse1&quot;
          },
          &quot;current&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/RoleAuditResponse&quot;
          },
          &quot;previous&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/RoleAuditResponse&quot;
          },
          &quot;schemaName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;tableName&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;changes&quot;,
          &quot;current&quot;,
          &quot;previous&quot;,
          &quot;schemaName&quot;,
          &quot;tableName&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;RoleAuditResponse&quot;: {
        &quot;properties&quot;: {
          &quot;asset__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;asset__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;financialproduct__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;financialproduct__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isdeleted&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifiedbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifieddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastreferenceddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastvieweddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;liability__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;liability__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownerid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;person__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;person__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreatedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreateddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifiedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifieddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;role__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;RoleAuditResponse1&quot;: {
        &quot;properties&quot;: {
          &quot;asset__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;asset__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createdbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;createddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;financialproduct__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;financialproduct__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;isdeleted&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifiedbyid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastmodifieddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastreferenceddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;lastvieweddate&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;liability__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;liability__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ownerid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;person__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;person__r__platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreatedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformcreateddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformid__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifiedby__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;platformlastmodifieddatetime__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;role__c&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;sfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;RoleBody&quot;: {
        &quot;properties&quot;: {
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personPlatformId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personSfid&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;role&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;role&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;RoleResponse&quot;: {
        &quot;properties&quot;: {
          &quot;personPlatformId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personSfid&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;role&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;role&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;SFLegacyFinancialProduct&quot;: {
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;jointOwner&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LegacyFinancialProductOwner&quot;
          },
          &quot;name&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;policyNumber&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;primaryOwner&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LegacyFinancialProductOwner&quot;
          },
          &quot;provider&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LegacyFinancialProductProvider&quot;
          },
          &quot;recordType&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/LegacyFinancialProductTypeResponse&quot;
          },
          &quot;status&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;subType&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;subTypeShort&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;valuationDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;jointOwner&quot;,
          &quot;name&quot;,
          &quot;policyNumber&quot;,
          &quot;primaryOwner&quot;,
          &quot;provider&quot;,
          &quot;recordType&quot;,
          &quot;status&quot;,
          &quot;subType&quot;,
          &quot;subTypeShort&quot;,
          &quot;valuationDate&quot;,
          &quot;value&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;TrustpilotScoreResponse&quot;: {
        &quot;properties&quot;: {
          &quot;stars&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;trustScore&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;stars&quot;,
          &quot;trustScore&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;UpdateCustomHoldingBody&quot;: {
        &quot;properties&quot;: {
          &quot;date&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ocfRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;price&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;priceDate&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;transactionFeeRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;units&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;date&quot;,
          &quot;price&quot;,
          &quot;priceDate&quot;,
          &quot;units&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;UpdateHoldingBody&quot;: {
        &quot;properties&quot;: {
          &quot;date&quot;: {
            &quot;format&quot;: &quot;date&quot;,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;ocfRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;transactionFeeRate&quot;: {
            &quot;maximum&quot;: 1.0,
            &quot;minimum&quot;: 0.0,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;units&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;date&quot;,
          &quot;units&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;UpdateInfoRequestBody&quot;: {
        &quot;properties&quot;: {
          &quot;status&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;status&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;UpdateInfoRequestFeesBody&quot;: {
        &quot;properties&quot;: {
          &quot;amount&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;bands&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/FeeBands&quot;
            },
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;frequency&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;max&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;min&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;structure&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;vatApplies&quot;: {
            &quot;type&quot;: &quot;boolean&quot;
          }
        },
        &quot;required&quot;: [
          &quot;frequency&quot;,
          &quot;structure&quot;,
          &quot;vatApplies&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;UpdateQuestionBody&quot;: {
        &quot;properties&quot;: {
          &quot;description&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;groupId&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;options&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/CreateQuestionOptionBody&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;questionIndex&quot;: {
            &quot;nullable&quot;: true,
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;text&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;type&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;ValueWithPeriod&quot;: {
        &quot;properties&quot;: {
          &quot;period&quot;: {
            &quot;enum&quot;: [
              &quot;annually&quot;,
              &quot;monthly&quot;,
              &quot;weekly&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;value&quot;: {
            &quot;type&quot;: &quot;number&quot;
          }
        },
        &quot;required&quot;: [
          &quot;period&quot;,
          &quot;value&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;VoyantExpense&quot;: {
        &quot;properties&quot;: {
          &quot;growth&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;initialValue&quot;: {
            &quot;type&quot;: &quot;number&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;period&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;steps&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/ExpenseStep&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;type&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;initialValue&quot;,
          &quot;name&quot;,
          &quot;period&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;VoyantHousehold&quot;: {
        &quot;properties&quot;: {
          &quot;advice&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Advice&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;assets&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Asset&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;financialProducts&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/GroupedFinancialProducts&quot;
          },
          &quot;globals&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/GlobalMarketIndicators&quot;
          },
          &quot;household&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/Household&quot;
          },
          &quot;income&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/_GroupedEmployment&quot;
          },
          &quot;liabilities&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Liabilities&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;opportunities&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Opportunities&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;personAccounts&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/GroupedPersonAccounts&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;VoyantHouseholdPersonAccountAssumptions&quot;: {
        &quot;properties&quot;: {
          &quot;gender&quot;: {
            &quot;enum&quot;: [
              &quot;male&quot;,
              &quot;female&quot;
            ],
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personAccountId&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;gender&quot;,
          &quot;personAccountId&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;VoyantLifeline&quot;: {
        &quot;properties&quot;: {
          &quot;events&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/VoyantLifelineEvent&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;expenses&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/VoyantExpense&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;VoyantLifelineEvent&quot;: {
        &quot;properties&quot;: {
          &quot;age&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;personAccount&quot;: {
            &quot;$ref&quot;: &quot;#/components/schemas/PersonAccount1&quot;
          },
          &quot;type&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;age&quot;,
          &quot;id&quot;,
          &quot;name&quot;,
          &quot;personAccount&quot;,
          &quot;type&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;VoyantLifelineEvent1&quot;: {
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;name&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;id&quot;,
          &quot;name&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;WorkableJob&quot;: {
        &quot;properties&quot;: {
          &quot;applicationUrl&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;city&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;country&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;department&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;shortLink&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;title&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;url&quot;: {
            &quot;type&quot;: &quot;string&quot;
          },
          &quot;workplaceType&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [
          &quot;applicationUrl&quot;,
          &quot;city&quot;,
          &quot;country&quot;,
          &quot;department&quot;,
          &quot;id&quot;,
          &quot;shortLink&quot;,
          &quot;title&quot;,
          &quot;url&quot;,
          &quot;workplaceType&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;WorkableJobsResponse&quot;: {
        &quot;properties&quot;: {
          &quot;jobs&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/WorkableJob&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;required&quot;: [
          &quot;jobs&quot;
        ],
        &quot;type&quot;: &quot;object&quot;
      },
      &quot;_GroupedEmployment&quot;: {
        &quot;properties&quot;: {
          &quot;employment&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Employment&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;not_currently_working&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Employment&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          },
          &quot;retirement_income&quot;: {
            &quot;items&quot;: {
              &quot;$ref&quot;: &quot;#/components/schemas/Employment&quot;
            },
            &quot;type&quot;: &quot;array&quot;
          }
        },
        &quot;type&quot;: &quot;object&quot;
      }
    }
  },
  &quot;info&quot;: {
    &quot;title&quot;: &quot;API&quot;,
    &quot;version&quot;: &quot;0.0.1&quot;
  },
  &quot;openapi&quot;: &quot;3.0.2&quot;,
  &quot;paths&quot;: {
    &quot;/v1/accounts/audit/{auditRecordId}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the audit record of an account matching the record id&quot;,
        &quot;operationId&quot;: &quot;getAccountAuditRecord&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;auditRecordId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AccountAuditRecordResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Account audit record&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Accounts&quot;
        ]
      }
    },
    &quot;/v1/accounts/{accountId}/audit&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the latest audited state of an account at a given date&quot;,
        &quot;operationId&quot;: &quot;accountAudit&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;date&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;format&quot;: &quot;date&quot;,
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;accountId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AccountAuditResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Account audit&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Accounts&quot;
        ]
      }
    },
    &quot;/v1/accounts/{accountId}/audit/history&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get an overview of all audited states of an account&quot;,
        &quot;operationId&quot;: &quot;getAccountAuditHistory&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;accountId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AuditHistoryOverviewResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Account audit history&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Accounts&quot;
        ]
      }
    },
    &quot;/v1/assets/&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create a pre-existing asset from set asset types&quot;,
        &quot;operationId&quot;: &quot;createAsset&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/AdminCreateAssetBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AdminAssetResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Create an asset&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Admin&quot;
        ]
      }
    },
    &quot;/v1/assets/audit/{auditRecordId}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the audit record of an asset matching the record id&quot;,
        &quot;operationId&quot;: &quot;getAssetAuditRecord&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;auditRecordId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;discriminator&quot;: {
                    &quot;mapping&quot;: {
                      &quot;AssetAuditRecordResponse&quot;: &quot;#/components/schemas/AssetAuditRecordResponse&quot;,
                      &quot;IncomeAuditRecordResponse&quot;: &quot;#/components/schemas/IncomeAuditRecordResponse&quot;,
                      &quot;RoleAuditRecordResponse&quot;: &quot;#/components/schemas/RoleAuditRecordResponse&quot;
                    },
                    &quot;propertyName&quot;: &quot;schemaName&quot;
                  },
                  &quot;oneOf&quot;: [{
                      &quot;$ref&quot;: &quot;#/components/schemas/AssetAuditRecordResponse&quot;
                    },
                    {
                      &quot;$ref&quot;: &quot;#/components/schemas/RoleAuditRecordResponse&quot;
                    },
                    {
                      &quot;$ref&quot;: &quot;#/components/schemas/IncomeAuditRecordResponse&quot;
                    }
                  ]
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Asset audit record&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Assets&quot;
        ]
      }
    },
    &quot;/v1/assets/types&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the asset types&quot;,
        &quot;operationId&quot;: &quot;getAssetTypes&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/AssetTypeResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get the asset types&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Admin&quot;
        ]
      }
    },
    &quot;/v1/assets/{assetId}/audit&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the latest audited state of an asset at a given date&quot;,
        &quot;operationId&quot;: &quot;assetAudit&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;date&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;format&quot;: &quot;date&quot;,
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;assetId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AssetAuditSnapshotResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Asset audit&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Assets&quot;
        ]
      }
    },
    &quot;/v1/assets/{assetId}/audit/history&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get an overview of all audited states of an asset and its related records (roles and income)&quot;,
        &quot;operationId&quot;: &quot;getAssetAuditHistory&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;assetId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AuditHistoryOverviewResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Asset audit history&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Assets&quot;
        ]
      }
    },
    &quot;/v1/assets/{assetPlatformId}&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Update an asset&quot;,
        &quot;operationId&quot;: &quot;updateAsset&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;assetPlatformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/AdminUpdateAssetBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AdminAssetResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update an asset&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Admin&quot;
        ]
      }
    },
    &quot;/v1/assets/{assetPlatformId}/delete&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Mark asset with a particular closure status&quot;,
        &quot;operationId&quot;: &quot;softDelete&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;assetPlatformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/AdminSoftDeleteAssetBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AdminAssetResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Soft delete asset&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Admin&quot;
        ]
      }
    },
    &quot;/v1/checklists/&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;getAllChecklists&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/ChecklistResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get all active checklists&quot;,
        &quot;tags&quot;: [
          &quot;Checklists - Admin&quot;
        ]
      },
      &quot;post&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;createChecklist&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/CreateChecklistBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ChecklistResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Create a checklists&quot;,
        &quot;tags&quot;: [
          &quot;Checklists - Admin&quot;
        ]
      }
    },
    &quot;/v1/checklists/groups&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;getAllQuestionGroups&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/QuestionGroupResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get all question groups&quot;,
        &quot;tags&quot;: [
          &quot;Checklists - Groups - Admin&quot;
        ]
      }
    },
    &quot;/v1/checklists/questions/&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;getAllQuestions&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/QuestionResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get all questions&quot;,
        &quot;tags&quot;: [
          &quot;Checklists - Questions - Admin&quot;
        ]
      },
      &quot;post&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;createQuestion&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/CreateQuestionBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/QuestionResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Create a question&quot;,
        &quot;tags&quot;: [
          &quot;Checklists - Questions - Admin&quot;
        ]
      }
    },
    &quot;/v1/checklists/questions/{questionId}&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;updateQuestion&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;questionId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/UpdateQuestionBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/QuestionResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update a question&quot;,
        &quot;tags&quot;: [
          &quot;Checklists - Questions - Admin&quot;
        ]
      }
    },
    &quot;/v1/checklists/{checklistId}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;getChecklist&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;checklistId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ChecklistResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get a checklist by ID&quot;,
        &quot;tags&quot;: [
          &quot;Checklists - Admin&quot;
        ]
      }
    },
    &quot;/v1/financialProducts/audit/{auditRecordId}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the audit record of a financial product matching the record id&quot;,
        &quot;operationId&quot;: &quot;getFinancialProductAuditRecord&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;auditRecordId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;discriminator&quot;: {
                    &quot;mapping&quot;: {
                      &quot;FinancialProductAuditRecordResponse&quot;: &quot;#/components/schemas/FinancialProductAuditRecordResponse&quot;,
                      &quot;RoleAuditRecordResponse&quot;: &quot;#/components/schemas/RoleAuditRecordResponse&quot;
                    },
                    &quot;propertyName&quot;: &quot;schemaName&quot;
                  },
                  &quot;oneOf&quot;: [{
                      &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductAuditRecordResponse&quot;
                    },
                    {
                      &quot;$ref&quot;: &quot;#/components/schemas/RoleAuditRecordResponse&quot;
                    }
                  ]
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Financial products audit record&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Financial Products&quot;
        ]
      }
    },
    &quot;/v1/financialProducts/cash/&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create a cash account financial product&quot;,
        &quot;operationId&quot;: &quot;createCashAccount&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/AdminCreateCashAccountBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AdminCashAccountResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Create a cash account&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Cash - Admin&quot;
        ]
      }
    },
    &quot;/v1/financialProducts/cash/{cashAccountPlatformId}&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Update a cash account financial product&quot;,
        &quot;operationId&quot;: &quot;updateCashAccount&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;cashAccountPlatformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/AdminUpdateCashAccountBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AdminCashAccountResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update a cash account&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Cash - Admin&quot;
        ]
      }
    },
    &quot;/v1/financialProducts/cash/{cashAccountPlatformId}/delete&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Mark cash account as closed&quot;,
        &quot;operationId&quot;: &quot;softDeleteCashAccount&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;cashAccountPlatformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AdminCashAccountResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Soft delete cash account&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Cash - Admin&quot;
        ]
      }
    },
    &quot;/v1/financialProducts/types&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the cash account types&quot;,
        &quot;operationId&quot;: &quot;getFinancialProductTypes&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductTypesResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get the cash account types&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Cash - Admin&quot;
        ]
      }
    },
    &quot;/v1/financialProducts/{finprodId}/audit&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the latest audited state of a cash account at a given date&quot;,
        &quot;operationId&quot;: &quot;financialProductAudit&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;date&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;format&quot;: &quot;date&quot;,
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;finprodId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductAuditSnapshotResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Financial products audit&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Financial Products&quot;
        ]
      }
    },
    &quot;/v1/financialProducts/{finprodId}/audit/history&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get an overview of all audited states of a financial product and its related records (roles)&quot;,
        &quot;operationId&quot;: &quot;getFinancialProductsAuditHistory&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;finprodId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AuditHistoryOverviewResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Financial products audit history&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Financial Products&quot;
        ]
      }
    },
    &quot;/v1/household/{householdId}/accounts/audit&quot;: {
      &quot;delete&quot;: {
        &quot;description&quot;: &quot;Action RTBF requests by deleting records belonging to a household, this includes account, asset and related objects&quot;,
        &quot;operationId&quot;: &quot;deleteAuditRecordsByHousehold&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;householdId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/HouseholdAuditDeletionResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Delete records belonging to a household&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Households&quot;
        ]
      },
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Query for all accounts belonging to a given household&quot;,
        &quot;operationId&quot;: &quot;householdAccountsAuditOverview&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;date&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;format&quot;: &quot;date&quot;,
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;householdId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/HouseholdAccountsAuditOverviewResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Household&#39;s Accounts audit&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Accounts&quot;
        ]
      }
    },
    &quot;/v1/household/{householdId}/assets&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Read assets by household with optional filter type by status&quot;,
        &quot;operationId&quot;: &quot;getAssetsByHousehold&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;status&quot;,
            &quot;required&quot;: false,
            &quot;schema&quot;: {
              &quot;enum&quot;: [
                &quot;Sold&quot;,
                &quot;Owned&quot;,
                &quot;Gifted&quot;,
                &quot;Other&quot;
              ],
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;householdId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/AdminAssetResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Read assets by household as an admin&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Admin&quot;
        ]
      }
    },
    &quot;/v1/household/{householdId}/assets/audit&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Query for all assets belonging to a given household&quot;,
        &quot;operationId&quot;: &quot;householdAssetsAuditOverview&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;date&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;format&quot;: &quot;date&quot;,
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;householdId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/HouseholdAssetsAuditOverviewResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Household&#39;s Assets audit&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Assets&quot;
        ]
      }
    },
    &quot;/v1/household/{householdId}/audit&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the latest audited state of an account at a given date&quot;,
        &quot;operationId&quot;: &quot;householdAudit&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;date&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;format&quot;: &quot;date&quot;,
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;householdId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AccountAuditResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Household audit&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Households&quot;
        ]
      }
    },
    &quot;/v1/household/{householdId}/financialProducts/audit&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Query for all financial products belonging to a given household&quot;,
        &quot;operationId&quot;: &quot;householdFinancialProductsAuditOverview&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;date&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;format&quot;: &quot;date&quot;,
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;householdId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/HouseholdFinancialProductsAuditOverviewResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Household&#39;s Financial Products audit&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Financial Products&quot;
        ]
      }
    },
    &quot;/v1/household/{householdId}/financialProducts/cash&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Read cash accounts by household&quot;,
        &quot;operationId&quot;: &quot;getCashAccountsByHousehold&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;status&quot;,
            &quot;required&quot;: false,
            &quot;schema&quot;: {
              &quot;enum&quot;: [
                &quot;OPEN&quot;,
                &quot;CLOSED&quot;
              ],
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;householdId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/AdminCashAccountResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Read cash accounts by household as an admin&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Cash - Admin&quot;
        ]
      }
    },
    &quot;/v1/household/{householdId}/liabilities&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Read liabilities by household with optional filter type by status&quot;,
        &quot;operationId&quot;: &quot;getLiabilitiesByHousehold&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;status&quot;,
            &quot;required&quot;: false,
            &quot;schema&quot;: {
              &quot;enum&quot;: [
                &quot;Open&quot;,
                &quot;Remortgaged&quot;,
                &quot;Repaid&quot;,
                &quot;Other&quot;,
                &quot;Discovery mistake&quot;
              ],
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;householdId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/AdminLiabilityResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Read liabilities by household as an admin&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Admin&quot;
        ]
      }
    },
    &quot;/v1/household/{householdId}/liabilities/audit&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Query for all liabilities belonging to a given household&quot;,
        &quot;operationId&quot;: &quot;householdLiabilitiesAuditOverview&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;date&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;format&quot;: &quot;date&quot;,
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;householdId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/HouseholdLiabilitiesAuditOverviewResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Household&#39;s Liabilities audit&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Liabilities&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;getInfoRequest&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;oneOf&quot;: [{
                      &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestLegacyFPResponse&quot;
                    },
                    {
                      &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFPResponse&quot;
                    }
                  ]
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get an information request by finprod ID&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      },
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;updateInfoRequest&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/UpdateInfoRequestBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;oneOf&quot;: [{
                      &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestLegacyFPResponse&quot;
                    },
                    {
                      &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFPResponse&quot;
                    }
                  ]
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update an information request&#39;s status&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/answers&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;addAnswers&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;items&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AddInfoRequestAnswersBody&quot;
                },
                &quot;type&quot;: &quot;array&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;oneOf&quot;: [{
                      &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestLegacyFPResponse&quot;
                    },
                    {
                      &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFPResponse&quot;
                    }
                  ]
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Adds answer to a question for a given info request&quot;,
        &quot;tags&quot;: [
          &quot;Information Request - Answers&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/complete&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;completeInfoRequest&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestCompletedResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Mark an information request as complete&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/fees/&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get a given information request&#39;s fees&quot;,
        &quot;operationId&quot;: &quot;getInfoRequestFees&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFeesResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get an information request&#39;s fees&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      },
      &quot;post&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;createInformationRequestFee&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/CreateInfoRequestFeesBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFeesResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Add fee to an information request&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/fees/documentation&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;updateInfoRequestFeeDocumentation&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFeesDocumentationBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFeesResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update an information request&#39;s fee documentation&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/fees/{feePlatformId}&quot;: {
      &quot;delete&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;deleteInformationRequestFee&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;infoRequestId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;feePlatformId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFeesResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Delete fee on an information request by platform id&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      },
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;updateInformationRequestFee&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;infoRequestId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;feePlatformId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/UpdateInfoRequestFeesBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestFeesResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update fee on an information request by platform id&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/holdings/&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get a given information request&#39;s holdings&quot;,
        &quot;operationId&quot;: &quot;getInfoRequestHoldings&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestHoldingsResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get an information request&#39;s holdings&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      },
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Add holdings for an information request&quot;,
        &quot;operationId&quot;: &quot;createHoldings&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;items&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/CreateHoldingBody&quot;
                },
                &quot;type&quot;: &quot;array&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestHoldingsResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Add holdings for an information request&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/holdings/cash&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Add a given information request&#39;s cash holding&quot;,
        &quot;operationId&quot;: &quot;createCashHolding&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/CreateUpdateCashHoldingBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestHoldingsResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Add cash holding for an information request&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/holdings/custom&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Add a given information request&#39;s custom fund holding&quot;,
        &quot;operationId&quot;: &quot;createCustomHolding&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/CreateCustomHoldingBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestHoldingsResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Add a custom fund holding for an information request&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/holdings/export&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Export holdings to Google Sheets&quot;,
        &quot;operationId&quot;: &quot;exportHoldings&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ExportHoldingsBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestHoldingsExportResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Export holdings to Google Sheets&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/holdings/{holdingPlatformId}&quot;: {
      &quot;delete&quot;: {
        &quot;description&quot;: &quot;Soft delete a given holding - this will set the status to Inactive&quot;,
        &quot;operationId&quot;: &quot;deleteHoldings&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;infoRequestId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;holdingPlatformId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestHoldingsResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Delete an information request&#39;s holding&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      },
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Update a given holding by platform id&quot;,
        &quot;operationId&quot;: &quot;updateHoldings&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;infoRequestId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;holdingPlatformId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/UpdateHoldingBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestHoldingsResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update a given holding&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/holdings/{holdingPlatformId}/custom&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Update a given information request&#39;s custom fund holding&quot;,
        &quot;operationId&quot;: &quot;updateCustomHolding&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;infoRequestId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;holdingPlatformId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/UpdateCustomHoldingBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestHoldingsResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update a custom fund holding for an information request&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/infoRequests/{infoRequestId}/updated&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;checkInformationRequestLastUpdated&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;infoRequestId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;maxLength&quot;: 1000,
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestUpdateCheckBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/InfoRequestIsUpdatedResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Check whether or not the info request has been updated&quot;,
        &quot;tags&quot;: [
          &quot;Information Request&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/docs/info-request&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create information request authority document&quot;,
        &quot;operationId&quot;: &quot;createAuthorityDocument&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobCreateAuthorityDocumentBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;GDocs job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - Google&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/drive/client&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create G-Drive client folder&quot;,
        &quot;operationId&quot;: &quot;createGdriveClientFolders&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobCreateClientFolderBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;GDrive job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - GDrive&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/drive/client/advice&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create G-Drive advice folder&quot;,
        &quot;operationId&quot;: &quot;createGdriveClientAdviceFolders&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobCreateClientAdviceFolderBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;GDrive job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - GDrive&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/drive/client/portal-documents&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create a folder in the household&#39;s root directory for client facing documents.&quot;,
        &quot;operationId&quot;: &quot;createClientPortalDocuments&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobCreatePortalDocsBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;oneOf&quot;: [{
                      &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobResponse&quot;
                    },
                    {
                      &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobWaitingResponse&quot;
                    }
                  ]
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;No summary&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - GDrive - Create client portal documents folder&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/drive/move&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Move G-drive folder&quot;,
        &quot;operationId&quot;: &quot;moveGdriveFolder&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobMoveFolderBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;GDrive job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - Google&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/drive/prospect&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create G-Drive prospect folder&quot;,
        &quot;operationId&quot;: &quot;createGdriveProspectFolders&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobCreateProspectFolderBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;GDrive job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - Google&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/slides/discovery&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create Discovery Meeting with no Lifeline&quot;,
        &quot;operationId&quot;: &quot;createGdriveDiscoMeetingNonPersonalised&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobCreateDiscoNonPersonalisedBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;GDrive job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - Google&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/slides/discovery/personalised&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create Discovery Meeting with Lifeline&quot;,
        &quot;operationId&quot;: &quot;createGdriveDiscoMeetingPersonalised&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobCreateDiscoPersonalisedBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;GDrive job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - Google&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/slides/review&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create Review Presentation&quot;,
        &quot;operationId&quot;: &quot;createReview&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GSlidesJobReviewBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Slides job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - Google&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/slides/suitability/lifeline&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create Suitability Meeting with Lifeline&quot;,
        &quot;operationId&quot;: &quot;createGdriveSuitabilityLifeline&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobCreateSuitabilityLifelineBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;GDrive job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - Google&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/slides/top-up&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create Top up Presentation&quot;,
        &quot;operationId&quot;: &quot;createTopUp&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GSlidesJobTopUpBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Slides job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - Google&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/slides/withdrawal&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create Withdrawal Presentation&quot;,
        &quot;operationId&quot;: &quot;createWithdrawal&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/GSlidesJobWithdrawalBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/GoogleJobIdResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Slides job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - Google&quot;
        ]
      }
    },
    &quot;/v1/jobs/google/{jobId}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get Gdrive job&quot;,
        &quot;operationId&quot;: &quot;getGdriveJob&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;jobId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;oneOf&quot;: [{
                      &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobResponse&quot;
                    },
                    {
                      &quot;$ref&quot;: &quot;#/components/schemas/GDriveJobWaitingResponse&quot;
                    }
                  ]
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Example GDrive job&quot;,
        &quot;tags&quot;: [
          &quot;Jobs - GDrive&quot;
        ]
      }
    },
    &quot;/v1/liabilities/&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create a liability from set liability types with option to link to an asset&quot;,
        &quot;operationId&quot;: &quot;createLiability&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/AdminCreateLiabilityBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AdminLiabilityResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Create an liability&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Admin&quot;
        ]
      }
    },
    &quot;/v1/liabilities/audit/{auditRecordId}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the audit record of a liability matching the record id&quot;,
        &quot;operationId&quot;: &quot;getLiabilityAuditRecord&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;auditRecordId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;integer&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;discriminator&quot;: {
                    &quot;mapping&quot;: {
                      &quot;LiabilityAuditRecordResponse&quot;: &quot;#/components/schemas/LiabilityAuditRecordResponse&quot;,
                      &quot;RoleAuditRecordResponse&quot;: &quot;#/components/schemas/RoleAuditRecordResponse&quot;
                    },
                    &quot;propertyName&quot;: &quot;schemaName&quot;
                  },
                  &quot;oneOf&quot;: [{
                      &quot;$ref&quot;: &quot;#/components/schemas/LiabilityAuditRecordResponse&quot;
                    },
                    {
                      &quot;$ref&quot;: &quot;#/components/schemas/RoleAuditRecordResponse&quot;
                    }
                  ]
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Liability audit record&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Liabilities&quot;
        ]
      }
    },
    &quot;/v1/liabilities/types&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the liability types&quot;,
        &quot;operationId&quot;: &quot;getLiabilityTypes&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/LiabilityTypeResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get the liability types&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Admin&quot;
        ]
      }
    },
    &quot;/v1/liabilities/{liabilityId}/audit&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the latest audited state of a liability at a given date&quot;,
        &quot;operationId&quot;: &quot;liabilityAudit&quot;,
        &quot;parameters&quot;: [{
            &quot;in&quot;: &quot;query&quot;,
            &quot;name&quot;: &quot;date&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;format&quot;: &quot;date&quot;,
              &quot;type&quot;: &quot;string&quot;
            }
          },
          {
            &quot;in&quot;: &quot;path&quot;,
            &quot;name&quot;: &quot;liabilityId&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;string&quot;
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/LiabilityAuditSnapshotResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Liability audit&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Liabilities&quot;
        ]
      }
    },
    &quot;/v1/liabilities/{liabilityId}/audit/history&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get an overview of all audited states of a liability and its related records&quot;,
        &quot;operationId&quot;: &quot;getLiabilityAuditHistory&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;liabilityId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AuditHistoryOverviewResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Liability audit history&quot;,
        &quot;tags&quot;: [
          &quot;Audit - Liabilities&quot;
        ]
      }
    },
    &quot;/v1/liabilities/{platformId}&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Update an liability&quot;,
        &quot;operationId&quot;: &quot;updateLiability&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;platformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/AdminUpdateLiabilityBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AdminLiabilityResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update a liability&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Admin&quot;
        ]
      }
    },
    &quot;/v1/liabilities/{platformId}/delete&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Mark asset liability a particular closure status&quot;,
        &quot;operationId&quot;: &quot;softDeleteLiability&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;platformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/AdminSoftDeleteLiabilityBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/AdminLiabilityResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Soft delete liability&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Admin&quot;
        ]
      }
    },
    &quot;/v1/marketing/trustpilot&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;getTrustpilotScore&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/TrustpilotScoreResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Endpoint to get the Trustpilot score for the company&quot;,
        &quot;tags&quot;: [
          &quot;Marketing - Trustpilot&quot;
        ]
      }
    },
    &quot;/v1/marketing/workable/jobs&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;getWorkableJobs&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/WorkableJobsResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get all published jobs from Workable&quot;,
        &quot;tags&quot;: [
          &quot;Marketing - Workable&quot;
        ]
      }
    },
    &quot;/v1/me/assets/&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;createMyAsset&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ClientCreateAssetBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ClientAssetResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Insert my asset&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Client&quot;
        ]
      }
    },
    &quot;/v1/me/assets/types&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the asset types&quot;,
        &quot;operationId&quot;: &quot;getMyAssetTypes&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/AssetTypeResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get the asset types&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Client&quot;
        ]
      }
    },
    &quot;/v1/me/assets/{assetPlatformId}&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Update my asset&quot;,
        &quot;operationId&quot;: &quot;updateMyAsset&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;assetPlatformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ClientUpdateAssetBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ClientAssetResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update my asset&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Client&quot;
        ]
      }
    },
    &quot;/v1/me/assets/{assetPlatformId}/delete&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Mark my asset with a particular closure status&quot;,
        &quot;operationId&quot;: &quot;softDeleteMyAsset&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;assetPlatformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ClientSoftDeleteAssetBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;oneOf&quot;: []
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Soft delete my asset&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Client&quot;
        ]
      }
    },
    &quot;/v1/me/documents&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get my household documents&quot;,
        &quot;operationId&quot;: &quot;getHouseholdGdriveClientDocuments&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/GDriveRecordResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;No summary&quot;,
        &quot;tags&quot;: [
          &quot;Client - Documents&quot;
        ]
      }
    },
    &quot;/v1/me/documents/upload&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Upload my household document&quot;,
        &quot;operationId&quot;: &quot;uploadHouseholdGdriveClientDocument&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;multipart/form-data&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/FileUploadRequest&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;oneOf&quot;: []
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;No summary&quot;,
        &quot;tags&quot;: [
          &quot;Client - Documents&quot;
        ]
      }
    },
    &quot;/v1/me/documents/{documentId}/download&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Download my household document&quot;,
        &quot;operationId&quot;: &quot;downloadHouseholdGdriveClientDocument&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;documentId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/FileDownloadResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;No summary&quot;,
        &quot;tags&quot;: [
          &quot;Client - Documents&quot;
        ]
      }
    },
    &quot;/v1/me/documents/{documentId}/download/audio&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Download my household video&quot;,
        &quot;operationId&quot;: &quot;serveAudio&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;documentId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/FileDownloadResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;No summary&quot;,
        &quot;tags&quot;: [
          &quot;Client - Documents&quot;
        ]
      }
    },
    &quot;/v1/me/documents/{documentId}/download/video&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Download my household video&quot;,
        &quot;operationId&quot;: &quot;serveVideo&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;documentId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/FileDownloadResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;No summary&quot;,
        &quot;tags&quot;: [
          &quot;Client - Documents&quot;
        ]
      }
    },
    &quot;/v1/me/financialProducts/cash/&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;Create my cash account financial product&quot;,
        &quot;operationId&quot;: &quot;createMyCashAccount&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ClientCreateCashAccountBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ClientCashAccountResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Create my cash account&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Cash - Client&quot;
        ]
      }
    },
    &quot;/v1/me/financialProducts/cash/{cashAccountPlatformId}&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Update my cash account financial product&quot;,
        &quot;operationId&quot;: &quot;updateMyCashAccount&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;cashAccountPlatformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ClientUpdateCashAccountBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ClientCashAccountResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update my cash account&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Cash - Client&quot;
        ]
      }
    },
    &quot;/v1/me/financialProducts/cash/{cashAccountPlatformId}/delete&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Mark my cash account as closed&quot;,
        &quot;operationId&quot;: &quot;softDeleteMyCashAccount&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;cashAccountPlatformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {}
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Soft delete my cash account&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Cash - Client&quot;
        ]
      }
    },
    &quot;/v1/me/financialProducts/types&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the cash account types&quot;,
        &quot;operationId&quot;: &quot;getMyFinancialProductTypes&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/FinancialProductTypesResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get the cash account types&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Cash - Client&quot;
        ]
      }
    },
    &quot;/v1/me/household/assets&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Read assets by household&quot;,
        &quot;operationId&quot;: &quot;getMyHouseholdAssets&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/ClientAssetResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Read my household&#39;s assets&quot;,
        &quot;tags&quot;: [
          &quot;Assets - Client&quot;
        ]
      }
    },
    &quot;/v1/me/household/financialProducts&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Read financial products by household&quot;,
        &quot;operationId&quot;: &quot;getMyHouseholdCashAccounts&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/ClientCashAccountResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Read my household&#39;s financial products&quot;,
        &quot;tags&quot;: [
          &quot;Financial Products - Client&quot;
        ]
      }
    },
    &quot;/v1/me/household/liabilities&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Read liabilities by household&quot;,
        &quot;operationId&quot;: &quot;getMyHouseholdLiabilities&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/ClientLiabilityResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Read my household&#39;s liabilities&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Client&quot;
        ]
      }
    },
    &quot;/v1/me/liabilities/&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;createMyLiability&quot;,
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ClientCreateLiabilityBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ClientLiabilityResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Insert my liability&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Client&quot;
        ]
      }
    },
    &quot;/v1/me/liabilities/types&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;Get the liability types&quot;,
        &quot;operationId&quot;: &quot;getMyLiabilityTypes&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;items&quot;: {
                    &quot;$ref&quot;: &quot;#/components/schemas/LiabilityTypeResponse&quot;
                  },
                  &quot;type&quot;: &quot;array&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Get the liability types&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Client&quot;
        ]
      }
    },
    &quot;/v1/me/liabilities/{platformId}&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Update my liability&quot;,
        &quot;operationId&quot;: &quot;updateMyLiability&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;platformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ClientUpdateLiabilityBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/ClientLiabilityResponse&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Update my liability&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Client&quot;
        ]
      }
    },
    &quot;/v1/me/liabilities/{platformId}/delete&quot;: {
      &quot;patch&quot;: {
        &quot;description&quot;: &quot;Mark my liability with a particular closure status&quot;,
        &quot;operationId&quot;: &quot;softDeleteMyLiability&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;platformId&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;$ref&quot;: &quot;#/components/schemas/ClientSoftDeleteLiabilityBody&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;oneOf&quot;: []
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;Soft delete my liability&quot;,
        &quot;tags&quot;: [
          &quot;Liabilities - Client&quot;
        ]
      }
    },
    &quot;/v1/voyant/household/{household_id}&quot;: {
      &quot;get&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;getAllHouseholdInfo&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;household_id&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/VoyantHousehold&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;No summary&quot;,
        &quot;tags&quot;: [
          &quot;Voyant&quot;
        ]
      }
    },
    &quot;/v1/voyant/household/{household_id}/lifeline&quot;: {
      &quot;post&quot;: {
        &quot;description&quot;: &quot;No description&quot;,
        &quot;operationId&quot;: &quot;createTimelineEvents&quot;,
        &quot;parameters&quot;: [{
          &quot;in&quot;: &quot;path&quot;,
          &quot;name&quot;: &quot;household_id&quot;,
          &quot;required&quot;: true,
          &quot;schema&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        }],
        &quot;requestBody&quot;: {
          &quot;content&quot;: {
            &quot;application/json&quot;: {
              &quot;schema&quot;: {
                &quot;items&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/VoyantHouseholdPersonAccountAssumptions&quot;
                },
                &quot;type&quot;: &quot;array&quot;
              }
            }
          },
          &quot;description&quot;: &quot;No description&quot;,
          &quot;required&quot;: true
        },
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;content&quot;: {
              &quot;application/json&quot;: {
                &quot;schema&quot;: {
                  &quot;$ref&quot;: &quot;#/components/schemas/VoyantLifeline&quot;
                }
              }
            },
            &quot;description&quot;: &quot;OK&quot;
          }
        },
        &quot;summary&quot;: &quot;No summary&quot;,
        &quot;tags&quot;: [
          &quot;Voyant&quot;
        ]
      }
    }
  }
}</schema>
    <schemaType>OpenApi3</schemaType>
    <serviceBinding>{&quot;host&quot;:&quot;&quot;,&quot;basePath&quot;:&quot;/&quot;,&quot;allowedSchemes&quot;:[],&quot;requestMediaTypes&quot;:[],&quot;responseMediaTypes&quot;:[],&quot;compatibleMediaTypes&quot;:{&quot;multipart/form-data&quot;:&quot;application/json&quot;}}</serviceBinding>
    <status>Complete</status>
    <systemVersion>5</systemVersion>
</ExternalServiceRegistration>
