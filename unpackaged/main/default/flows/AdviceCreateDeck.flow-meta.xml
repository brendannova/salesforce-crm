<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Request_review_deck</name>
        <label>Request review deck</label>
        <locationX>1282</locationX>
        <locationY>1106</locationY>
        <actionName>AdviceSlidesV2.createReview</actionName>
        <actionType>externalService</actionType>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Success_screen</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Handle_errors</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>reviewBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>AdviceSlidesV2.createReview</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>responseCode</assignToReference>
            <name>responseCode</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>exceptionMessage</assignToReference>
            <name>defaultExc</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Request_top_up_deck</name>
        <label>Request top up deck</label>
        <locationX>182</locationX>
        <locationY>1106</locationY>
        <actionName>AdviceSlidesV2.createTopUp</actionName>
        <actionType>externalService</actionType>
        <connector>
            <targetReference>Success</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Handle_errors</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>requestTopUpBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>AdviceSlidesV2.createTopUp</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>responseCode</assignToReference>
            <name>responseCode</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>exceptionMessage</assignToReference>
            <name>defaultExc</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Request_withdrawal_deck</name>
        <label>Request withdrawal deck</label>
        <locationX>754</locationX>
        <locationY>1106</locationY>
        <actionName>AdviceSlidesV2.createWithdrawal</actionName>
        <actionType>externalService</actionType>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Success</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Handle_errors</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>requestWithdrawalBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>AdviceSlidesV2.createWithdrawal</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>responseCode</assignToReference>
            <name>responseCode</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>exceptionMessage</assignToReference>
            <name>defaultExc</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Define_annual_review_body</name>
        <label>Define annual review body</label>
        <locationX>1282</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>reviewBody.adviceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Request_review_deck</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Define_top_up_body</name>
        <label>Define top up body</label>
        <locationX>182</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>requestTopUpBody.adviceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Request_top_up_deck</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Define_withdrawal_body</name>
        <label>Define withdrawal body</label>
        <locationX>754</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>requestWithdrawalBody.adviceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Request_withdrawal_deck</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_advice_ID</name>
        <label>Set advice ID</label>
        <locationX>1870</locationX>
        <locationY>134</locationY>
        <assignmentItems>
            <assignToReference>adviceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_advice</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_error_no_advice_folder</name>
        <label>Set error (no advice folder)</label>
        <locationX>2250</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>errorMessageToast</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Advice folder missing. Please raise a ticket.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Error_screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_error_no_recommendations</name>
        <label>Set error (no recommendations)</label>
        <locationX>1986</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>errorMessageToast</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Create recommendations before creating the deck</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Error_screen</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Advice_type</name>
        <label>Advice type?</label>
        <locationX>996</locationX>
        <locationY>890</locationY>
        <defaultConnector>
            <targetReference>Error_Response</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No advice type</defaultConnectorLabel>
        <rules>
            <name>Top_up</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Advice_Type.DeveloperName__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TOP_UP</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Define_top_up_body</targetReference>
            </connector>
            <label>Top up</label>
        </rules>
        <rules>
            <name>Withdrawal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Advice_Type.DeveloperName__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>WITHDRAWAL</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Define_withdrawal_body</targetReference>
            </connector>
            <label>Withdrawal</label>
        </rules>
        <rules>
            <name>Annual_review</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>advice.New_or_existing_client__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Existing</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>advice.OW_review__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Define_annual_review_body</targetReference>
            </connector>
            <label>Annual review</label>
        </rules>
    </decisions>
    <decisions>
        <name>Google_folder_defined</name>
        <label>Google folder defined</label>
        <locationX>1870</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>Set_error_no_advice_folder</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>Defined</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>advice.GoogleDriveFolderId__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_recommendations</targetReference>
            </connector>
            <label>Defined</label>
        </rules>
    </decisions>
    <decisions>
        <name>Recommendations_decision</name>
        <label>Recommendations</label>
        <locationX>1491</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>Set_error_no_recommendations</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>None</defaultConnectorLabel>
        <rules>
            <name>Set_up</name>
            <conditionLogic>1 OR (2 AND 3)</conditionLogic>
            <conditions>
                <leftValueReference>recommendations</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>advice.New_or_existing_client__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Existing</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>advice.OW_review__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_deck_confirmation</targetReference>
            </connector>
            <label>Set up</label>
        </rules>
    </decisions>
    <decisions>
        <name>Success</name>
        <label>Success</label>
        <locationX>182</locationX>
        <locationY>1214</locationY>
        <defaultConnector>
            <targetReference>Error_Response</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Error</defaultConnectorLabel>
        <rules>
            <name>Success_outcome</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>responseCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>200.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>responseCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>201.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Success_screen</targetReference>
            </connector>
            <label>Success</label>
        </rules>
    </decisions>
    <description>Walks the user through requesting the creation of an automated deck. 
Advice processes included:
Top up
Withdrawal</description>
    <environments>Default</environments>
    <interviewLabel>Advice | Create deck {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Advice | Create deck</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_advice</name>
        <label>Get advice</label>
        <locationX>1870</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Google_folder_defined</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </filters>
        <object>Advice__c</object>
        <outputReference>advice</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>GoogleDriveFolderId__c</queriedFields>
        <queriedFields>AdviceType__c</queriedFields>
        <queriedFields>New_or_existing_client__c</queriedFields>
        <queriedFields>OW_review__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Advice_Type</name>
        <label>Get Advice Type</label>
        <locationX>996</locationX>
        <locationY>782</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Advice_type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>advice.AdviceType__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AdviceType__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>DeveloperName__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_recommendations</name>
        <label>Get recommendations</label>
        <locationX>1491</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Recommendations_decision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Advice__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>adviceId</elementReference>
            </value>
        </filters>
        <object>Recommendation__c</object>
        <outputReference>recommendations</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Amount__c</queriedFields>
        <queriedFields>DestinationName__c</queriedFields>
        <queriedFields>RecommendationTypeName__c</queriedFields>
        <sortField>RecommendationTypeName__c</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <screens>
        <name>Create_deck_confirmation</name>
        <label>Create deck confirmation</label>
        <locationX>996</locationX>
        <locationY>674</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Get_Advice_Type</targetReference>
        </connector>
        <fields>
            <name>ConfirmationMessage</name>
            <fieldText>&lt;p&gt;Click next to create a deck for these recommendations. &lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>RecommendationsTable</name>
            <dataTypeMappings>
                <typeName>T</typeName>
                <typeValue>Recommendation__c</typeValue>
            </dataTypeMappings>
            <extensionName>flowruntime:datatable</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Data Table</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>selectionMode</name>
                <value>
                    <stringValue>NO_SELECTION</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>minRowSelection</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>tableData</name>
                <value>
                    <elementReference>recommendations</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>maxRowSelection</name>
                <value>
                    <numberValue>0.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>columns</name>
                <value>
                    <stringValue>[{&quot;apiName&quot;:&quot;DestinationName__c&quot;,&quot;guid&quot;:&quot;column-5893&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Destination name&quot;,&quot;type&quot;:&quot;customRichText&quot;},{&quot;apiName&quot;:&quot;Amount__c&quot;,&quot;guid&quot;:&quot;column-00b6&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Amount&quot;,&quot;type&quot;:&quot;currency&quot;},{&quot;apiName&quot;:&quot;RecommendationTypeName__c&quot;,&quot;guid&quot;:&quot;column-212a&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Recommendation Type Name&quot;,&quot;type&quot;:&quot;customRichText&quot;},{&quot;apiName&quot;:&quot;EarliestFulfilmentDate__c&quot;,&quot;guid&quot;:&quot;column-af61&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:3,&quot;label&quot;:&quot;Earliest fulfilment date&quot;,&quot;type&quot;:&quot;date-local&quot;}]</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Error_Response</name>
        <label>Error | Response</label>
        <locationX>996</locationX>
        <locationY>1706</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorMessage</name>
            <fieldText>&lt;p&gt;Error occurred . Please resolve if you can or raise a ticket.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!exceptionMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Error_screen</name>
        <label>Error screen</label>
        <locationX>1870</locationX>
        <locationY>2090</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ToastNoRecommendations</name>
            <extensionName>c:displayToastFlow</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>message</name>
                <value>
                    <elementReference>errorMessageToast</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>mode</name>
                <value>
                    <stringValue>dismissible</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>title</name>
                <value>
                    <stringValue>Error</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>triggerNavigationNextEvent</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>variant</name>
                <value>
                    <stringValue>error</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Success_screen</name>
        <label>Success screen</label>
        <locationX>50</locationX>
        <locationY>1322</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ToastSuccess</name>
            <extensionName>c:displayToastFlow</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>message</name>
                <value>
                    <stringValue>Slides will be ready within 2 minutes</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>mode</name>
                <value>
                    <stringValue>dismissible</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>title</name>
                <value>
                    <stringValue>Success</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>triggerNavigationNextEvent</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>variant</name>
                <value>
                    <stringValue>success</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>1744</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Set_advice_ID</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Handle_errors</name>
        <label>Handle errors</label>
        <locationX>490</locationX>
        <locationY>1214</locationY>
        <flowName>ExceptionHandlingNovaServiceErrors</flowName>
        <inputAssignments>
            <name>Calloutexceptionmessage</name>
            <value>
                <elementReference>exceptionMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>flowError</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>advice</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Advice__c</objectType>
    </variables>
    <variables>
        <name>adviceId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>errorMessageToast</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>exceptionMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recommendations</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Recommendation__c</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>requestTopUpBody</name>
        <apexClass>ExternalService__AdviceSlidesV2_GSlidesJobTopUpBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>requestWithdrawalBody</name>
        <apexClass>ExternalService__AdviceSlidesV2_GSlidesJobWithdrawalBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>responseCode</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>reviewBody</name>
        <apexClass>ExternalService__AdviceSlidesV2_GSlidesJobReviewBody</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
