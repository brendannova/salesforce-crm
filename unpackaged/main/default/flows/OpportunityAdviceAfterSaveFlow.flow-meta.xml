<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>GetRecordTypeIdCaseOffboarding</name>
        <label>Get record type ID | Case | Offboarding</label>
        <locationX>50</locationX>
        <locationY>2447</locationY>
        <actionName>RecordTypeGetId</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Get_household_team_queue_ID</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordTypeDeveloperName</name>
            <value>
                <stringValue>Offboarding</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sObjectType</name>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </inputParameters>
        <nameSegment>RecordTypeGetId</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <decisions>
        <name>DB_advice_mentioned</name>
        <label>DB advice mentioned</label>
        <locationX>622</locationX>
        <locationY>623</locationY>
        <defaultConnector>
            <targetReference>Disco_deck_moved_to_partner_review</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>db_advice_mentioned_opp</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.DB_Pension_Mentioned__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_triage_task</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Disco_deck_moved_to_complete</name>
        <label>Disco deck moved to complete</label>
        <locationX>622</locationX>
        <locationY>1331</locationY>
        <defaultConnector>
            <targetReference>Scope_sent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YesDeckComplete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Discovery_Deck_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Complete</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Discovery_Deck_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Complete</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_non_personalised_deck_task</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Disco_deck_moved_to_partner_review</name>
        <label>Disco deck moved to partner review</label>
        <locationX>622</locationX>
        <locationY>923</locationY>
        <defaultConnector>
            <targetReference>Disco_deck_moved_to_complete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Discovery_Deck_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partner Review</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Discovery_Deck_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Partner Review</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_partner_disco_deck_review_task</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Disco_meeting_booked</name>
        <label>Disco meeting booked</label>
        <locationX>622</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>DB_advice_mentioned</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>N/A</defaultConnectorLabel>
        <rules>
            <name>Disco_booked</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Discovery_Meeting_Date_Time__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_disco_meeting_debrief_task</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Disco booked</label>
        </rules>
    </decisions>
    <decisions>
        <name>Scope_sent</name>
        <label>Scope sent?</label>
        <locationX>622</locationX>
        <locationY>1631</locationY>
        <defaultConnector>
            <targetReference>Scope_signed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ScopeWasSent</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Scope_of_Advice_status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Sent to client</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Scope_of_Advice_status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Accepted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Scope_of_Advice_status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Declined</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Close_send_scope_task</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Scope_signed</name>
        <label>Scope signed?</label>
        <locationX>622</locationX>
        <locationY>1931</locationY>
        <defaultConnector>
            <targetReference>Status_updated</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_scope_signed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.FinServ__Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Prospect</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Date_scope_of_advice_accepted__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_account_sub_status_to_scope_signed</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Status_updated</name>
        <label>Status updated</label>
        <locationX>622</locationX>
        <locationY>2339</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Lost</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Lost</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetRecordTypeIdCaseOffboarding</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Lost</label>
        </rules>
        <rules>
            <name>Created_for_withdrawn_client</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.FinServ__Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Withdrawn</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_status</targetReference>
            </connector>
            <label>Created for withdrawn client</label>
        </rules>
        <rules>
            <name>Won</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsWon</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Was_DB_advice_mentioned_in_disco</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Won</label>
        </rules>
    </decisions>
    <decisions>
        <name>Was_DB_advice_mentioned_in_disco</name>
        <label>Was DB advice mentioned in disco?</label>
        <locationX>798</locationX>
        <locationY>2447</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesDbAdviceMentioned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.DB_Transfer_Advice_Mentioned_Meeting__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Yes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_send_triage_doc_task</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Runs after an advice opportunity is created or edited to trigger follow on actions such as creating tasks and cases.</description>
    <environments>Default</environments>
    <formulas>
        <name>caseSubject</name>
        <dataType>String</dataType>
        <expression>{!$Record.Household_Account__r.Name} + &quot; - Withdrawal&quot;</expression>
    </formulas>
    <formulas>
        <description>Returns true if this is a new opportunity</description>
        <name>isNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>Opportunity | Advice | After Save Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity | Advice | After Save Flow</label>
    <loops>
        <name>Loop_through_ACRs_created</name>
        <label>Loop through ACRs</label>
        <locationX>402</locationX>
        <locationY>2663</locationY>
        <collectionReference>Get_ACRs_created</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_person_account_created</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_withdrawal_case</name>
        <label>Create withdrawal case</label>
        <locationX>50</locationX>
        <locationY>2663</locationY>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DateOfRequest__c</field>
            <value>
                <elementReference>$Record.Lost_Date__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>FinServ__Household__c</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OW_household__c</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Origin</field>
            <value>
                <stringValue>Internal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_household_team_queue_ID.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>GetRecordTypeIdCaseOffboarding.recordTypeId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>caseSubject</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>OFFBOARDING_DURING_DISCOVERY</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_ACRs_created</name>
        <label>Get ACRs</label>
        <locationX>402</locationX>
        <locationY>2555</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_through_ACRs_created</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Roles</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Client</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountContactRelation</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_household_team_queue_ID</name>
        <label>Get household team queue ID</label>
        <locationX>50</locationX>
        <locationY>2555</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_withdrawal_case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.OW_queue__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_person_account_created</name>
        <label>Get person account</label>
        <locationX>490</locationX>
        <locationY>2771</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Udate_person_statuses_created</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>PersonContactId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_through_ACRs_created.ContactId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Close_chase_scope_task</name>
        <label>Close chase scope task</label>
        <locationX>490</locationX>
        <locationY>2147</locationY>
        <connector>
            <targetReference>Status_updated</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>OW_task_information_name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>chase_scope_of_advice</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <recordUpdates>
        <name>Close_send_scope_task</name>
        <label>Close send scope task</label>
        <locationX>490</locationX>
        <locationY>1739</locationY>
        <connector>
            <targetReference>Scope_signed</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>OW_task_information_name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>send_scope_of_advice</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OrchestrationTaskStatus__c</field>
            <value>
                <stringValue>Complete</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <recordUpdates>
        <name>Set_account_sub_status_to_scope_signed</name>
        <label>Set account sub status to scope signed</label>
        <locationX>490</locationX>
        <locationY>2039</locationY>
        <connector>
            <targetReference>Close_chase_scope_task</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OW_sub_status__c</field>
            <value>
                <stringValue>Scope Signed</stringValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_non_personalised_deck_task</name>
        <label>Update non personalised deck task</label>
        <locationX>490</locationX>
        <locationY>1439</locationY>
        <connector>
            <targetReference>Scope_sent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>OW_task_information_name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>create_np_disco_deck</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OrchestrationTaskStatus__c</field>
            <value>
                <stringValue>Complete</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_task</name>
        <label>Update task</label>
        <locationX>490</locationX>
        <locationY>1139</locationY>
        <connector>
            <targetReference>Disco_deck_moved_to_complete</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>OW_task_information_name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>create_p_disco_deck</stringValue>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OrchestrationTaskStatus__c</field>
            <value>
                <stringValue>Complete</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <start>
        <locationX>496</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Disco_meeting_booked</targetReference>
        </connector>
        <filterFormula>{!$Record.RecordType.DeveloperName} = &quot;Advice_Opportunity&quot;</filterFormula>
        <object>Opportunity</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>Create_disco_meeting_debrief_task</name>
        <label>Create disco meeting debrief task</label>
        <locationX>490</locationX>
        <locationY>431</locationY>
        <connector>
            <targetReference>DB_advice_mentioned</targetReference>
        </connector>
        <flowName>OW_task_create_from_task_information</flowName>
        <inputAssignments>
            <name>due_date_input</name>
            <value>
                <elementReference>$Record.Discovery_Meeting_Date_Time__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>household_id</name>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>related_opportunity</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>task_type</name>
            <value>
                <stringValue>discovery_meeting_debrief</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>what_id</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Create_partner_disco_deck_review_task</name>
        <label>Create partner disco deck review task</label>
        <locationX>490</locationX>
        <locationY>1031</locationY>
        <connector>
            <targetReference>Update_task</targetReference>
        </connector>
        <flowName>OW_task_create_from_task_information</flowName>
        <inputAssignments>
            <name>household_id</name>
            <value>
                <elementReference>$Record.Household_Account__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>related_opportunity</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>task_type</name>
            <value>
                <stringValue>review_discovery_deck</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>what_id</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>Create_send_triage_doc_task</name>
        <label>Create send triage doc task</label>
        <locationX>666</locationX>
        <locationY>2555</locationY>
        <flowName>OW_task_create_from_task_information</flowName>
        <inputAssignments>
            <name>household_id</name>
            <value>
                <elementReference>$Record.Household_Account__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>task_type</name>
            <value>
                <stringValue>send_db_triage_doc</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>what_id</name>
            <value>
                <elementReference>$Record.Household_Account__c</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Create_triage_task</name>
        <label>Create triage task</label>
        <locationX>490</locationX>
        <locationY>731</locationY>
        <connector>
            <targetReference>Disco_deck_moved_to_partner_review</targetReference>
        </connector>
        <flowName>OW_task_create_from_task_information</flowName>
        <inputAssignments>
            <name>household_id</name>
            <value>
                <elementReference>$Record.Household_Account__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>task_type</name>
            <value>
                <stringValue>send_db_triage_doc</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>what_id</name>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <subflows>
        <name>Udate_person_statuses_created</name>
        <label>Udate person statuses</label>
        <locationX>490</locationX>
        <locationY>2879</locationY>
        <connector>
            <targetReference>Loop_through_ACRs_created</targetReference>
        </connector>
        <flowName>OW_account_party_state_manager</flowName>
        <inputAssignments>
            <name>eventType</name>
            <value>
                <stringValue>OPPORTUNITY_CREATED</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>partyId</name>
            <value>
                <elementReference>Get_person_account_created.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>Update_status</name>
        <label>Update household status</label>
        <locationX>402</locationX>
        <locationY>2447</locationY>
        <connector>
            <targetReference>Get_ACRs_created</targetReference>
        </connector>
        <flowName>OW_account_party_state_manager</flowName>
        <inputAssignments>
            <name>eventType</name>
            <value>
                <stringValue>OPPORTUNITY_CREATED</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>partyId</name>
            <value>
                <elementReference>$Record.Household_Account__c</elementReference>
            </value>
        </inputAssignments>
    </subflows>
</Flow>
