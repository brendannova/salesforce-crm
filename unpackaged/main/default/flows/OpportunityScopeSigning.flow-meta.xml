<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Set_error_message_disco</name>
        <label>Set error message</label>
        <locationX>512</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The discovery meeting date/time is not recorded for this opportunity. Please close this window and record that before trying again. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_Screen_Not_Supported</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_error_message_unsupported_record_type</name>
        <label>Set error message</label>
        <locationX>1040</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>errorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>This opportunity is not supported. Please raise a ticket for the product team to investigate.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Error_Screen_Not_Supported</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Disco_meeting_date_time_recorded</name>
        <label>Disco meeting date/time recorded?</label>
        <locationX>380</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>Set_error_message_disco</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not recorded</defaultConnectorLabel>
        <rules>
            <name>Recorded</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_opportunity.Discovery_Meeting_Date_Time__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Collect_scope_sent_details</targetReference>
            </connector>
            <label>Recorded</label>
        </rules>
    </decisions>
    <decisions>
        <name>Opportunity_type</name>
        <label>Opportunity type</label>
        <locationX>710</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>Set_error_message_unsupported_record_type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other</defaultConnectorLabel>
        <rules>
            <name>Advice_Discovery</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_opportunity.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Advice_Opportunity</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Disco_meeting_date_time_recorded</targetReference>
            </connector>
            <label>Advice | Discovery</label>
        </rules>
        <rules>
            <name>Advice_Fast_Track</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_opportunity.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AdviceFastTrack</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_household_to_set_scope_signed</targetReference>
            </connector>
            <label>Advice | Fast Track</label>
        </rules>
    </decisions>
    <decisions>
        <name>Scope_status_decision</name>
        <label>Scope status</label>
        <locationX>710</locationX>
        <locationY>908</locationY>
        <defaultConnector>
            <targetReference>Set_opportunity_status_to_await_decision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Awaiting decision</defaultConnectorLabel>
        <rules>
            <name>Accepted_or_fast_track</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Scope_status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Accepted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_opportunity.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AdviceFastTrack</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Call_vulnerability_sub_flow</targetReference>
            </connector>
            <label>Accepted or fast track</label>
        </rules>
        <rules>
            <name>Declined</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Scope_status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Declined</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Call_opportunity_lost_flow</targetReference>
            </connector>
            <label>Declined</label>
        </rules>
        <rules>
            <name>To_be_sent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Scope_status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>To be sent</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_scope_status_to_to_be_sent</targetReference>
            </connector>
            <label>To be sent</label>
        </rules>
    </decisions>
    <description>Walks a user through the process of recording that scope has been signed and other actions that are required before we gets terms signed, like conflict of interest, consumer duty segmentation, and vulnerability.</description>
    <dynamicChoiceSets>
        <name>ScopeAcceptanceMediumChoice</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true" />
        <object xsi:nil="true" />
        <picklistField>Medium_of_Scope_Acceptance__c</picklistField>
        <picklistObject>Opportunity</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>ScopeStatusChoice</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true" />
        <object xsi:nil="true" />
        <picklistField>Scope_of_Advice_status__c</picklistField>
        <picklistObject>Opportunity</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <interviewLabel>Opportunity - scope signing {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity | Scope signing</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_opportunity</name>
        <label>Get opportunity</label>
        <locationX>710</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Opportunity_type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Set_opportunity_status_to_await_decision</name>
        <label>Set opportunity status to await decision</label>
        <locationX>1370</locationX>
        <locationY>1016</locationY>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Date_scope_of_advice_sent__c</field>
            <value>
                <elementReference>Date_scope_sent</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Scope_of_Advice_status__c</field>
            <value>
                <elementReference>Scope_status</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StageName</field>
            <value>
                <stringValue>Await decision</stringValue>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <recordUpdates>
        <name>Set_scope_status_to_to_be_sent</name>
        <label>Set scope status to to be sent</label>
        <locationX>1106</locationX>
        <locationY>1016</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Scope_of_Advice_status__c</field>
            <value>
                <elementReference>Scope_status</elementReference>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_household_to_set_scope_signed</name>
        <label>Update household to set scope signed</label>
        <locationX>776</locationX>
        <locationY>350</locationY>
        <connector>
            <targetReference>CallClientSegmentationScreenFlow</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_opportunity.AccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OW_sub_status__c</field>
            <value>
                <stringValue>Scope Signed</stringValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_opportunity</name>
        <label>Update opportunity</label>
        <locationX>50</locationX>
        <locationY>1232</locationY>
        <connector>
            <targetReference>CongratsScreen</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Date_scope_of_advice_accepted__c</field>
            <value>
                <elementReference>Date_scope_accepted</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Date_scope_of_advice_sent__c</field>
            <value>
                <elementReference>Date_scope_sent</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Medium_of_Scope_Acceptance__c</field>
            <value>
                <elementReference>Medium_of_scope_acceptance</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Scope_of_Advice_URL__c</field>
            <value>
                <elementReference>Scope_of_advice_URL.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Scope_of_Advice_status__c</field>
            <value>
                <elementReference>Scope_status</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StageName</field>
            <value>
                <stringValue>Await terms</stringValue>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_scope_fields</name>
        <label>Update scope fields</label>
        <locationX>578</locationX>
        <locationY>1124</locationY>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_screen</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Date_scope_of_advice_sent__c</field>
            <value>
                <elementReference>Date_scope_sent</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Scope_of_Advice_status__c</field>
            <value>
                <elementReference>Scope_status</elementReference>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <screens>
        <name>Collect_scope_sent_details</name>
        <label>Collect scope sent details</label>
        <locationX>248</locationX>
        <locationY>458</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>CallClientSegmentationScreenFlow</targetReference>
        </connector>
        <fields>
            <name>Date_scope_sent</name>
            <dataType>Date</dataType>
            <defaultValue>
                <elementReference>Get_opportunity.Date_scope_of_advice_sent__c</elementReference>
            </defaultValue>
            <fieldText>Date scope sent</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;The scope sent date must be on or after the discovery meeting date, {!Get_opportunity.Discovery_Meeting_Date_Time__c}.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!Date_scope_sent} &gt;= DATEVALUE({!Get_opportunity.Discovery_Meeting_Date_Time__c})</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>Scope_status</name>
            <choiceReferences>ScopeStatusChoice</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Scope status</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Date_scope_accepted</name>
            <dataType>Date</dataType>
            <fieldText>Date scope accepted</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;The scope accepted date must be on or after the date the scope was sent.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!Date_scope_accepted} &gt;= {!Date_scope_sent}</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Scope_status</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Accepted</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Medium_of_scope_acceptance</name>
            <choiceReferences>ScopeAcceptanceMediumChoice</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Medium of scope acceptance</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Scope_status</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Accepted</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Scope_of_advice_URL</name>
            <extensionName>flowruntime:url</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>readonly</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Scope of advice URL</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Scope_status</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Accepted</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>CongratsScreen</name>
        <label>Display congratulations</label>
        <locationX>50</locationX>
        <locationY>1340</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>CongratsText</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 16px;&quot;&gt;Congratulations! &lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Please go forth and send them terms of business.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Error_screen</name>
        <label>Error screen</label>
        <locationX>314</locationX>
        <locationY>1340</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorText</name>
            <fieldText>&lt;p&gt;Unable to update Salesforce. See the error below:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Error_Screen_Not_Supported</name>
        <label>Error Screen</label>
        <locationX>1040</locationX>
        <locationY>458</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>DisplayErrorNotSupported</name>
            <fieldText>&lt;p&gt;{!errorMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>584</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_opportunity</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Call_conflict_of_interest_sub_flow</name>
        <label>Call conflict of interest sub flow</label>
        <locationX>50</locationX>
        <locationY>1124</locationY>
        <connector>
            <targetReference>Update_opportunity</targetReference>
        </connector>
        <flowName>FactsManageConflictOfInterest</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>Call_opportunity_lost_flow</name>
        <label>Call opportunity lost flow</label>
        <locationX>578</locationX>
        <locationY>1016</locationY>
        <connector>
            <targetReference>Update_scope_fields</targetReference>
        </connector>
        <flowName>OpportunityMarkAsLost</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>Call_vulnerability_sub_flow</name>
        <label>Call vulnerability sub flow</label>
        <locationX>50</locationX>
        <locationY>1016</locationY>
        <connector>
            <targetReference>Call_conflict_of_interest_sub_flow</targetReference>
        </connector>
        <flowName>FactsManageHouseholdVulnerability</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>CallClientSegmentationScreenFlow</name>
        <label>Call Client Segmentation screen flow</label>
        <locationX>710</locationX>
        <locationY>800</locationY>
        <connector>
            <targetReference>Scope_status_decision</targetReference>
        </connector>
        <flowName>AccountConsumerDutyClientSegmentationNewClient</flowName>
        <inputAssignments>
            <name>AccountId</name>
            <value>
                <elementReference>Get_opportunity.AccountId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <description>Stores an error message that can be displayed on a single error screen.</description>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
