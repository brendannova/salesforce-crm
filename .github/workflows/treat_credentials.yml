name: Scrambled Named Credentials

on:
  # This allows the workflow to be triggered manually from the GitHub Actions tab.
  # It also defines a single input for the sandbox name.
  workflow_dispatch:
    inputs:
      sandboxName:
        description: 'Name of the Salesforce sandbox to populate data'
        required: true
        type: string

jobs:
  process-named-credentials:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install xmlstarlet
        run: sudo apt-get install -y xmlstarlet

      # Step 2: Install and set up the Salesforce CLI.
      - name: Install Salesforce CLI
        run: |
          npm install @salesforce/cli --global

      - name: Authenticate with Salesforce
        env:
          SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
        run: |
          echo "Authenticating to Salesforce dev hub using auth URL..."
          sf org login sfdx-url --sfdx-url-file <(echo "$SF_AUTH_URL") --set-default-dev-hub --set-default 

      - name: Authenticate with Salesforce Sandbox
        env:
          SANDBOX_NAME: ${{ github.event.inputs.sandboxName }}
        run: |
          echo "Authenticating to Salesforce dev hub using auth URL..."
          sf org resume sandbox --name=$SANDBOX_NAME

      - name: Retrieve Creds from Sandbox
        env:
          SANDBOX_NAME: ${{ github.event.inputs.sandboxName }}
          SF_USER:  ${{ secrets.SF_USER }}
        run: |
          echo "Authenticating to Salesforce dev hub using auth URL..."
          sf project retrieve start -o $SF_USER.$SANDBOX_NAME  -m NamedCredential -m AuthProvider

      - name: Run XML update script
        run: scripts/bash/scramble_creds.sh

      - name: Deploy Scribbed Changes
        env:
          SANDBOX_NAME: ${{ github.event.inputs.sandboxName }}
          SF_USER:  ${{ secrets.SF_USER }}
        run: |
          sf project deploy start -o $SF_USER.$SANDBOX_NAME -m NamedCredential --ignore-conflicts --dry-run
